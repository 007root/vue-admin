{"version":3,"sources":["webpack:///static/js/vendor.e7cb72f0b0b115fa4b2d.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/animejs/anime.min.js","webpack:///./~/chart.js/dist/Chart.js","webpack:///./~/nprogress/nprogress.js","webpack:///./~/font-awesome/fonts/fontawesome-webfont.eot","webpack:///./~/font-awesome/fonts/fontawesome-webfont.ttf","webpack:///./~/font-awesome/fonts/fontawesome-webfont.woff2","webpack:///./~/font-awesome/fonts/fontawesome-webfont.woff","webpack:///./~/font-awesome/fonts/fontawesome-webfont.svg","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vuex/dist/vuex.js"],"names":["webpackJsonp","1","module","exports","list","toString","result","i","this","length","item","push","join","modules","mediaQuery","alreadyImportedModules","id","2","__webpack_require__","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","obj","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","3","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","call","isLiteral","exp","literalValueRE","isReserved","str","c","charCodeAt","_toString","value","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","start","ret","Array","extend","to","from","keys","Object","isObject","isPlainObject","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","later","last","Date","now","setTimeout","arr","cancellable","cb","cancelled","cancel","looseEqual","Cache","limit","size","tail","undefined","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","el","target","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","prototype","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","p","entry","shift","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","87","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","r","duration","loop","autoplay","easing","elasticity","round","begin","complete","array","object","NodeList","HTMLCollection","svg","SVGElement","string","undef","null","hex","rgb","rgba","hsl","color","z","Sine","cos","PI","Circ","sqrt","Elastic","min","h","pow","sin","asin","Back","Bounce","d","linear","u","A","B","v","C","N","D","O","P","E","F","x","getPropertyValue","Q","transform","G","H","I","numbers","strings","R","S","T","J","U","animatables","speed","V","totalDuration","y","tweens","reversed","K","properties","elements","W","willChange","X","removeProperty","Y","getPointAtLength","atan2","Z","max","L","time","progress","currentValue","settings","M","targets","running","ended","tick","pause","seek","cancelAnimationFrame","play","restart","easings","getTotalLength","random","132","define","amd","Chart","o","require","getRgba","abbr","per","keyword","colorNames","scale","getHsla","alpha","getHwb","hwb","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","6","Color","values","hsv","cmyk","setValues","red","lightness","whiteness","cyan","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","error","spaces","maxes","getValues","chans","capped","sname","svalues","5","4","rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","conversions","Converter","pair","convs","routeSpace","fspace","7","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","8","9","Bar","Bubble","Doughnut","Line","PolarArea","Radar","helpers","configMerge","aspectRatio","defaultConfig","hover","scales","xAxes","position","yAxes","tooltips","title","tooltipItems","label","tooltipItem","xLabel","yLabel","defaults","scatter","controllers","Scatter","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","dataElementType","Rectangle","initialize","chart","datasetIndex","getMeta","getBarCount","me","barCount","each","datasets","dataset","meta","getDatasetMeta","isDatasetVisible","rectangle","updateElement","xScale","getScaleForId","xAxisID","yScale","yAxisID","scaleBase","getBasePixel","rectangleElementOptions","custom","getDataset","_xScale","_yScale","_datasetIndex","_index","_model","calculateBarX","calculateBarY","labels","datasetLabel","base","calculateBarBase","calculateBarWidth","backgroundColor","getValueAtIndexOrDefault","borderSkipped","borderColor","borderWidth","pivot","stacked","negDS","negDSMeta","posDS","posDSMeta","getPixelForValue","getRuler","tickWidth","datasetCount","getPixelForTick","ticks","categoryWidth","categorySpacing","fullBarWidth","perc","barWidth","barSpacing","ruler","getBarIndex","barIndex","leftTick","isCombo","sumPos","sumNeg","ds","dsMeta","draw","ease","easingDecimal","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","horizontalBar","numBars","calculateBarHeight","cornerAt","corners","startCorner","_chart","_view","halfHeight","topY","bottomY","halfStroke","beginPath","fillStyle","strokeStyle","lineWidth","borders","moveTo","lineTo","fill","stroke","inRange","mouseX","mouseY","tickHeight","categoryHeight","fullBarHeight","barHeight","topTick","bubble","dataPoint","Point","points","point","pointElementOptions","dsIndex","getPixelForDecimal","radius","getRadius","hitRadius","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","legendCallback","generateLabels","arc","arcOpts","bw","onClick","legendItem","ilen","cutoutPercentage","rotation","circumference","pie","Arc","linkScales","getRingIndex","ringIndex","chartArea","opts","availableWidth","availableHeight","bottom","top","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","lineEnabled","getValueOrDefault","showLine","showLines","datasetElementType","addElementAndReset","tension","updateBezierControlPoints","lineElementOptions","lineTension","_scale","_children","spanGaps","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","scaleTop","scaleBottom","scaleZero","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","pointRadius","pointHitRadius","calculatePointY","pointStyle","controlPoints","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","lineArc","countVisibleElements","visibleCount","negHalfPI","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","getBasePosition","pointPosition","getPointPositionForValue","xCenter","yCenter","onProgress","onComplete","Animation","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","chartInstance","animationObject","animating","cancelAnimation","findIndex","animationWrapper","requestAnimFrame","startDigest","startTime","framesToDrop","endTime","types","instances","Controller","instance","responsive","resize","plugins","bindEvents","ensureScalesHaveIDs","buildOrUpdateControllers","buildScales","updateLayout","resetElements","initToolTip","canvas","newWidth","getMaximumWidth","newHeight","maintainAspectRatio","getMaximumHeight","sizeChanged","retinaScale","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","dtype","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","layoutService","newControllers","controller","updateIndex","animationDuration","tooltip","buildOrUpdateElements","updateDatasets","animationOptions","easingFunction","easingEffects","stepDecimal","easeDecimal","boxes","box","getElementAtEvent","eventPosition","getRelativePosition","elementsArray","getElementsAtEvent","found","getElementsAtEventForMode","getDatasetAtEvent","generateLegend","unbindEvents","removeResizeListener","originalDevicePixelRatio","originalCanvasStyleWidth","originalCanvasStyleHeight","toBase64Image","toDataURL","Tooltip","_chartInstance","_options","evt","eventHandler","updateHoverStyle","enabled","hoverOptions","tooltipsOptions","lastActive","lastTooltipActive","tooltipActive","onHover","handleEvent","_active","arrayEquals","addElements","scaleID","createMetaDataset","createMetaData","metaData","md","numData","numMetaData","elementOpts","valueOrDefault","inherits","configuration","_start","err","startVal","tooltipPosition","hasValue","isNumber","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","view","defaultView","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","POSITIVE_INFINITY","loopable","callback","reverse","len","objClone","setFn","_base","extension","scaleMerge","getScaleDefaults","baseArray","valueObj","axisType","axisDefaults","defaultValue","where","collection","filterCallback","filtered","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","Surrogate","__super__","almostEquals","epsilon","NEGATIVE_INFINITY","log10","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","niceNum","niceFraction","exponent","fraction","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","cancelAnimFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","originalEvent","srcElement","boundingRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","attachEvent","removeEvent","detachEvent","arrayOfEvents","eventName","getConstraintWidth","getConstraintHeight","padding","clientWidth","cw","clientHeight","currentStyle","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","drawRoundedRectangle","quadraticCurveTo","closePath","CanvasGradient","defaultColor","addResizeListener","hiddenIframe","hiddenIframeClass","classlist","border","margin","onresize","a0","a1","v0","v1","callCallback","_tArg","CanvasPattern","getContext","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","addBox","removeBox","getMinimumBoxSize","isHorizontal","fullWidth","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","chartAreaHeight","minBoxSizes","horizontal","fitBox","minBoxSize","scaleMargin","totalLeftBoxesWidth","totalRightBoxesWidth","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","xPadding","yPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","newMaxChartAreaHeight","newMaxChartAreaWidth","ci","boxWidth","lineCap","lineDash","lineDashOffset","lineJoin","Legend","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","legendItems","labelOpts","globalDefault","itemOrDefault","fontSize","labelFont","hitboxes","lineWidths","totalHeight","textAlign","textBaseline","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","fontColor","drawLegendBox","setLineDash","strokeRect","fillRect","fillText","lh","hitBox","beforeInit","legendOpts","_plugins","unregister","getAll","PluginBase","afterInit","beforeDraw","afterDraw","pluginService","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Scale","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","numericalTick","userCallback","globalDefaults","optionTicks","tickFontSize","tickFontStyle","tickFontFamily","tickLabelFont","firstRotated","firstWidth","lastWidth","labelRotation","longestTextCache","cosRotation","sinRotation","originalLabelWidth","labelWidth","yLabelWidth","tickOpts","scaleLabelOpts","scaleLabelFontSize","scaleLabelFontStyle","scaleLabelFontFamily","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","maxLabelWidth","getRightValue","NaN","getLabelForIndex","getValueForPixel","includeOffset","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","skipRatio","maxTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","shouldSkip","lineColor","zeroLineIndex","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","xLineValue","yLineValue","glWidth","glColor","itemToDraw","translate","scaleLabelX","scaleLabelY","isLeft","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","Title","chartOpts","pos","titleX","titleY","titleFont","titleOpts","titleBlock","pushOrConcat","toPush","getAveragePosition","xPositions","yPositions","createTooltipItem","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yAlign","xAlign","caretSize","cornerRadius","multiKeyBackground","beforeTitle","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","afterLabel","afterBody","beforeFooter","footer","afterFooter","tooltipOpts","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","getAfterBody","getFooter","changed","labelColors","itemSort","caretPadding","tooltipSize","getTooltipSize","determineAlignment","getBackgroundPoint","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","lf","rf","olf","orf","yf","midX","midY","pt","paddingAndSize","radiusAndPadding","drawCaret","tooltipPoint","x3","y3","ptX","ptY","bgColor","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","moment","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","centreAngle","rangeFromCentre","sA","eA","lineToNextPoint","previousPoint","nextPoint","skipHandler","previousSkipHandler","bezierCurveTo","loopBackToStart","drawLineToCenter","globalOptionLineElements","edgeLength","xOffset","yOffset","drawImage","SQRT2","halfWidth","leftX","rightX","DatasetScale","minIndex","maxIndex","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","innerDimension","valueDimension","tickValue","logDelta","tickString","numDecimal","LinearScale","LinearScaleBase","IDMatches","valuesPerType","hasPositiveValues","hasNegativeValues","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","ceil","handleDirectionalChanges","rightValue","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","spacing","fixedStepSizeSet","fixedStepSize","stepSize","niceRange","niceMin","niceMax","numSpaces","remain","toExponential","LogarithmicScale","tickVal","significand","lastTick","tickValues","animate","angleLines","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","LinearRadialScale","getValueCount","drawingArea","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","pointLabelFontSize","pointLabeFontStyle","pointLabeFontFamily","pointLabeFont","largestPossibleRadius","furthestRight","furthestLeft","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","angleMultiplier","scalingFactor","distanceFromCenter","thisAngle","gridLineOpts","angleLineOpts","pointLabelOpts","yCenterOffset","yHeight","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","units","steps","maxStep","parser","format","unit","displayFormat","isoWeekday","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","TimeScale","getLabelMoment","labelMoments","getMomentStartOf","startOf","tickUnit","scaleLabelMoments","labelMoment","parseTime","isValid","firstTick","momentsForDataset","datasetVisible","unitScale","scaleSizeInUnits","unitStepSize","tempFirstLabel","tickFormatFunction","tickLabelWidth","labelCapacity","unitDefinitionIndex","unitDefinition","leadingUnitBuffer","trailingUnitBuffer","roundedStart","roundedEnd","smallestLabelSeparation","newTick","tooltipFormat","formattedTick","tickMoments","asSeconds","getMonth","231","root","clamp","toBarPerc","barPositionCSS","barCSS","Settings","positionUsing","margin-left","hasClass","oldList","substring","removeElement","NProgress","minimum","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","spinnerSelector","configure","status","started","isStarted","getPositioningCSS","work","force","inc","amount","initial","promise","$promise","state","always","fromStart","isRendered","spinner","bodyStyle","vendorPrefix","camelCase","letter","getVendorProp","vendorName","cssPrefixes","capName","getStyleProp","cssProps","applyCss","233","234","235","236","237","238","285","Promise$2","executor","PENDING","deferred","resolve","reject","Promise$1","PromiseObj","Util","msg","isBoolean","isFunction","getPrototypeOf","isFormData","FormData","when","fulfilled","rejected","then","merge","$vm","_merge","_assign","url","urlParams","Url","expand","variables","tmpl","expanded","vars","operators","operator","substr","variable","separator","encodeReserved","modifier","isDefined","encodeValue","isKeyOperator","encodeURI","transforms","serialize","plain","xdrClient","xdr","XDomainRequest","response","respondWith","responseText","statusText","abort","getUrl","onload","onerror","ontimeout","onprogress","send","cors","crossOrigin","SUPPORTS_CORS","client","emulateHTTP","requestUrl","protocol","ORIGIN_URL","emulateJSON","headers","contentType","jsonpClient","script","jsonp","header","assign","Http","common","xhrClient","xhr","XMLHttpRequest","parseHeaders","getAllResponseHeaders","upload","credentials","withCredentials","setRequestHeader","row","Client","reqHandlers","pop","resHandlers","sendRequest","interceptors","Request","ok","Resource","resource","$http","http","Promise","$url","$resource","RESOLVED","REJECTED","all","iterable","resolver","race","TypeError","onResolved","onRejected","ie","documentMode","escape","href","port","hostname","pathname","location","classCallCheck","Constructor","Response","blob","Blob","CUSTOM_HEADERS","X-Requested-With","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","post","patch","286","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","relative","stack","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","router","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","$route","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pageXOffset","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reuseQueue","runQueue","_onTransitionValidated","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","afterEach","App","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","287","mergeObjects","existing","deepClone","_typeof","getWatcher","getDep","override","vuexInit","store","vuex","$store","getters","defineVuexGetter","makeBoundAction","_getterCacheId","_vm","computedGetter","_len","_key2","usesInit","_lifecycleHooks","beforeCreate","_Vue","Symbol","protoProps","staticProps","toConsumableArray","arr2","devtoolMiddleware","onInit","targetState","_dispatching","onMutation","mutation","Store","_ref$state","_ref$mutations","mutations","_ref$modules","_ref$middlewares","middlewares","_ref$strict","strict","_rootMutations","_mutations","_modules","dispatch","_setupModuleState","_setupModuleMutations","_setupMiddlewares","_setupMutationCheck","_len2","payload","_applyMiddlewares","_ref2","updatedModules","allMutations","_len3","_key3","_this4","_middlewares","_needSnapshots","snapshot","initialSnapshot","_prevSnapshot","_this5","prevSnapshot","clonedPayload"],"mappings":"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","file":"static/js/vendor.e7cb72f0b0b115fa4b2d.js","sourcesContent":["webpackJsonp([3,1],{\n\n/***/ 1:\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 87:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * Anime v1.0.0\n\t * http://anime-js.com\n\t * JavaScript animation engine\n\t * Copyright (c) 2016 Julian Garnier\n\t * http://juliangarnier.com\n\t * Released under the MIT license\n\t */\n\t(function(r,n){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (n), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):\"object\"===typeof module&&module.exports?module.exports=n():r.anime=n()})(this,function(){var r={duration:1E3,delay:0,loop:!1,autoplay:!0,direction:\"normal\",easing:\"easeOutElastic\",elasticity:400,round:!1,begin:void 0,update:void 0,complete:void 0},n=\"translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY\".split(\" \"),e=function(){return{array:function(a){return Array.isArray(a)},object:function(a){return-1<\n\tObject.prototype.toString.call(a).indexOf(\"Object\")},html:function(a){return a instanceof NodeList||a instanceof HTMLCollection},node:function(a){return a.nodeType},svg:function(a){return a instanceof SVGElement},number:function(a){return!isNaN(parseInt(a))},string:function(a){return\"string\"===typeof a},func:function(a){return\"function\"===typeof a},undef:function(a){return\"undefined\"===typeof a},\"null\":function(a){return\"null\"===typeof a},hex:function(a){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)},\n\trgb:function(a){return/^rgb/.test(a)},rgba:function(a){return/^rgba/.test(a)},hsl:function(a){return/^hsl/.test(a)},color:function(a){return e.hex(a)||e.rgb(a)||e.rgba(a)||e.hsl(a)}}}(),z=function(){var a={},b={Sine:function(a){return 1-Math.cos(a*Math.PI/2)},Circ:function(a){return 1-Math.sqrt(1-a*a)},Elastic:function(a,b){if(0===a||1===a)return a;var f=1-Math.min(b,998)/1E3,h=a/1-1;return-(Math.pow(2,10*h)*Math.sin(2*(h-f/(2*Math.PI)*Math.asin(1))*Math.PI/f))},Back:function(a){return a*a*(3*a-2)},\n\tBounce:function(a){for(var b,f=4;a<((b=Math.pow(2,--f))-1)/11;);return 1/Math.pow(4,3-f)-7.5625*Math.pow((3*b-2)/22-a,2)}};[\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"].forEach(function(a,d){b[a]=function(a){return Math.pow(a,d+2)}});Object.keys(b).forEach(function(c){var d=b[c];a[\"easeIn\"+c]=d;a[\"easeOut\"+c]=function(a,b){return 1-d(1-a,b)};a[\"easeInOut\"+c]=function(a,b){return.5>a?d(2*a,b)/2:1-d(-2*a+2,b)/2}});a.linear=function(a){return a};return a}(),u=function(a){return e.string(a)?a:a+\"\"},A=function(a){return a.replace(/([a-z])([A-Z])/g,\n\t\"$1-$2\").toLowerCase()},B=function(a){if(e.color(a))return!1;try{return document.querySelectorAll(a)}catch(b){return!1}},v=function(a){return a.reduce(function(a,c){return a.concat(e.array(c)?v(c):c)},[])},p=function(a){if(e.array(a))return a;e.string(a)&&(a=B(a)||a);return e.html(a)?[].slice.call(a):[a]},C=function(a,b){return a.some(function(a){return a===b})},N=function(a,b){var c={};a.forEach(function(a){var f=JSON.stringify(b.map(function(b){return a[b]}));c[f]=c[f]||[];c[f].push(a)});return Object.keys(c).map(function(a){return c[a]})},\n\tD=function(a){return a.filter(function(a,c,d){return d.indexOf(a)===c})},w=function(a){var b={},c;for(c in a)b[c]=a[c];return b},t=function(a,b){for(var c in b)a[c]=e.undef(a[c])?b[c]:a[c];return a},O=function(a){a=a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(a,b,c,e){return b+b+c+c+e+e});var b=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);a=parseInt(b[1],16);var c=parseInt(b[2],16),b=parseInt(b[3],16);return\"rgb(\"+a+\",\"+c+\",\"+b+\")\"},P=function(a){a=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(a);\n\tvar b=parseInt(a[1])/360,c=parseInt(a[2])/100,d=parseInt(a[3])/100;a=function(a,b,c){0>c&&(c+=1);1<c&&--c;return c<1/6?a+6*(b-a)*c:.5>c?b:c<2/3?a+(b-a)*(2/3-c)*6:a};if(0==c)c=d=b=d;else var f=.5>d?d*(1+c):d+c-d*c,h=2*d-f,c=a(h,f,b+1/3),d=a(h,f,b),b=a(h,f,b-1/3);return\"rgb(\"+255*c+\",\"+255*d+\",\"+255*b+\")\"},k=function(a){return/([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(a)[2]},E=function(a,b,c){return k(b)?b:-1<a.indexOf(\"translate\")?k(c)?b+k(c):b+\"px\":-1<a.indexOf(\"rotate\")||\n\t-1<a.indexOf(\"skew\")?b+\"deg\":b},F=function(a,b){if((e.node(a)||e.svg(a))&&C(n,b))return\"transform\";if((e.node(a)||e.svg(a))&&\"transform\"!==b&&x(a,b))return\"css\";if((e.node(a)||e.svg(a))&&(a.getAttribute(b)||e.svg(a)&&a[b]))return\"attribute\";if(!e[\"null\"](a[b])&&!e.undef(a[b]))return\"object\"},x=function(a,b){if(b in a.style)return getComputedStyle(a).getPropertyValue(A(b))||\"0\"},Q=function(a,b){var c=-1<b.indexOf(\"scale\")?1:0,d=a.style.transform;if(!d)return c;for(var f=/(\\w+)\\((.+?)\\)/g,h=[],e=[],\n\tq=[];h=f.exec(d);)e.push(h[1]),q.push(h[2]);d=q.filter(function(a,c){return e[c]===b});return d.length?d[0]:c},G=function(a,b){switch(F(a,b)){case \"transform\":return Q(a,b);case \"css\":return x(a,b);case \"attribute\":return a.getAttribute(b)}return a[b]||0},H=function(a,b,c){if(e.color(b))return b=e.rgb(b)||e.rgba(b)?b:e.hex(b)?O(b):e.hsl(b)?P(b):void 0,b;if(k(b))return b;a=k(a.to)?k(a.to):k(a.from);!a&&c&&(a=k(c));return a?b+a:b},I=function(a){var b=/-?\\d*\\.?\\d+/g;return{original:a,numbers:u(a).match(b)?\n\tu(a).match(b).map(Number):[0],strings:u(a).split(b)}},R=function(a,b,c){return b.reduce(function(b,f,e){f=f?f:c[e-1];return b+a[e-1]+f})},S=function(a){a=a?v(e.array(a)?a.map(p):p(a)):[];return a.map(function(a,c){return{target:a,id:c}})},T=function(a,b){var c=[],d;for(d in a)if(!r.hasOwnProperty(d)&&\"targets\"!==d){var f=e.object(a[d])?w(a[d]):{value:a[d]};f.name=d;c.push(t(f,b))}return c},J=function(a,b,c,d){\"transform\"===c?(c=a+\"(\"+E(a,b.from,b.to)+\")\",b=a+\"(\"+E(a,b.to)+\")\"):(a=\"css\"===c?x(d,a):\n\tvoid 0,c=H(b,b.from,a),b=H(b,b.to,a));return{from:I(c),to:I(b)}},U=function(a,b){var c=[];a.forEach(function(d,f){var h=d.target;return b.forEach(function(b){var q=F(h,b.name);if(q){var k;k=b.name;var g=b.value,g=p(e.func(g)?g(h,f):g);k={from:1<g.length?g[0]:G(h,k),to:1<g.length?g[1]:g[0]};g=w(b);g.animatables=d;g.type=q;g.from=J(b.name,k,g.type,h).from;g.to=J(b.name,k,g.type,h).to;g.round=e.color(k.from)||g.round?1:0;g.delay=(e.func(g.delay)?g.delay(h,f,a.length):g.delay)/l.speed;g.duration=(e.func(g.duration)?\n\tg.duration(h,f,a.length):g.duration)/l.speed;c.push(g)}})});return c},V=function(a,b){var c=U(a,b);return N(c,[\"name\",\"from\",\"to\",\"delay\",\"duration\"]).map(function(a){var b=w(a[0]);b.animatables=a.map(function(a){return a.animatables});b.totalDuration=b.delay+b.duration;return b})},y=function(a,b){a.tweens.forEach(function(c){var d=c.from,f=a.duration-(c.delay+c.duration);c.from=c.to;c.to=d;b&&(c.delay=f)});a.reversed=a.reversed?!1:!0},K=function(a){var b=[],c=[];a.tweens.forEach(function(a){if(\"css\"===\n\ta.type||\"transform\"===a.type)b.push(\"css\"===a.type?A(a.name):\"transform\"),a.animatables.forEach(function(a){c.push(a.target)})});return{properties:D(b).join(\", \"),elements:D(c)}},W=function(a){var b=K(a);b.elements.forEach(function(a){a.style.willChange=b.properties})},X=function(a){K(a).elements.forEach(function(a){a.style.removeProperty(\"will-change\")})},Y=function(a,b){var c=a.path,d=a.value*b,f=function(f){f=f||0;return c.getPointAtLength(1<b?a.value+f:d+f)},e=f(),k=f(-1),f=f(1);switch(a.name){case \"translateX\":return e.x;\n\tcase \"translateY\":return e.y;case \"rotate\":return 180*Math.atan2(f.y-k.y,f.x-k.x)/Math.PI}},Z=function(a,b){var c=Math.min(Math.max(b-a.delay,0),a.duration)/a.duration,d=a.to.numbers.map(function(b,d){var e=a.from.numbers[d],k=z[a.easing](c,a.elasticity),e=a.path?Y(a,k):e+k*(b-e);return e=a.round?Math.round(e*a.round)/a.round:e});return R(d,a.to.strings,a.from.strings)},L=function(a,b){var c=void 0;a.time=Math.min(b,a.duration);a.progress=a.time/a.duration*100;a.tweens.forEach(function(a){a.currentValue=\n\tZ(a,b);var d=a.currentValue;a.animatables.forEach(function(b){var e=b.id;switch(a.type){case \"css\":b.target.style[a.name]=d;break;case \"attribute\":b.target.setAttribute(a.name,d);break;case \"object\":b.target[a.name]=d;break;case \"transform\":c||(c={}),c[e]||(c[e]=[]),c[e].push(d)}})});if(c)for(var d in c)a.animatables[d].target.style.transform=c[d].join(\" \");a.settings.update&&a.settings.update(a)},M=function(a){var b={};b.animatables=S(a.targets);b.settings=t(a,r);b.properties=T(a,b.settings);b.tweens=\n\tV(b.animatables,b.properties);b.duration=b.tweens.length?Math.max.apply(Math,b.tweens.map(function(a){return a.totalDuration})):a.duration/l.speed;b.time=0;b.progress=0;b.running=!1;b.ended=!1;return b},m=[],l=function(a){var b=M(a),c={tick:function(){if(b.running){b.ended=!1;c.now=+new Date;c.current=c.last+c.now-c.start;L(b,c.current);var a=b.settings;a.begin&&c.current>=a.delay&&(a.begin(b),a.begin=void 0);c.current>=b.duration?(a.loop?(c.start=+new Date,\"alternate\"===a.direction&&y(b,!0),e.number(a.loop)&&\n\ta.loop--,c.raf=requestAnimationFrame(c.tick)):(b.ended=!0,a.complete&&a.complete(b),b.pause()),c.last=0):c.raf=requestAnimationFrame(c.tick)}}};b.seek=function(a){L(b,a/100*b.duration)};b.pause=function(){b.running=!1;cancelAnimationFrame(c.raf);X(b);var a=m.indexOf(b);-1<a&&m.splice(a,1)};b.play=function(a){a&&(b=t(M(t(a,b.settings)),b));b.pause();b.running=!0;c.start=+new Date;c.last=b.ended?0:b.time;a=b.settings;\"reverse\"===a.direction&&y(b);\"alternate\"!==a.direction||a.loop||(a.loop=1);W(b);m.push(b);\n\tc.raf=requestAnimationFrame(c.tick)};b.restart=function(){b.reversed&&y(b);b.pause();b.seek(0);b.play()};b.settings.autoplay&&b.play();return b};l.speed=1;l.list=m;l.remove=function(a){a=v(e.array(a)?a.map(p):p(a));for(var b=m.length-1;0<=b;b--)for(var c=m[b],d=c.tweens.length-1;0<=d;d--)for(var f=c.tweens[d],h=f.animatables.length-1;0<=h;h--)C(a,f.animatables[h].target)&&(f.animatables.splice(h,1),f.animatables.length||c.tweens.splice(d,1),c.tweens.length||c.pause())};l.easings=z;l.getValue=G;l.path=\n\tfunction(a){a=e.string(a)?B(a)[0]:a;return{path:a,value:a.getTotalLength()}};l.random=function(a,b){return Math.floor(Math.random()*(b-a+1))+a};return l});\n\n\n/***/ },\n\n/***/ 132:\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chart.js\n\t * http://chartjs.org/\n\t * Version: 2.1.6\n\t *\n\t * Copyright 2016 Nick Downie\n\t * Released under the MIT license\n\t * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n\t */\n\t(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t\n\t},{}],2:[function(require,module,exports){\n\t/* MIT license */\r\n\tvar colorNames = require(6);\r\n\t\r\n\tmodule.exports = {\r\n\t   getRgba: getRgba,\r\n\t   getHsla: getHsla,\r\n\t   getRgb: getRgb,\r\n\t   getHsl: getHsl,\r\n\t   getHwb: getHwb,\r\n\t   getAlpha: getAlpha,\r\n\t\r\n\t   hexString: hexString,\r\n\t   rgbString: rgbString,\r\n\t   rgbaString: rgbaString,\r\n\t   percentString: percentString,\r\n\t   percentaString: percentaString,\r\n\t   hslString: hslString,\r\n\t   hslaString: hslaString,\r\n\t   hwbString: hwbString,\r\n\t   keyword: keyword\r\n\t}\r\n\t\r\n\tfunction getRgba(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n\t       hex =  /^#([a-fA-F0-9]{6})$/,\r\n\t       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n\t       keyword = /(\\w+)/;\r\n\t\r\n\t   var rgb = [0, 0, 0],\r\n\t       a = 1,\r\n\t       match = string.match(abbr);\r\n\t   if (match) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i] + match[i], 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(hex)) {\r\n\t      match = match[1];\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n\t      }\r\n\t   }\r\n\t   else if (match = string.match(rgba)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = parseInt(match[i + 1]);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(per)) {\r\n\t      for (var i = 0; i < rgb.length; i++) {\r\n\t         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n\t      }\r\n\t      a = parseFloat(match[4]);\r\n\t   }\r\n\t   else if (match = string.match(keyword)) {\r\n\t      if (match[1] == \"transparent\") {\r\n\t         return [0, 0, 0, 0];\r\n\t      }\r\n\t      rgb = colorNames[match[1]];\r\n\t      if (!rgb) {\r\n\t         return;\r\n\t      }\r\n\t   }\r\n\t\r\n\t   for (var i = 0; i < rgb.length; i++) {\r\n\t      rgb[i] = scale(rgb[i], 0, 255);\r\n\t   }\r\n\t   if (!a && a != 0) {\r\n\t      a = 1;\r\n\t   }\r\n\t   else {\r\n\t      a = scale(a, 0, 1);\r\n\t   }\r\n\t   rgb[3] = a;\r\n\t   return rgb;\r\n\t}\r\n\t\r\n\tfunction getHsla(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hsl);\r\n\t   if (match) {\r\n\t      var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          s = scale(parseFloat(match[2]), 0, 100),\r\n\t          l = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, s, l, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getHwb(string) {\r\n\t   if (!string) {\r\n\t      return;\r\n\t   }\r\n\t   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n\t   var match = string.match(hwb);\r\n\t   if (match) {\r\n\t    var alpha = parseFloat(match[4]);\r\n\t      var h = scale(parseInt(match[1]), 0, 360),\r\n\t          w = scale(parseFloat(match[2]), 0, 100),\r\n\t          b = scale(parseFloat(match[3]), 0, 100),\r\n\t          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t      return [h, w, b, a];\r\n\t   }\r\n\t}\r\n\t\r\n\tfunction getRgb(string) {\r\n\t   var rgba = getRgba(string);\r\n\t   return rgba && rgba.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getHsl(string) {\r\n\t  var hsla = getHsla(string);\r\n\t  return hsla && hsla.slice(0, 3);\r\n\t}\r\n\t\r\n\tfunction getAlpha(string) {\r\n\t   var vals = getRgba(string);\r\n\t   if (vals) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHsla(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t   else if (vals = getHwb(string)) {\r\n\t      return vals[3];\r\n\t   }\r\n\t}\r\n\t\r\n\t// generators\r\n\tfunction hexString(rgb) {\r\n\t   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n\t              + hexDouble(rgb[2]);\r\n\t}\r\n\t\r\n\tfunction rgbString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return rgbaString(rgba, alpha);\r\n\t   }\r\n\t   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n\t}\r\n\t\r\n\tfunction rgbaString(rgba, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n\t   }\r\n\t   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n\t           + \", \" + alpha + \")\";\r\n\t}\r\n\t\r\n\tfunction percentString(rgba, alpha) {\r\n\t   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n\t      return percentaString(rgba, alpha);\r\n\t   }\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t\r\n\t   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n\t}\r\n\t\r\n\tfunction percentaString(rgba, alpha) {\r\n\t   var r = Math.round(rgba[0]/255 * 100),\r\n\t       g = Math.round(rgba[1]/255 * 100),\r\n\t       b = Math.round(rgba[2]/255 * 100);\r\n\t   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n\t}\r\n\t\r\n\tfunction hslString(hsla, alpha) {\r\n\t   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n\t      return hslaString(hsla, alpha);\r\n\t   }\r\n\t   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n\t}\r\n\t\r\n\tfunction hslaString(hsla, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n\t   }\r\n\t   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n\t           + alpha + \")\";\r\n\t}\r\n\t\r\n\t// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n\t// (hwb have alpha optional & 1 is default value)\r\n\tfunction hwbString(hwb, alpha) {\r\n\t   if (alpha === undefined) {\r\n\t      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n\t   }\r\n\t   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n\t           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n\t}\r\n\t\r\n\tfunction keyword(rgb) {\r\n\t  return reverseNames[rgb.slice(0, 3)];\r\n\t}\r\n\t\r\n\t// helpers\r\n\tfunction scale(num, min, max) {\r\n\t   return Math.min(Math.max(min, num), max);\r\n\t}\r\n\t\r\n\tfunction hexDouble(num) {\r\n\t  var str = num.toString(16).toUpperCase();\r\n\t  return (str.length < 2) ? \"0\" + str : str;\r\n\t}\r\n\t\r\n\t\r\n\t//create a list of reverse color names\r\n\tvar reverseNames = {};\r\n\tfor (var name in colorNames) {\r\n\t   reverseNames[colorNames[name]] = name;\r\n\t}\r\n\t\n\t},{\"6\":6}],3:[function(require,module,exports){\n\t/* MIT license */\r\n\tvar convert = require(5);\r\n\tvar string = require(2);\r\n\t\r\n\tvar Color = function (obj) {\r\n\t\tif (obj instanceof Color) {\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\tif (!(this instanceof Color)) {\r\n\t\t\treturn new Color(obj);\r\n\t\t}\r\n\t\r\n\t\tthis.values = {\r\n\t\t\trgb: [0, 0, 0],\r\n\t\t\thsl: [0, 0, 0],\r\n\t\t\thsv: [0, 0, 0],\r\n\t\t\thwb: [0, 0, 0],\r\n\t\t\tcmyk: [0, 0, 0, 0],\r\n\t\t\talpha: 1\r\n\t\t};\r\n\t\r\n\t\t// parse Color() argument\r\n\t\tvar vals;\r\n\t\tif (typeof obj === 'string') {\r\n\t\t\tvals = string.getRgba(obj);\r\n\t\t\tif (vals) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t\t}\r\n\t\t} else if (typeof obj === 'object') {\r\n\t\t\tvals = obj;\r\n\t\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\t\tthis.setValues('rgb', vals);\r\n\t\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\t\tthis.setValues('hsl', vals);\r\n\t\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\t\tthis.setValues('hsv', vals);\r\n\t\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\t\tthis.setValues('hwb', vals);\r\n\t\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\t\tthis.setValues('cmyk', vals);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tColor.prototype = {\r\n\t\trgb: function () {\r\n\t\t\treturn this.setSpace('rgb', arguments);\r\n\t\t},\r\n\t\thsl: function () {\r\n\t\t\treturn this.setSpace('hsl', arguments);\r\n\t\t},\r\n\t\thsv: function () {\r\n\t\t\treturn this.setSpace('hsv', arguments);\r\n\t\t},\r\n\t\thwb: function () {\r\n\t\t\treturn this.setSpace('hwb', arguments);\r\n\t\t},\r\n\t\tcmyk: function () {\r\n\t\t\treturn this.setSpace('cmyk', arguments);\r\n\t\t},\r\n\t\r\n\t\trgbArray: function () {\r\n\t\t\treturn this.values.rgb;\r\n\t\t},\r\n\t\thslArray: function () {\r\n\t\t\treturn this.values.hsl;\r\n\t\t},\r\n\t\thsvArray: function () {\r\n\t\t\treturn this.values.hsv;\r\n\t\t},\r\n\t\thwbArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\tif (values.alpha !== 1) {\r\n\t\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t\t}\r\n\t\t\treturn values.hwb;\r\n\t\t},\r\n\t\tcmykArray: function () {\r\n\t\t\treturn this.values.cmyk;\r\n\t\t},\r\n\t\trgbaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.rgb.concat([values.alpha]);\r\n\t\t},\r\n\t\thslaArray: function () {\r\n\t\t\tvar values = this.values;\r\n\t\t\treturn values.hsl.concat([values.alpha]);\r\n\t\t},\r\n\t\talpha: function (val) {\r\n\t\t\tif (val === undefined) {\r\n\t\t\t\treturn this.values.alpha;\r\n\t\t\t}\r\n\t\t\tthis.setValues('alpha', val);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tred: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 0, val);\r\n\t\t},\r\n\t\tgreen: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 1, val);\r\n\t\t},\r\n\t\tblue: function (val) {\r\n\t\t\treturn this.setChannel('rgb', 2, val);\r\n\t\t},\r\n\t\thue: function (val) {\r\n\t\t\tif (val) {\r\n\t\t\t\tval %= 360;\r\n\t\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t\t}\r\n\t\t\treturn this.setChannel('hsl', 0, val);\r\n\t\t},\r\n\t\tsaturation: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 1, val);\r\n\t\t},\r\n\t\tlightness: function (val) {\r\n\t\t\treturn this.setChannel('hsl', 2, val);\r\n\t\t},\r\n\t\tsaturationv: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 1, val);\r\n\t\t},\r\n\t\twhiteness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 1, val);\r\n\t\t},\r\n\t\tblackness: function (val) {\r\n\t\t\treturn this.setChannel('hwb', 2, val);\r\n\t\t},\r\n\t\tvalue: function (val) {\r\n\t\t\treturn this.setChannel('hsv', 2, val);\r\n\t\t},\r\n\t\tcyan: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 0, val);\r\n\t\t},\r\n\t\tmagenta: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 1, val);\r\n\t\t},\r\n\t\tyellow: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 2, val);\r\n\t\t},\r\n\t\tblack: function (val) {\r\n\t\t\treturn this.setChannel('cmyk', 3, val);\r\n\t\t},\r\n\t\r\n\t\thexString: function () {\r\n\t\t\treturn string.hexString(this.values.rgb);\r\n\t\t},\r\n\t\trgbString: function () {\r\n\t\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\trgbaString: function () {\r\n\t\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\tpercentString: function () {\r\n\t\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\thslString: function () {\r\n\t\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thslaString: function () {\r\n\t\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t\t},\r\n\t\thwbString: function () {\r\n\t\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t\t},\r\n\t\tkeyword: function () {\r\n\t\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t\t},\r\n\t\r\n\t\trgbNumber: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t\t},\r\n\t\r\n\t\tluminosity: function () {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar lum = [];\r\n\t\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t\t}\r\n\t\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t\t},\r\n\t\r\n\t\tcontrast: function (color2) {\r\n\t\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\t\tvar lum1 = this.luminosity();\r\n\t\t\tvar lum2 = color2.luminosity();\r\n\t\t\tif (lum1 > lum2) {\r\n\t\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t\t}\r\n\t\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t\t},\r\n\t\r\n\t\tlevel: function (color2) {\r\n\t\t\tvar contrastRatio = this.contrast(color2);\r\n\t\t\tif (contrastRatio >= 7.1) {\r\n\t\t\t\treturn 'AAA';\r\n\t\t\t}\r\n\t\r\n\t\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t\t},\r\n\t\r\n\t\tdark: function () {\r\n\t\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\t\treturn yiq < 128;\r\n\t\t},\r\n\t\r\n\t\tlight: function () {\r\n\t\t\treturn !this.dark();\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\t\tvar rgb = [];\r\n\t\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t\t}\r\n\t\t\tthis.setValues('rgb', rgb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tlighten: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] += hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tdarken: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[2] -= hsl[2] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tsaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] += hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tdesaturate: function (ratio) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\thsl[1] -= hsl[1] * ratio;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\twhiten: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[1] += hwb[1] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tblacken: function (ratio) {\r\n\t\t\tvar hwb = this.values.hwb;\r\n\t\t\thwb[2] += hwb[2] * ratio;\r\n\t\t\tthis.setValues('hwb', hwb);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tgreyscale: function () {\r\n\t\t\tvar rgb = this.values.rgb;\r\n\t\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tclearer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\topaquer: function (ratio) {\r\n\t\t\tvar alpha = this.values.alpha;\r\n\t\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\trotate: function (degrees) {\r\n\t\t\tvar hsl = this.values.hsl;\r\n\t\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\t\tthis.setValues('hsl', hsl);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Ported from sass implementation in C\r\n\t\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t\t */\r\n\t\tmix: function (mixinColor, weight) {\r\n\t\t\tvar color1 = this;\r\n\t\t\tvar color2 = mixinColor;\r\n\t\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\t\r\n\t\t\tvar w = 2 * p - 1;\r\n\t\t\tvar a = color1.alpha() - color2.alpha();\r\n\t\r\n\t\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\t\tvar w2 = 1 - w1;\r\n\t\r\n\t\t\treturn this\r\n\t\t\t\t.rgb(\r\n\t\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t\t)\r\n\t\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\t\treturn this.rgb();\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t\t// except 'alpha' which is a number.\r\n\t\t\tvar result = new Color();\r\n\t\t\tvar source = this.values;\r\n\t\t\tvar target = result.values;\r\n\t\t\tvar value, type;\r\n\t\r\n\t\t\tfor (var prop in source) {\r\n\t\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\t\tvalue = source[prop];\r\n\t\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\t}\r\n\t};\r\n\t\r\n\tColor.prototype.spaces = {\r\n\t\trgb: ['red', 'green', 'blue'],\r\n\t\thsl: ['hue', 'saturation', 'lightness'],\r\n\t\thsv: ['hue', 'saturation', 'value'],\r\n\t\thwb: ['hue', 'whiteness', 'blackness'],\r\n\t\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n\t};\r\n\t\r\n\tColor.prototype.maxes = {\r\n\t\trgb: [255, 255, 255],\r\n\t\thsl: [360, 100, 100],\r\n\t\thsv: [360, 100, 100],\r\n\t\thwb: [360, 100, 100],\r\n\t\tcmyk: [100, 100, 100, 100]\r\n\t};\r\n\t\r\n\tColor.prototype.getValues = function (space) {\r\n\t\tvar values = this.values;\r\n\t\tvar vals = {};\r\n\t\r\n\t\tfor (var i = 0; i < space.length; i++) {\r\n\t\t\tvals[space.charAt(i)] = values[space][i];\r\n\t\t}\r\n\t\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\tvals.a = values.alpha;\r\n\t\t}\r\n\t\r\n\t\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\t\treturn vals;\r\n\t};\r\n\t\r\n\tColor.prototype.setValues = function (space, vals) {\r\n\t\tvar values = this.values;\r\n\t\tvar spaces = this.spaces;\r\n\t\tvar maxes = this.maxes;\r\n\t\tvar alpha = 1;\r\n\t\tvar i;\r\n\t\r\n\t\tif (space === 'alpha') {\r\n\t\t\talpha = vals;\r\n\t\t} else if (vals.length) {\r\n\t\t\t// [10, 10, 10]\r\n\t\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\t\talpha = vals[space.length];\r\n\t\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t\t// {r: 10, g: 10, b: 10}\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t\t}\r\n\t\r\n\t\t\talpha = vals.a;\r\n\t\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t\t// {red: 10, green: 10, blue: 10}\r\n\t\t\tvar chans = spaces[space];\r\n\t\r\n\t\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t\t}\r\n\t\r\n\t\t\talpha = vals.alpha;\r\n\t\t}\r\n\t\r\n\t\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\t\r\n\t\tif (space === 'alpha') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\t\tvar capped;\r\n\t\r\n\t\t// cap values of the space prior converting all values\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\t\tvalues[space][i] = Math.round(capped);\r\n\t\t}\r\n\t\r\n\t\t// convert to all the other color spaces\r\n\t\tfor (var sname in spaces) {\r\n\t\t\tif (sname !== space) {\r\n\t\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\tColor.prototype.setSpace = function (space, args) {\r\n\t\tvar vals = args[0];\r\n\t\r\n\t\tif (vals === undefined) {\r\n\t\t\t// color.rgb()\r\n\t\t\treturn this.getValues(space);\r\n\t\t}\r\n\t\r\n\t\t// color.rgb(10, 10, 10)\r\n\t\tif (typeof vals === 'number') {\r\n\t\t\tvals = Array.prototype.slice.call(args);\r\n\t\t}\r\n\t\r\n\t\tthis.setValues(space, vals);\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tColor.prototype.setChannel = function (space, index, val) {\r\n\t\tvar svalues = this.values[space];\r\n\t\tif (val === undefined) {\r\n\t\t\t// color.red()\r\n\t\t\treturn svalues[index];\r\n\t\t} else if (val === svalues[index]) {\r\n\t\t\t// color.red(color.red())\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\r\n\t\t// color.red(100)\r\n\t\tsvalues[index] = val;\r\n\t\tthis.setValues(space, svalues);\r\n\t\r\n\t\treturn this;\r\n\t};\r\n\t\r\n\tif (typeof window !== 'undefined') {\r\n\t\twindow.Color = Color;\r\n\t}\r\n\t\r\n\tmodule.exports = Color;\r\n\t\n\t},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n\t/* MIT license */\n\t\n\tmodule.exports = {\n\t  rgb2hsl: rgb2hsl,\n\t  rgb2hsv: rgb2hsv,\n\t  rgb2hwb: rgb2hwb,\n\t  rgb2cmyk: rgb2cmyk,\n\t  rgb2keyword: rgb2keyword,\n\t  rgb2xyz: rgb2xyz,\n\t  rgb2lab: rgb2lab,\n\t  rgb2lch: rgb2lch,\n\t\n\t  hsl2rgb: hsl2rgb,\n\t  hsl2hsv: hsl2hsv,\n\t  hsl2hwb: hsl2hwb,\n\t  hsl2cmyk: hsl2cmyk,\n\t  hsl2keyword: hsl2keyword,\n\t\n\t  hsv2rgb: hsv2rgb,\n\t  hsv2hsl: hsv2hsl,\n\t  hsv2hwb: hsv2hwb,\n\t  hsv2cmyk: hsv2cmyk,\n\t  hsv2keyword: hsv2keyword,\n\t\n\t  hwb2rgb: hwb2rgb,\n\t  hwb2hsl: hwb2hsl,\n\t  hwb2hsv: hwb2hsv,\n\t  hwb2cmyk: hwb2cmyk,\n\t  hwb2keyword: hwb2keyword,\n\t\n\t  cmyk2rgb: cmyk2rgb,\n\t  cmyk2hsl: cmyk2hsl,\n\t  cmyk2hsv: cmyk2hsv,\n\t  cmyk2hwb: cmyk2hwb,\n\t  cmyk2keyword: cmyk2keyword,\n\t\n\t  keyword2rgb: keyword2rgb,\n\t  keyword2hsl: keyword2hsl,\n\t  keyword2hsv: keyword2hsv,\n\t  keyword2hwb: keyword2hwb,\n\t  keyword2cmyk: keyword2cmyk,\n\t  keyword2lab: keyword2lab,\n\t  keyword2xyz: keyword2xyz,\n\t\n\t  xyz2rgb: xyz2rgb,\n\t  xyz2lab: xyz2lab,\n\t  xyz2lch: xyz2lch,\n\t\n\t  lab2xyz: lab2xyz,\n\t  lab2rgb: lab2rgb,\n\t  lab2lch: lab2lch,\n\t\n\t  lch2lab: lch2lab,\n\t  lch2xyz: lch2xyz,\n\t  lch2rgb: lch2rgb\n\t}\n\t\n\t\n\tfunction rgb2hsl(rgb) {\n\t  var r = rgb[0]/255,\n\t      g = rgb[1]/255,\n\t      b = rgb[2]/255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, l;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g)/ delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  l = (min + max) / 2;\n\t\n\t  if (max == min)\n\t    s = 0;\n\t  else if (l <= 0.5)\n\t    s = delta / (max + min);\n\t  else\n\t    s = delta / (2 - max - min);\n\t\n\t  return [h, s * 100, l * 100];\n\t}\n\t\n\tfunction rgb2hsv(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      delta = max - min,\n\t      h, s, v;\n\t\n\t  if (max == 0)\n\t    s = 0;\n\t  else\n\t    s = (delta/max * 1000)/10;\n\t\n\t  if (max == min)\n\t    h = 0;\n\t  else if (r == max)\n\t    h = (g - b) / delta;\n\t  else if (g == max)\n\t    h = 2 + (b - r) / delta;\n\t  else if (b == max)\n\t    h = 4 + (r - g) / delta;\n\t\n\t  h = Math.min(h * 60, 360);\n\t\n\t  if (h < 0)\n\t    h += 360;\n\t\n\t  v = ((max / 255) * 1000) / 10;\n\t\n\t  return [h, s, v];\n\t}\n\t\n\tfunction rgb2hwb(rgb) {\n\t  var r = rgb[0],\n\t      g = rgb[1],\n\t      b = rgb[2],\n\t      h = rgb2hsl(rgb)[0],\n\t      w = 1/255 * Math.min(r, Math.min(g, b)),\n\t      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\t\n\t  return [h, w * 100, b * 100];\n\t}\n\t\n\tfunction rgb2cmyk(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255,\n\t      c, m, y, k;\n\t\n\t  k = Math.min(1 - r, 1 - g, 1 - b);\n\t  c = (1 - r - k) / (1 - k) || 0;\n\t  m = (1 - g - k) / (1 - k) || 0;\n\t  y = (1 - b - k) / (1 - k) || 0;\n\t  return [c * 100, m * 100, y * 100, k * 100];\n\t}\n\t\n\tfunction rgb2keyword(rgb) {\n\t  return reverseKeywords[JSON.stringify(rgb)];\n\t}\n\t\n\tfunction rgb2xyz(rgb) {\n\t  var r = rgb[0] / 255,\n\t      g = rgb[1] / 255,\n\t      b = rgb[2] / 255;\n\t\n\t  // assume sRGB\n\t  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\t  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\t  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\t\n\t  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\t  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\t  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\t\n\t  return [x * 100, y *100, z * 100];\n\t}\n\t\n\tfunction rgb2lab(rgb) {\n\t  var xyz = rgb2xyz(rgb),\n\t        x = xyz[0],\n\t        y = xyz[1],\n\t        z = xyz[2],\n\t        l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction rgb2lch(args) {\n\t  return lab2lch(rgb2lab(args));\n\t}\n\t\n\tfunction hsl2rgb(hsl) {\n\t  var h = hsl[0] / 360,\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      t1, t2, t3, rgb, val;\n\t\n\t  if (s == 0) {\n\t    val = l * 255;\n\t    return [val, val, val];\n\t  }\n\t\n\t  if (l < 0.5)\n\t    t2 = l * (1 + s);\n\t  else\n\t    t2 = l + s - l * s;\n\t  t1 = 2 * l - t2;\n\t\n\t  rgb = [0, 0, 0];\n\t  for (var i = 0; i < 3; i++) {\n\t    t3 = h + 1 / 3 * - (i - 1);\n\t    t3 < 0 && t3++;\n\t    t3 > 1 && t3--;\n\t\n\t    if (6 * t3 < 1)\n\t      val = t1 + (t2 - t1) * 6 * t3;\n\t    else if (2 * t3 < 1)\n\t      val = t2;\n\t    else if (3 * t3 < 2)\n\t      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t    else\n\t      val = t1;\n\t\n\t    rgb[i] = val * 255;\n\t  }\n\t\n\t  return rgb;\n\t}\n\t\n\tfunction hsl2hsv(hsl) {\n\t  var h = hsl[0],\n\t      s = hsl[1] / 100,\n\t      l = hsl[2] / 100,\n\t      sv, v;\n\t\n\t  if(l === 0) {\n\t      // no need to do calc on black\n\t      // also avoids divide by 0 error\n\t      return [0, 0, 0];\n\t  }\n\t\n\t  l *= 2;\n\t  s *= (l <= 1) ? l : 2 - l;\n\t  v = (l + s) / 2;\n\t  sv = (2 * s) / (l + s);\n\t  return [h, sv * 100, v * 100];\n\t}\n\t\n\tfunction hsl2hwb(args) {\n\t  return rgb2hwb(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2cmyk(args) {\n\t  return rgb2cmyk(hsl2rgb(args));\n\t}\n\t\n\tfunction hsl2keyword(args) {\n\t  return rgb2keyword(hsl2rgb(args));\n\t}\n\t\n\t\n\tfunction hsv2rgb(hsv) {\n\t  var h = hsv[0] / 60,\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      hi = Math.floor(h) % 6;\n\t\n\t  var f = h - Math.floor(h),\n\t      p = 255 * v * (1 - s),\n\t      q = 255 * v * (1 - (s * f)),\n\t      t = 255 * v * (1 - (s * (1 - f))),\n\t      v = 255 * v;\n\t\n\t  switch(hi) {\n\t    case 0:\n\t      return [v, t, p];\n\t    case 1:\n\t      return [q, v, p];\n\t    case 2:\n\t      return [p, v, t];\n\t    case 3:\n\t      return [p, q, v];\n\t    case 4:\n\t      return [t, p, v];\n\t    case 5:\n\t      return [v, p, q];\n\t  }\n\t}\n\t\n\tfunction hsv2hsl(hsv) {\n\t  var h = hsv[0],\n\t      s = hsv[1] / 100,\n\t      v = hsv[2] / 100,\n\t      sl, l;\n\t\n\t  l = (2 - s) * v;\n\t  sl = s * v;\n\t  sl /= (l <= 1) ? l : 2 - l;\n\t  sl = sl || 0;\n\t  l /= 2;\n\t  return [h, sl * 100, l * 100];\n\t}\n\t\n\tfunction hsv2hwb(args) {\n\t  return rgb2hwb(hsv2rgb(args))\n\t}\n\t\n\tfunction hsv2cmyk(args) {\n\t  return rgb2cmyk(hsv2rgb(args));\n\t}\n\t\n\tfunction hsv2keyword(args) {\n\t  return rgb2keyword(hsv2rgb(args));\n\t}\n\t\n\t// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\tfunction hwb2rgb(hwb) {\n\t  var h = hwb[0] / 360,\n\t      wh = hwb[1] / 100,\n\t      bl = hwb[2] / 100,\n\t      ratio = wh + bl,\n\t      i, v, f, n;\n\t\n\t  // wh + bl cant be > 1\n\t  if (ratio > 1) {\n\t    wh /= ratio;\n\t    bl /= ratio;\n\t  }\n\t\n\t  i = Math.floor(6 * h);\n\t  v = 1 - bl;\n\t  f = 6 * h - i;\n\t  if ((i & 0x01) != 0) {\n\t    f = 1 - f;\n\t  }\n\t  n = wh + f * (v - wh);  // linear interpolation\n\t\n\t  switch (i) {\n\t    default:\n\t    case 6:\n\t    case 0: r = v; g = n; b = wh; break;\n\t    case 1: r = n; g = v; b = wh; break;\n\t    case 2: r = wh; g = v; b = n; break;\n\t    case 3: r = wh; g = n; b = v; break;\n\t    case 4: r = n; g = wh; b = v; break;\n\t    case 5: r = v; g = wh; b = n; break;\n\t  }\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction hwb2hsl(args) {\n\t  return rgb2hsl(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2hsv(args) {\n\t  return rgb2hsv(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2cmyk(args) {\n\t  return rgb2cmyk(hwb2rgb(args));\n\t}\n\t\n\tfunction hwb2keyword(args) {\n\t  return rgb2keyword(hwb2rgb(args));\n\t}\n\t\n\tfunction cmyk2rgb(cmyk) {\n\t  var c = cmyk[0] / 100,\n\t      m = cmyk[1] / 100,\n\t      y = cmyk[2] / 100,\n\t      k = cmyk[3] / 100,\n\t      r, g, b;\n\t\n\t  r = 1 - Math.min(1, c * (1 - k) + k);\n\t  g = 1 - Math.min(1, m * (1 - k) + k);\n\t  b = 1 - Math.min(1, y * (1 - k) + k);\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction cmyk2hsl(args) {\n\t  return rgb2hsl(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hsv(args) {\n\t  return rgb2hsv(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2hwb(args) {\n\t  return rgb2hwb(cmyk2rgb(args));\n\t}\n\t\n\tfunction cmyk2keyword(args) {\n\t  return rgb2keyword(cmyk2rgb(args));\n\t}\n\t\n\t\n\tfunction xyz2rgb(xyz) {\n\t  var x = xyz[0] / 100,\n\t      y = xyz[1] / 100,\n\t      z = xyz[2] / 100,\n\t      r, g, b;\n\t\n\t  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\t  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\t  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\t\n\t  // assume sRGB\n\t  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t    : r = (r * 12.92);\n\t\n\t  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t    : g = (g * 12.92);\n\t\n\t  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t    : b = (b * 12.92);\n\t\n\t  r = Math.min(Math.max(0, r), 1);\n\t  g = Math.min(Math.max(0, g), 1);\n\t  b = Math.min(Math.max(0, b), 1);\n\t\n\t  return [r * 255, g * 255, b * 255];\n\t}\n\t\n\tfunction xyz2lab(xyz) {\n\t  var x = xyz[0],\n\t      y = xyz[1],\n\t      z = xyz[2],\n\t      l, a, b;\n\t\n\t  x /= 95.047;\n\t  y /= 100;\n\t  z /= 108.883;\n\t\n\t  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n\t  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n\t  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\t\n\t  l = (116 * y) - 16;\n\t  a = 500 * (x - y);\n\t  b = 200 * (y - z);\n\t\n\t  return [l, a, b];\n\t}\n\t\n\tfunction xyz2lch(args) {\n\t  return lab2lch(xyz2lab(args));\n\t}\n\t\n\tfunction lab2xyz(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      x, y, z, y2;\n\t\n\t  if (l <= 8) {\n\t    y = (l * 100) / 903.3;\n\t    y2 = (7.787 * (y / 100)) + (16 / 116);\n\t  } else {\n\t    y = 100 * Math.pow((l + 16) / 116, 3);\n\t    y2 = Math.pow(y / 100, 1/3);\n\t  }\n\t\n\t  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\t\n\t  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\t\n\t  return [x, y, z];\n\t}\n\t\n\tfunction lab2lch(lab) {\n\t  var l = lab[0],\n\t      a = lab[1],\n\t      b = lab[2],\n\t      hr, h, c;\n\t\n\t  hr = Math.atan2(b, a);\n\t  h = hr * 360 / 2 / Math.PI;\n\t  if (h < 0) {\n\t    h += 360;\n\t  }\n\t  c = Math.sqrt(a * a + b * b);\n\t  return [l, c, h];\n\t}\n\t\n\tfunction lab2rgb(args) {\n\t  return xyz2rgb(lab2xyz(args));\n\t}\n\t\n\tfunction lch2lab(lch) {\n\t  var l = lch[0],\n\t      c = lch[1],\n\t      h = lch[2],\n\t      a, b, hr;\n\t\n\t  hr = h / 360 * 2 * Math.PI;\n\t  a = c * Math.cos(hr);\n\t  b = c * Math.sin(hr);\n\t  return [l, a, b];\n\t}\n\t\n\tfunction lch2xyz(args) {\n\t  return lab2xyz(lch2lab(args));\n\t}\n\t\n\tfunction lch2rgb(args) {\n\t  return lab2rgb(lch2lab(args));\n\t}\n\t\n\tfunction keyword2rgb(keyword) {\n\t  return cssKeywords[keyword];\n\t}\n\t\n\tfunction keyword2hsl(args) {\n\t  return rgb2hsl(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hsv(args) {\n\t  return rgb2hsv(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2hwb(args) {\n\t  return rgb2hwb(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2cmyk(args) {\n\t  return rgb2cmyk(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2lab(args) {\n\t  return rgb2lab(keyword2rgb(args));\n\t}\n\t\n\tfunction keyword2xyz(args) {\n\t  return rgb2xyz(keyword2rgb(args));\n\t}\n\t\n\tvar cssKeywords = {\n\t  aliceblue:  [240,248,255],\n\t  antiquewhite: [250,235,215],\n\t  aqua: [0,255,255],\n\t  aquamarine: [127,255,212],\n\t  azure:  [240,255,255],\n\t  beige:  [245,245,220],\n\t  bisque: [255,228,196],\n\t  black:  [0,0,0],\n\t  blanchedalmond: [255,235,205],\n\t  blue: [0,0,255],\n\t  blueviolet: [138,43,226],\n\t  brown:  [165,42,42],\n\t  burlywood:  [222,184,135],\n\t  cadetblue:  [95,158,160],\n\t  chartreuse: [127,255,0],\n\t  chocolate:  [210,105,30],\n\t  coral:  [255,127,80],\n\t  cornflowerblue: [100,149,237],\n\t  cornsilk: [255,248,220],\n\t  crimson:  [220,20,60],\n\t  cyan: [0,255,255],\n\t  darkblue: [0,0,139],\n\t  darkcyan: [0,139,139],\n\t  darkgoldenrod:  [184,134,11],\n\t  darkgray: [169,169,169],\n\t  darkgreen:  [0,100,0],\n\t  darkgrey: [169,169,169],\n\t  darkkhaki:  [189,183,107],\n\t  darkmagenta:  [139,0,139],\n\t  darkolivegreen: [85,107,47],\n\t  darkorange: [255,140,0],\n\t  darkorchid: [153,50,204],\n\t  darkred:  [139,0,0],\n\t  darksalmon: [233,150,122],\n\t  darkseagreen: [143,188,143],\n\t  darkslateblue:  [72,61,139],\n\t  darkslategray:  [47,79,79],\n\t  darkslategrey:  [47,79,79],\n\t  darkturquoise:  [0,206,209],\n\t  darkviolet: [148,0,211],\n\t  deeppink: [255,20,147],\n\t  deepskyblue:  [0,191,255],\n\t  dimgray:  [105,105,105],\n\t  dimgrey:  [105,105,105],\n\t  dodgerblue: [30,144,255],\n\t  firebrick:  [178,34,34],\n\t  floralwhite:  [255,250,240],\n\t  forestgreen:  [34,139,34],\n\t  fuchsia:  [255,0,255],\n\t  gainsboro:  [220,220,220],\n\t  ghostwhite: [248,248,255],\n\t  gold: [255,215,0],\n\t  goldenrod:  [218,165,32],\n\t  gray: [128,128,128],\n\t  green:  [0,128,0],\n\t  greenyellow:  [173,255,47],\n\t  grey: [128,128,128],\n\t  honeydew: [240,255,240],\n\t  hotpink:  [255,105,180],\n\t  indianred:  [205,92,92],\n\t  indigo: [75,0,130],\n\t  ivory:  [255,255,240],\n\t  khaki:  [240,230,140],\n\t  lavender: [230,230,250],\n\t  lavenderblush:  [255,240,245],\n\t  lawngreen:  [124,252,0],\n\t  lemonchiffon: [255,250,205],\n\t  lightblue:  [173,216,230],\n\t  lightcoral: [240,128,128],\n\t  lightcyan:  [224,255,255],\n\t  lightgoldenrodyellow: [250,250,210],\n\t  lightgray:  [211,211,211],\n\t  lightgreen: [144,238,144],\n\t  lightgrey:  [211,211,211],\n\t  lightpink:  [255,182,193],\n\t  lightsalmon:  [255,160,122],\n\t  lightseagreen:  [32,178,170],\n\t  lightskyblue: [135,206,250],\n\t  lightslategray: [119,136,153],\n\t  lightslategrey: [119,136,153],\n\t  lightsteelblue: [176,196,222],\n\t  lightyellow:  [255,255,224],\n\t  lime: [0,255,0],\n\t  limegreen:  [50,205,50],\n\t  linen:  [250,240,230],\n\t  magenta:  [255,0,255],\n\t  maroon: [128,0,0],\n\t  mediumaquamarine: [102,205,170],\n\t  mediumblue: [0,0,205],\n\t  mediumorchid: [186,85,211],\n\t  mediumpurple: [147,112,219],\n\t  mediumseagreen: [60,179,113],\n\t  mediumslateblue:  [123,104,238],\n\t  mediumspringgreen:  [0,250,154],\n\t  mediumturquoise:  [72,209,204],\n\t  mediumvioletred:  [199,21,133],\n\t  midnightblue: [25,25,112],\n\t  mintcream:  [245,255,250],\n\t  mistyrose:  [255,228,225],\n\t  moccasin: [255,228,181],\n\t  navajowhite:  [255,222,173],\n\t  navy: [0,0,128],\n\t  oldlace:  [253,245,230],\n\t  olive:  [128,128,0],\n\t  olivedrab:  [107,142,35],\n\t  orange: [255,165,0],\n\t  orangered:  [255,69,0],\n\t  orchid: [218,112,214],\n\t  palegoldenrod:  [238,232,170],\n\t  palegreen:  [152,251,152],\n\t  paleturquoise:  [175,238,238],\n\t  palevioletred:  [219,112,147],\n\t  papayawhip: [255,239,213],\n\t  peachpuff:  [255,218,185],\n\t  peru: [205,133,63],\n\t  pink: [255,192,203],\n\t  plum: [221,160,221],\n\t  powderblue: [176,224,230],\n\t  purple: [128,0,128],\n\t  rebeccapurple: [102, 51, 153],\n\t  red:  [255,0,0],\n\t  rosybrown:  [188,143,143],\n\t  royalblue:  [65,105,225],\n\t  saddlebrown:  [139,69,19],\n\t  salmon: [250,128,114],\n\t  sandybrown: [244,164,96],\n\t  seagreen: [46,139,87],\n\t  seashell: [255,245,238],\n\t  sienna: [160,82,45],\n\t  silver: [192,192,192],\n\t  skyblue:  [135,206,235],\n\t  slateblue:  [106,90,205],\n\t  slategray:  [112,128,144],\n\t  slategrey:  [112,128,144],\n\t  snow: [255,250,250],\n\t  springgreen:  [0,255,127],\n\t  steelblue:  [70,130,180],\n\t  tan:  [210,180,140],\n\t  teal: [0,128,128],\n\t  thistle:  [216,191,216],\n\t  tomato: [255,99,71],\n\t  turquoise:  [64,224,208],\n\t  violet: [238,130,238],\n\t  wheat:  [245,222,179],\n\t  white:  [255,255,255],\n\t  whitesmoke: [245,245,245],\n\t  yellow: [255,255,0],\n\t  yellowgreen:  [154,205,50]\n\t};\n\t\n\tvar reverseKeywords = {};\n\tfor (var key in cssKeywords) {\n\t  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n\t}\n\t\n\t},{}],5:[function(require,module,exports){\n\tvar conversions = require(4);\n\t\n\tvar convert = function() {\n\t   return new Converter();\n\t}\n\t\n\tfor (var func in conversions) {\n\t  // export Raw versions\n\t  convert[func + \"Raw\"] =  (function(func) {\n\t    // accept array or plain args\n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      return conversions[func](arg);\n\t    }\n\t  })(func);\n\t\n\t  var pair = /(\\w+)2(\\w+)/.exec(func),\n\t      from = pair[1],\n\t      to = pair[2];\n\t\n\t  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\t  convert[from] = convert[from] || {};\n\t\n\t  convert[from][to] = convert[func] = (function(func) { \n\t    return function(arg) {\n\t      if (typeof arg == \"number\")\n\t        arg = Array.prototype.slice.call(arguments);\n\t      \n\t      var val = conversions[func](arg);\n\t      if (typeof val == \"string\" || val === undefined)\n\t        return val; // keyword\n\t\n\t      for (var i = 0; i < val.length; i++)\n\t        val[i] = Math.round(val[i]);\n\t      return val;\n\t    }\n\t  })(func);\n\t}\n\t\n\t\n\t/* Converter does lazy conversion and caching */\n\tvar Converter = function() {\n\t   this.convs = {};\n\t};\n\t\n\t/* Either get the values for a space or\n\t  set the values for a space, depending on args */\n\tConverter.prototype.routeSpace = function(space, args) {\n\t   var values = args[0];\n\t   if (values === undefined) {\n\t      // color.rgb()\n\t      return this.getValues(space);\n\t   }\n\t   // color.rgb(10, 10, 10)\n\t   if (typeof values == \"number\") {\n\t      values = Array.prototype.slice.call(args);        \n\t   }\n\t\n\t   return this.setValues(space, values);\n\t};\n\t  \n\t/* Set the values for a space, invalidating cache */\n\tConverter.prototype.setValues = function(space, values) {\n\t   this.space = space;\n\t   this.convs = {};\n\t   this.convs[space] = values;\n\t   return this;\n\t};\n\t\n\t/* Get the values for a space. If there's already\n\t  a conversion for the space, fetch it, otherwise\n\t  compute it */\n\tConverter.prototype.getValues = function(space) {\n\t   var vals = this.convs[space];\n\t   if (!vals) {\n\t      var fspace = this.space,\n\t          from = this.convs[fspace];\n\t      vals = convert[fspace][space](from);\n\t\n\t      this.convs[space] = vals;\n\t   }\n\t  return vals;\n\t};\n\t\n\t[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n\t   Converter.prototype[space] = function(vals) {\n\t      return this.routeSpace(space, arguments);\n\t   }\n\t});\n\t\n\tmodule.exports = convert;\n\t},{\"4\":4}],6:[function(require,module,exports){\n\tmodule.exports = {\r\n\t\t\"aliceblue\": [240, 248, 255],\r\n\t\t\"antiquewhite\": [250, 235, 215],\r\n\t\t\"aqua\": [0, 255, 255],\r\n\t\t\"aquamarine\": [127, 255, 212],\r\n\t\t\"azure\": [240, 255, 255],\r\n\t\t\"beige\": [245, 245, 220],\r\n\t\t\"bisque\": [255, 228, 196],\r\n\t\t\"black\": [0, 0, 0],\r\n\t\t\"blanchedalmond\": [255, 235, 205],\r\n\t\t\"blue\": [0, 0, 255],\r\n\t\t\"blueviolet\": [138, 43, 226],\r\n\t\t\"brown\": [165, 42, 42],\r\n\t\t\"burlywood\": [222, 184, 135],\r\n\t\t\"cadetblue\": [95, 158, 160],\r\n\t\t\"chartreuse\": [127, 255, 0],\r\n\t\t\"chocolate\": [210, 105, 30],\r\n\t\t\"coral\": [255, 127, 80],\r\n\t\t\"cornflowerblue\": [100, 149, 237],\r\n\t\t\"cornsilk\": [255, 248, 220],\r\n\t\t\"crimson\": [220, 20, 60],\r\n\t\t\"cyan\": [0, 255, 255],\r\n\t\t\"darkblue\": [0, 0, 139],\r\n\t\t\"darkcyan\": [0, 139, 139],\r\n\t\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\t\"darkgray\": [169, 169, 169],\r\n\t\t\"darkgreen\": [0, 100, 0],\r\n\t\t\"darkgrey\": [169, 169, 169],\r\n\t\t\"darkkhaki\": [189, 183, 107],\r\n\t\t\"darkmagenta\": [139, 0, 139],\r\n\t\t\"darkolivegreen\": [85, 107, 47],\r\n\t\t\"darkorange\": [255, 140, 0],\r\n\t\t\"darkorchid\": [153, 50, 204],\r\n\t\t\"darkred\": [139, 0, 0],\r\n\t\t\"darksalmon\": [233, 150, 122],\r\n\t\t\"darkseagreen\": [143, 188, 143],\r\n\t\t\"darkslateblue\": [72, 61, 139],\r\n\t\t\"darkslategray\": [47, 79, 79],\r\n\t\t\"darkslategrey\": [47, 79, 79],\r\n\t\t\"darkturquoise\": [0, 206, 209],\r\n\t\t\"darkviolet\": [148, 0, 211],\r\n\t\t\"deeppink\": [255, 20, 147],\r\n\t\t\"deepskyblue\": [0, 191, 255],\r\n\t\t\"dimgray\": [105, 105, 105],\r\n\t\t\"dimgrey\": [105, 105, 105],\r\n\t\t\"dodgerblue\": [30, 144, 255],\r\n\t\t\"firebrick\": [178, 34, 34],\r\n\t\t\"floralwhite\": [255, 250, 240],\r\n\t\t\"forestgreen\": [34, 139, 34],\r\n\t\t\"fuchsia\": [255, 0, 255],\r\n\t\t\"gainsboro\": [220, 220, 220],\r\n\t\t\"ghostwhite\": [248, 248, 255],\r\n\t\t\"gold\": [255, 215, 0],\r\n\t\t\"goldenrod\": [218, 165, 32],\r\n\t\t\"gray\": [128, 128, 128],\r\n\t\t\"green\": [0, 128, 0],\r\n\t\t\"greenyellow\": [173, 255, 47],\r\n\t\t\"grey\": [128, 128, 128],\r\n\t\t\"honeydew\": [240, 255, 240],\r\n\t\t\"hotpink\": [255, 105, 180],\r\n\t\t\"indianred\": [205, 92, 92],\r\n\t\t\"indigo\": [75, 0, 130],\r\n\t\t\"ivory\": [255, 255, 240],\r\n\t\t\"khaki\": [240, 230, 140],\r\n\t\t\"lavender\": [230, 230, 250],\r\n\t\t\"lavenderblush\": [255, 240, 245],\r\n\t\t\"lawngreen\": [124, 252, 0],\r\n\t\t\"lemonchiffon\": [255, 250, 205],\r\n\t\t\"lightblue\": [173, 216, 230],\r\n\t\t\"lightcoral\": [240, 128, 128],\r\n\t\t\"lightcyan\": [224, 255, 255],\r\n\t\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\t\"lightgray\": [211, 211, 211],\r\n\t\t\"lightgreen\": [144, 238, 144],\r\n\t\t\"lightgrey\": [211, 211, 211],\r\n\t\t\"lightpink\": [255, 182, 193],\r\n\t\t\"lightsalmon\": [255, 160, 122],\r\n\t\t\"lightseagreen\": [32, 178, 170],\r\n\t\t\"lightskyblue\": [135, 206, 250],\r\n\t\t\"lightslategray\": [119, 136, 153],\r\n\t\t\"lightslategrey\": [119, 136, 153],\r\n\t\t\"lightsteelblue\": [176, 196, 222],\r\n\t\t\"lightyellow\": [255, 255, 224],\r\n\t\t\"lime\": [0, 255, 0],\r\n\t\t\"limegreen\": [50, 205, 50],\r\n\t\t\"linen\": [250, 240, 230],\r\n\t\t\"magenta\": [255, 0, 255],\r\n\t\t\"maroon\": [128, 0, 0],\r\n\t\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\t\"mediumblue\": [0, 0, 205],\r\n\t\t\"mediumorchid\": [186, 85, 211],\r\n\t\t\"mediumpurple\": [147, 112, 219],\r\n\t\t\"mediumseagreen\": [60, 179, 113],\r\n\t\t\"mediumslateblue\": [123, 104, 238],\r\n\t\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\t\"mediumturquoise\": [72, 209, 204],\r\n\t\t\"mediumvioletred\": [199, 21, 133],\r\n\t\t\"midnightblue\": [25, 25, 112],\r\n\t\t\"mintcream\": [245, 255, 250],\r\n\t\t\"mistyrose\": [255, 228, 225],\r\n\t\t\"moccasin\": [255, 228, 181],\r\n\t\t\"navajowhite\": [255, 222, 173],\r\n\t\t\"navy\": [0, 0, 128],\r\n\t\t\"oldlace\": [253, 245, 230],\r\n\t\t\"olive\": [128, 128, 0],\r\n\t\t\"olivedrab\": [107, 142, 35],\r\n\t\t\"orange\": [255, 165, 0],\r\n\t\t\"orangered\": [255, 69, 0],\r\n\t\t\"orchid\": [218, 112, 214],\r\n\t\t\"palegoldenrod\": [238, 232, 170],\r\n\t\t\"palegreen\": [152, 251, 152],\r\n\t\t\"paleturquoise\": [175, 238, 238],\r\n\t\t\"palevioletred\": [219, 112, 147],\r\n\t\t\"papayawhip\": [255, 239, 213],\r\n\t\t\"peachpuff\": [255, 218, 185],\r\n\t\t\"peru\": [205, 133, 63],\r\n\t\t\"pink\": [255, 192, 203],\r\n\t\t\"plum\": [221, 160, 221],\r\n\t\t\"powderblue\": [176, 224, 230],\r\n\t\t\"purple\": [128, 0, 128],\r\n\t\t\"rebeccapurple\": [102, 51, 153],\r\n\t\t\"red\": [255, 0, 0],\r\n\t\t\"rosybrown\": [188, 143, 143],\r\n\t\t\"royalblue\": [65, 105, 225],\r\n\t\t\"saddlebrown\": [139, 69, 19],\r\n\t\t\"salmon\": [250, 128, 114],\r\n\t\t\"sandybrown\": [244, 164, 96],\r\n\t\t\"seagreen\": [46, 139, 87],\r\n\t\t\"seashell\": [255, 245, 238],\r\n\t\t\"sienna\": [160, 82, 45],\r\n\t\t\"silver\": [192, 192, 192],\r\n\t\t\"skyblue\": [135, 206, 235],\r\n\t\t\"slateblue\": [106, 90, 205],\r\n\t\t\"slategray\": [112, 128, 144],\r\n\t\t\"slategrey\": [112, 128, 144],\r\n\t\t\"snow\": [255, 250, 250],\r\n\t\t\"springgreen\": [0, 255, 127],\r\n\t\t\"steelblue\": [70, 130, 180],\r\n\t\t\"tan\": [210, 180, 140],\r\n\t\t\"teal\": [0, 128, 128],\r\n\t\t\"thistle\": [216, 191, 216],\r\n\t\t\"tomato\": [255, 99, 71],\r\n\t\t\"turquoise\": [64, 224, 208],\r\n\t\t\"violet\": [238, 130, 238],\r\n\t\t\"wheat\": [245, 222, 179],\r\n\t\t\"white\": [255, 255, 255],\r\n\t\t\"whitesmoke\": [245, 245, 245],\r\n\t\t\"yellow\": [255, 255, 0],\r\n\t\t\"yellowgreen\": [154, 205, 50]\r\n\t};\n\t},{}],7:[function(require,module,exports){\n\t/**\r\n\t * @namespace Chart\r\n\t */\r\n\tvar Chart = require(26)();\r\n\t\r\n\trequire(25)(Chart);\r\n\trequire(24)(Chart);\r\n\trequire(21)(Chart);\r\n\trequire(22)(Chart);\r\n\trequire(23)(Chart);\r\n\trequire(27)(Chart);\r\n\trequire(31)(Chart);\r\n\trequire(29)(Chart);\r\n\trequire(30)(Chart);\r\n\trequire(32)(Chart);\r\n\trequire(28)(Chart);\r\n\trequire(33)(Chart);\r\n\t\r\n\trequire(34)(Chart);\r\n\trequire(35)(Chart);\r\n\trequire(36)(Chart);\r\n\trequire(37)(Chart);\r\n\t\r\n\trequire(40)(Chart);\r\n\trequire(38)(Chart);\r\n\trequire(39)(Chart);\r\n\trequire(41)(Chart);\r\n\trequire(42)(Chart);\r\n\trequire(43)(Chart);\r\n\t\r\n\t// Controllers must be loaded after elements\r\n\t// See Chart.core.datasetController.dataElementType\r\n\trequire(15)(Chart);\r\n\trequire(16)(Chart);\r\n\trequire(17)(Chart);\r\n\trequire(18)(Chart);\r\n\trequire(19)(Chart);\r\n\trequire(20)(Chart);\r\n\t\r\n\trequire(8)(Chart);\r\n\trequire(9)(Chart);\r\n\trequire(10)(Chart);\r\n\trequire(11)(Chart);\r\n\trequire(12)(Chart);\r\n\trequire(13)(Chart);\r\n\trequire(14)(Chart);\r\n\t\r\n\twindow.Chart = module.exports = Chart;\r\n\t\n\t},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Bar = function(context, config) {\r\n\t\t\tconfig.type = 'bar';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],9:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Bubble = function(context, config) {\r\n\t\t\tconfig.type = 'bubble';\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],10:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Doughnut = function(context, config) {\r\n\t\t\tconfig.type = 'doughnut';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],11:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.Line = function(context, config) {\r\n\t\t\tconfig.type = 'line';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],12:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tChart.PolarArea = function(context, config) {\r\n\t\t\tconfig.type = 'polarArea';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],13:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\t\r\n\t\tChart.Radar = function(context, config) {\r\n\t\t\tconfig.options = Chart.helpers.configMerge({ aspectRatio: 1 }, config.options);\r\n\t\t\tconfig.type = 'radar';\r\n\t\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\r\n\t\n\t},{}],14:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: 'single'\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t// Register the default config for this type\r\n\t\tChart.defaults.scatter = defaultConfig;\r\n\t\r\n\t\t// Scatter charts use line controllers\r\n\t\tChart.controllers.scatter = Chart.controllers.line;\r\n\t\r\n\t\tChart.Scatter = function(context, config) {\r\n\t\t\tconfig.type = 'scatter';\r\n\t\t\treturn new Chart(context, config);\r\n\t\t};\r\n\t\r\n\t};\n\t},{}],15:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.bar = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"category\",\r\n\t\r\n\t\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\t\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\"\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Rectangle,\r\n\t\r\n\t\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\t\r\n\t\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\t\tthis.getMeta().bar = true;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\t\tgetBarCount: function getBarCount() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar barCount = 0;\r\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\t++barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\t\t\treturn barCount;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\t\tme.updateElement(rectangle, index, reset);\r\n\t\t\t\t}, me);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function updateElement(rectangle, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\r\n\t\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: me.calculateBarX(index, me.index),\r\n\t\t\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\t\tdatasetLabel: dataset.label,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\t\twidth: me.calculateBarWidth(index),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\trectangle.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar base = 0;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\tvar chart = me.chart;\r\n\t\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\t\tvar value = datasets[datasetIndex].data[index];\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\t\tvar negDS = datasets[i];\r\n\t\t\t\t\t\t\tvar negDSMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\t\tvar posDS = datasets[j];\r\n\t\t\t\t\t\t\tvar posDSMeta = chart.getDatasetMeta(j);\r\n\t\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getBasePixel();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRuler: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar datasetCount = me.getBarCount();\r\n\t\r\n\t\t\t\tvar tickWidth;\r\n\t\r\n\t\t\t\tif (xScale.options.type === 'category') {\r\n\t\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Average width\r\n\t\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t\t}\r\n\t\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\t\r\n\t\t\t\tif (xScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t\t    var perc = xScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarWidth: function(index) {\r\n\t\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\t\tvar barIndex = 0;\r\n\t\t\t\tvar meta, j;\r\n\t\r\n\t\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t++barIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn barIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\t\r\n\t\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn leftTick +\r\n\t\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\t\truler.categorySpacing +\r\n\t\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar value = me.getDataset().data[index];\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\t\tsumNeg = 0;\r\n\t\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\t\tvar d = me.getDataset().data[index];\r\n\t\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\t\tvar index = rectangle._index;\r\n\t\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar model = rectangle._model;\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\t\tvar index = rectangle._index;\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar model = rectangle._model;\r\n\t\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t\t}\r\n\t\r\n\t\t});\r\n\t\r\n\t\r\n\t\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t\t// it extends bar (like pie extends doughnut)\r\n\t\tChart.defaults.horizontalBar = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"bottom\"\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\ttype: \"category\",\r\n\t\r\n\t\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\t\tbarPercentage: 0.9,\r\n\t\r\n\t\t\t\t\t// grid line settings\r\n\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\trectangle: {\r\n\t\t\t\t\tborderSkipped: 'left'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\t\tvar title = '';\r\n\t\r\n\t\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn title;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\t\r\n\t\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\r\n\t\t\t\t\t\ty: me.calculateBarY(index, me.index),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\t\tdatasetLabel: dataset.label,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\t\theight: me.calculateBarHeight(index),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tdraw: function () {\r\n\t\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\t\r\n\t\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t\t];\r\n\t\r\n\t\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\t\tstartCorner = 0;\r\n\t\r\n\t\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\t\r\n\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\t\tvar inRange = false;\r\n\t\r\n\t\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn inRange;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\trectangle.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar base = 0;\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\t\tvar negDS = me.chart.data.datasets[i];\r\n\t\t\t\t\t\t\tvar negDSMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\t\tvar posDS = me.chart.data.datasets[j];\r\n\t\t\t\t\t\t\tvar posDSMeta = me.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn xScale.getBasePixel();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRuler: function (index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar datasetCount = me.getBarCount();\r\n\t\r\n\t\t\t\tvar tickHeight;\r\n\t\t\t\tif (yScale.options.type === 'category') {\r\n\t\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Average width\r\n\t\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\r\n\t\t\t\t}\r\n\t\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\t\r\n\t\t\t\tif (yScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t\t\tvar perc = yScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\t\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarHeight: function (index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar yScale = me.getScaleForId(me.getMeta().yAxisID);\r\n\t\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar value = me.getDataset().data[index];\r\n\t\r\n\t\t\t\tif (xScale.options.stacked) {\r\n\t\r\n\t\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\t\tsumNeg = 0;\r\n\t\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\t\r\n\t\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn topTick +\r\n\t\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\t\truler.categorySpacing +\r\n\t\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],16:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.bubble = {\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"single\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\t\tposition: \"bottom\",\r\n\t\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tposition: \"left\",\r\n\t\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t\t}]\r\n\t\t\t},\r\n\t\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar points = meta.data;\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar data = dataset.data[index];\r\n\t\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\t\tvar dsIndex = me.index;\r\n\t\r\n\t\t\t\thelpers.extend(point, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_xScale: xScale,\r\n\t\t\t\t\t_yScale: yScale,\r\n\t\t\t\t\t_datasetIndex: dsIndex,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(data, index, dsIndex, me.chart.isCombo),\r\n\t\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Trick to reset the styles of the point\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\t\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\t\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tgetRadius: function(value) {\r\n\t\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\t\r\n\t\t\t\t// Radius\r\n\t\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\t\r\n\t\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],17:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tdefaults = Chart.defaults;\r\n\t\r\n\t\tdefaults.doughnut = {\r\n\t\t\tanimation: {\r\n\t\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\t\tanimateRotate: true,\r\n\t\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\t\tanimateScale: false\r\n\t\t\t},\r\n\t\t\taspectRatio: 1,\r\n\t\t\thover: {\r\n\t\t\t\tmode: 'single'\r\n\t\t\t},\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar labels = data.labels;\r\n\t\r\n\t\t\t\tif (datasets.length) {\r\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttext.push('</ul>');\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\t\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\t\r\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\t\tvar chart = this.chart;\r\n\t\t\t\t\tvar i, ilen, meta;\r\n\t\r\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tchart.update();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\t\tcutoutPercentage: 50,\r\n\t\r\n\t\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\t\trotation: Math.PI * -0.5,\r\n\t\r\n\t\t\t//The total circumference of the chart.\r\n\t\t\tcircumference: Math.PI * 2.0,\r\n\t\r\n\t\t\t// Need to override these to give a nice default\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function() {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\t\thelpers.extend(defaults.pie, {\r\n\t\t\tcutoutPercentage: 0\r\n\t\t});\r\n\t\r\n\t\r\n\t\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Arc,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\t\tvar ringIndex = 0;\r\n\t\r\n\t\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t++ringIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn ringIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\t\toffset = {\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\t\tcircumference = opts.circumference;\r\n\t\r\n\t\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tchart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\r\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\t\r\n\t\t\t\tmeta.total = me.calculateTotal();\r\n\t\r\n\t\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n\t\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart,\r\n\t\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\t\topts = chart.options,\r\n\t\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\t\tdataset = me.getDataset(),\r\n\t\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n\t\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n\t\t\t\t\tcustom = arc.custom || {},\r\n\t\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\r\n\t\t\t\thelpers.extend(arc, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tvar model = arc._model;\r\n\t\t\t\t// Resets the visual styles\r\n\t\t\t\tthis.removeHoverStyle(arc);\r\n\t\r\n\t\t\t\t// Set correct angles if not resetting\r\n\t\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarc.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(arc) {\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateTotal: function() {\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar total = 0;\r\n\t\t\t\tvar value;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn total;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateCircumference: function(value) {\r\n\t\t\t\tvar total = this.getMeta().total;\r\n\t\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],18:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.line = {\r\n\t\t\tshowLines: true,\r\n\t\r\n\t\t\thover: {\r\n\t\t\t\tmode: \"label\"\r\n\t\t\t},\r\n\t\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [{\r\n\t\t\t\t\ttype: \"category\",\r\n\t\t\t\t\tid: 'x-axis-0'\r\n\t\t\t\t}],\r\n\t\t\t\tyAxes: [{\r\n\t\t\t\t\ttype: \"linear\",\r\n\t\t\t\t\tid: 'y-axis-0'\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tfunction lineEnabled(dataset, options) {\r\n\t\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n\t\t}\r\n\t\r\n\t\tChart.controllers.line = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdatasetElementType: Chart.elements.Line,\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar options = me.chart.options;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\r\n\t\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\r\n\t\r\n\t\t\t\t// Make sure bezier control points are updated\r\n\t\t\t\tif (lineEnabled(me.getDataset(), options) && meta.dataset._model.tension !== 0) {\r\n\t\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar line = meta.dataset;\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar options = me.chart.options;\r\n\t\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar i, ilen, custom;\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar showLine = lineEnabled(dataset, options);\r\n\t\r\n\t\t\t\t// Update Line\r\n\t\t\t\tif (showLine) {\r\n\t\t\t\t\tcustom = line.custom || {};\r\n\t\r\n\t\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\tline._scale = scale;\r\n\t\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t\t// Data\r\n\t\t\t\t\tline._children = points;\r\n\t\t\t\t\t// Model\r\n\t\t\t\t\tline._model = {\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\t// The default behavior of lines is to break at null values, according\r\n\t\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n\t\t\t\t\t\t// This option gives linse the ability to span gaps\r\n\t\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : false,\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tline.pivot();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (showLine && line._model.tension !== 0) {\r\n\t\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoints[i].pivot();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn backgroundColor;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.borderColor) {\r\n\t\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn borderColor;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\r\n\t\t\t\tif (custom.borderWidth) {\r\n\t\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t\t} else if (dataset.pointBorderWidth) {\r\n\t\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t\t} else if (dataset.borderWidth) {\r\n\t\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn borderWidth;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar datasetIndex = me.index;\r\n\t\t\t\tvar value = dataset.data[index];\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\t\tvar x, y;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t\t}\r\n\t\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx = xScale.getPixelForValue(value, index, datasetIndex, me.chart.isCombo);\r\n\t\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex, me.chart.isCombo);\r\n\t\r\n\t\t\t\t// Utility\r\n\t\t\t\tpoint._xScale = xScale;\r\n\t\t\t\tpoint._yScale = yScale;\r\n\t\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\t\tpoint._index = index;\r\n\t\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\tpoint._model = {\r\n\t\t\t\t\tx: x,\r\n\t\t\t\t\ty: y,\r\n\t\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\t\tvar sumPos = 0;\r\n\t\t\t\tvar sumNeg = 0;\r\n\t\t\t\tvar i, ds, dsMeta;\r\n\t\r\n\t\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (dsMeta.type === 'line' && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateBezierControlPoints: function() {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar area = this.chart.chartArea;\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar i, ilen, point, model, controlPoints;\r\n\t\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoint = points[i];\r\n\t\t\t\t\tmodel = point._model;\r\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\r\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\r\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\r\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar points = meta.data || [];\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\tvar i, ilen;\r\n\t\r\n\t\t\t\t// Transition Point Locations\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Transition and Draw the line\r\n\t\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\r\n\t\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Draw the points\r\n\t\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\t\tpoints[i].draw();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\t// Point\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],19:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.polarArea = {\r\n\t\r\n\t\t\tscale: {\r\n\t\t\t\ttype: \"radialLinear\",\r\n\t\t\t\tlineArc: true // so that lines are circular\r\n\t\t\t},\r\n\t\r\n\t\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\t\tanimation: {\r\n\t\t\t\tanimateRotate: true,\r\n\t\t\t\tanimateScale: true\r\n\t\t\t},\r\n\t\r\n\t\t\taspectRatio: 1,\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar labels = data.labels;\r\n\t\r\n\t\t\t\tif (datasets.length) {\r\n\t\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttext.push('</ul>');\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\t\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\t\r\n\t\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\t\tvar chart = this.chart;\r\n\t\t\t\t\tvar i, ilen, meta;\r\n\t\r\n\t\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tchart.update();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Need to override these to give a nice default\r\n\t\t\ttooltips: {\r\n\t\t\t\tcallbacks: {\r\n\t\t\t\t\ttitle: function() {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Arc,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar opts = chart.options;\r\n\t\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\r\n\t\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n\t\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\t\r\n\t\t\t\tmeta.count = me.countVisibleElements();\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar opts = chart.options;\r\n\t\t\t\tvar animationOpts = opts.animation;\r\n\t\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\tvar scale = chart.scale;\r\n\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\tvar labels = chart.data.labels;\r\n\t\r\n\t\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\r\n\t\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\r\n\t\r\n\t\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\t\tvar visibleCount = 0;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t\t++visibleCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar negHalfPI = -0.5 * Math.PI;\r\n\t\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\t\tvar startAngle = (negHalfPI) + (circumference * visibleCount);\r\n\t\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\t\r\n\t\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\r\n\t\t\t\thelpers.extend(arc, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index,\r\n\t\t\t\t\t_scale: scale,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: centerX,\r\n\t\t\t\t\t\ty: centerY,\r\n\t\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\t\touterRadius: reset ? resetRadius : distance,\r\n\t\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? negHalfPI : startAngle,\r\n\t\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? negHalfPI : endAngle,\r\n\t\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Apply border and fill style\r\n\t\t\t\tme.removeHoverStyle(arc);\r\n\t\r\n\t\t\t\tarc.pivot();\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(arc) {\r\n\t\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t\t},\r\n\t\r\n\t\t\tcountVisibleElements: function() {\r\n\t\t\t\tvar dataset = this.getDataset();\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar count = 0;\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn count;\r\n\t\t\t},\r\n\t\r\n\t\t\tcalculateCircumference: function(value) {\r\n\t\t\t\tvar count = this.getMeta().count;\r\n\t\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],20:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.radar = {\r\n\t\t\tscale: {\r\n\t\t\t\ttype: \"radialLinear\"\r\n\t\t\t},\r\n\t\t\telements: {\r\n\t\t\t\tline: {\r\n\t\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\t\r\n\t\t\tdatasetElementType: Chart.elements.Line,\r\n\t\r\n\t\t\tdataElementType: Chart.elements.Point,\r\n\t\r\n\t\t\tlinkScales: helpers.noop,\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\r\n\t\r\n\t\t\t\t// Make sure bezier control points are updated\r\n\t\t\t\tthis.updateBezierControlPoints();\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar line = meta.dataset;\r\n\t\t\t\tvar points = meta.data;\r\n\t\t\t\tvar custom = line.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar lineElementOptions = me.chart.options.elements.line;\r\n\t\t\t\tvar scale = me.chart.scale;\r\n\t\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t// Data\r\n\t\t\t\t\t_children: points,\r\n\t\t\t\t\t_loop: true,\r\n\t\t\t\t\t// Model\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\r\n\t\t\t\t\t\t// Scale\r\n\t\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tmeta.dataset.pivot();\r\n\t\r\n\t\t\t\t// Update Points\r\n\t\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t\t}, me);\r\n\t\r\n\t\r\n\t\t\t\t// Update bezier control points\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t},\r\n\t\t\tupdateElement: function(point, index, reset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\t\t\tvar scale = me.chart.scale;\r\n\t\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\t\r\n\t\t\t\thelpers.extend(point, {\r\n\t\t\t\t\t// Utility\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index,\r\n\t\t\t\t\t_scale: scale,\r\n\t\r\n\t\t\t\t\t// Desired view properties\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),\r\n\t\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\t\r\n\t\t\t\t\t\t// Tooltip\r\n\t\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t\t},\r\n\t\t\tupdateBezierControlPoints: function() {\r\n\t\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\r\n\t\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\t\tvar model = point._model;\r\n\t\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\t\tmodel.tension\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\t\r\n\t\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\t\r\n\t\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\t\tpoint.pivot();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar meta = this.getMeta();\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\r\n\t\t\t\t// Transition Point Locations\r\n\t\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Transition and Draw the line\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\r\n\t\t\t\t// Draw the points\r\n\t\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\t\tpoint.draw();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(point) {\r\n\t\t\t\t// Point\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar model = point._model;\r\n\t\r\n\t\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(point) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\t\tvar custom = point.custom || {};\r\n\t\t\t\tvar index = point._index;\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\t\r\n\t\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],21:[function(require,module,exports){\n\t/*global window: false */\r\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.animation = {\r\n\t\t\tduration: 1000,\r\n\t\t\teasing: \"easeOutQuart\",\r\n\t\t\tonProgress: helpers.noop,\r\n\t\t\tonComplete: helpers.noop\r\n\t\t};\r\n\t\r\n\t\tChart.Animation = Chart.Element.extend({\r\n\t\t\tcurrentStep: null, // the current animation step\r\n\t\t\tnumSteps: 60, // default number of steps\r\n\t\t\teasing: \"\", // the easing to use for this animation\r\n\t\t\trender: null, // render function used by the animation service\r\n\t\r\n\t\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t\t});\r\n\t\r\n\t\tChart.animationService = {\r\n\t\t\tframeDuration: 17,\r\n\t\t\tanimations: [],\r\n\t\t\tdropFrames: 0,\r\n\t\t\trequest: null,\r\n\t\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\tif (!lazy) {\r\n\t\t\t\t\tchartInstance.animating = true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\r\n\t\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\t\tme.animations[index].animationObject = animationObject;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.animations.push({\r\n\t\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\t\tanimationObject: animationObject\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\t\tif (me.animations.length === 1) {\r\n\t\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// Cancel the animation for a given chart instance\r\n\t\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\t\tchartInstance.animating = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trequestAnimationFrame: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (me.request === null) {\r\n\t\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\t\tme.request = null;\r\n\t\t\t\t\t\tme.startDigest();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstartDigest: function() {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\tvar startTime = Date.now();\r\n\t\t\t\tvar framesToDrop = 0;\r\n\t\r\n\t\t\t\tif (me.dropFrames > 1) {\r\n\t\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\r\n\t\t\t\t\tme.dropFrames = me.dropFrames % 1;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile (i < me.animations.length) {\r\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\t\r\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\r\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\t\tme.animations[i].chartInstance.animating = false;\r\n\t\r\n\t\t\t\t\t\tme.animations.splice(i, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar endTime = Date.now();\r\n\t\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\r\n\t\r\n\t\t\t\tme.dropFrames += dropFrames;\r\n\t\r\n\t\t\t\t// Do we have more stuff to animate?\r\n\t\t\t\tif (me.animations.length > 0) {\r\n\t\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\n\t},{}],22:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\t\tChart.types = {};\r\n\t\r\n\t\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\t\tChart.instances = {};\r\n\t\r\n\t\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\t\tChart.controllers = {};\r\n\t\r\n\t\t/**\r\n\t\t * @class Chart.Controller\r\n\t\t * The main controller of a chart.\r\n\t\t */\r\n\t\tChart.Controller = function(instance) {\r\n\t\r\n\t\t\tthis.chart = instance;\r\n\t\t\tthis.config = instance.config;\r\n\t\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\t\tthis.id = helpers.uid();\r\n\t\r\n\t\t\tObject.defineProperty(this, 'data', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this.config.data;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t//Add the chart instance to the global namespace\r\n\t\t\tChart.instances[this.id] = this;\r\n\t\r\n\t\t\tif (this.options.responsive) {\r\n\t\t\t\t// Silent resize before chart draws\r\n\t\t\t\tthis.resize(true);\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.initialize();\r\n\t\r\n\t\t\treturn this;\r\n\t\t};\r\n\t\r\n\t\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {\r\n\t\r\n\t\t\tinitialize: function initialize() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Before init plugin notification\r\n\t\t\t\tChart.plugins.notify('beforeInit', [me]);\r\n\t\r\n\t\t\t\tme.bindEvents();\r\n\t\r\n\t\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t\t// are built\r\n\t\t\t\tme.ensureScalesHaveIDs();\r\n\t\t\t\tme.buildOrUpdateControllers();\r\n\t\t\t\tme.buildScales();\r\n\t\t\t\tme.updateLayout();\r\n\t\t\t\tme.resetElements();\r\n\t\t\t\tme.initToolTip();\r\n\t\t\t\tme.update();\r\n\t\r\n\t\t\t\t// After init plugin notification\r\n\t\t\t\tChart.plugins.notify('afterInit', [me]);\r\n\t\r\n\t\t\t\treturn me;\r\n\t\t\t},\r\n\t\r\n\t\t\tclear: function clear() {\r\n\t\t\t\thelpers.clear(this.chart);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tstop: function stop() {\r\n\t\t\t\t// Stops any current animation loop occuring\r\n\t\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\r\n\t\t\tresize: function resize(silent) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar canvas = chart.canvas;\r\n\t\t\t\tvar newWidth = helpers.getMaximumWidth(canvas);\r\n\t\t\t\tvar aspectRatio = chart.aspectRatio;\r\n\t\t\t\tvar newHeight = (me.options.maintainAspectRatio && isNaN(aspectRatio) === false && isFinite(aspectRatio) && aspectRatio !== 0) ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas);\r\n\t\r\n\t\t\t\tvar sizeChanged = chart.width !== newWidth || chart.height !== newHeight;\r\n\t\r\n\t\t\t\tif (!sizeChanged) {\r\n\t\t\t\t\treturn me;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcanvas.width = chart.width = newWidth;\r\n\t\t\t\tcanvas.height = chart.height = newHeight;\r\n\t\r\n\t\t\t\thelpers.retinaScale(chart);\r\n\t\r\n\t\t\t\t// Notify any plugins about the resize\r\n\t\t\t\tvar newSize = { width: newWidth, height: newHeight };\r\n\t\t\t\tChart.plugins.notify('resize', [me, newSize]);\r\n\t\r\n\t\t\t\t// Notify of resize\r\n\t\t\t\tif (me.options.onResize) {\r\n\t\t\t\t\tme.options.onResize(me, newSize);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (!silent) {\r\n\t\t\t\t\tme.stop();\r\n\t\t\t\t\tme.update(me.options.responsiveAnimationDuration);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn me;\r\n\t\t\t},\r\n\t\r\n\t\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\t\tvar options = this.options;\r\n\t\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\t\tvar scaleOptions = options.scale;\r\n\t\r\n\t\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (scaleOptions) {\r\n\t\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t\t */\r\n\t\t\tbuildScales: function buildScales() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar options = me.options;\r\n\t\t\t\tvar scales = me.scales = {};\r\n\t\t\t\tvar items = [];\r\n\t\r\n\t\t\t\tif (options.scales) {\r\n\t\t\t\t\titems = items.concat(\r\n\t\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\t\treturn { options: xAxisOptions, dtype: 'category' }; }),\r\n\t\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\t\treturn { options: yAxisOptions, dtype: 'linear' }; }));\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (options.scale) {\r\n\t\t\t\t\titems.push({ options: options.scale, dtype: 'radialLinear', isDefault: true });\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(items, function(item, index) {\r\n\t\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\t\tchart: me\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tscales[scale.id] = scale;\r\n\t\r\n\t\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateLayout: function() {\r\n\t\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar types = [];\r\n\t\t\t\tvar newControllers = [];\r\n\t\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\t\tmeta.type = dataset.type || me.config.type;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttypes.push(meta.type);\r\n\t\r\n\t\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\r\n\t\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\tif (types.length > 1) {\r\n\t\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\t\tme.isCombo = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn newControllers;\r\n\t\t\t},\r\n\t\r\n\t\t\tresetElements: function resetElements() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t\t}, me);\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tChart.plugins.notify('beforeUpdate', [me]);\r\n\t\r\n\t\t\t\t// In case the entire data object changed\r\n\t\t\t\tme.tooltip._data = me.data;\r\n\t\r\n\t\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\t\tvar newControllers = me.buildOrUpdateControllers();\r\n\t\r\n\t\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\tChart.layoutService.update(me, me.chart.width, me.chart.height);\r\n\t\r\n\t\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\t\tChart.plugins.notify('afterScaleUpdate', [me]);\r\n\t\r\n\t\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\t\tcontroller.reset();\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tme.updateDatasets();\r\n\t\r\n\t\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\t\tChart.plugins.notify('afterUpdate', [me]);\r\n\t\r\n\t\t\t\tme.render(animationDuration, lazy);\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * @method beforeDatasetsUpdate\r\n\t\t\t * @description Called before all datasets are updated. If a plugin returns false,\r\n\t\t\t * the datasets update will be cancelled until another chart update is triggered.\r\n\t\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t\t * @returns {Boolean} false to cancel the datasets update.\r\n\t\t\t * @memberof Chart.PluginBase\r\n\t\t\t * @since version 2.1.5\r\n\t\t\t * @instance\r\n\t\t\t */\r\n\t\r\n\t\t\t/**\r\n\t\t\t * @method afterDatasetsUpdate\r\n\t\t\t * @description Called after all datasets have been updated. Note that this\r\n\t\t\t * extension will not be called if the datasets update has been cancelled.\r\n\t\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t\t * @memberof Chart.PluginBase\r\n\t\t\t * @since version 2.1.5\r\n\t\t\t * @instance\r\n\t\t\t */\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate\r\n\t\t\t * extension, in which case no datasets will be updated and the afterDatasetsUpdate\r\n\t\t\t * notification will be skipped.\r\n\t\t\t * @protected\r\n\t\t\t * @instance\r\n\t\t\t */\r\n\t\t\tupdateDatasets: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar i, ilen;\r\n\t\r\n\t\t\t\tif (Chart.plugins.notify('beforeDatasetsUpdate', [ me ])) {\r\n\t\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\t\t\tme.getDatasetMeta(i).controller.update();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tChart.plugins.notify('afterDatasetsUpdate', [ me ]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\trender: function render(duration, lazy) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tChart.plugins.notify('beforeRender', [me]);\r\n\t\r\n\t\t\t\tvar animationOptions = me.options.animation;\r\n\t\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; //60 fps\r\n\t\t\t\t\tanimation.easing = animationOptions.easing;\r\n\t\r\n\t\t\t\t\t// render function\r\n\t\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\t\r\n\t\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t// user events\r\n\t\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\r\n\t\r\n\t\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.draw();\r\n\t\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\r\n\t\t\t\t\t\tanimationOptions.onComplete.call(me);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn me;\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\tme.clear();\r\n\t\r\n\t\t\t\tChart.plugins.notify('beforeDraw', [me, easingDecimal]);\r\n\t\r\n\t\t\t\t// Draw all the scales\r\n\t\t\t\thelpers.each(me.boxes, function(box) {\r\n\t\t\t\t\tbox.draw(me.chartArea);\r\n\t\t\t\t}, me);\r\n\t\t\t\tif (me.scale) {\r\n\t\t\t\t\tme.scale.draw();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tChart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\r\n\t\r\n\t\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me, true);\r\n\t\r\n\t\t\t\tChart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\r\n\t\r\n\t\t\t\t// Finally draw the tooltip\r\n\t\t\t\tme.tooltip.transition(easingDecimal).draw();\r\n\t\r\n\t\t\t\tChart.plugins.notify('afterDraw', [me, easingDecimal]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the single element that was clicked on\r\n\t\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\t\tgetElementAtEvent: function(e) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\t\tvar elementsArray = [];\r\n\t\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetElementsAtEvent: function(e) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\t\tvar elementsArray = [];\r\n\t\r\n\t\t\t\tvar found = (function() {\r\n\t\t\t\t\tif (me.data.datasets) {\r\n\t\t\t\t\t\tfor (var i = 0; i < me.data.datasets.length; i++) {\r\n\t\t\t\t\t\t\tvar meta = me.getDatasetMeta(i);\r\n\t\t\t\t\t\t\tif (me.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}).call(me);\r\n\t\r\n\t\t\t\tif (!found) {\r\n\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetElementsAtEventForMode: function(e, mode) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tswitch (mode) {\r\n\t\t\t\tcase 'single':\r\n\t\t\t\t\treturn me.getElementAtEvent(e);\r\n\t\t\t\tcase 'label':\r\n\t\t\t\t\treturn me.getElementsAtEvent(e);\r\n\t\t\t\tcase 'dataset':\r\n\t\t\t\t\treturn me.getDatasetAtEvent(e);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn e;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\t\r\n\t\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar dataset = me.data.datasets[datasetIndex];\r\n\t\t\t\tif (!dataset._meta) {\r\n\t\t\t\t\tdataset._meta = {};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar meta = dataset._meta[me.id];\r\n\t\t\t\tif (!meta) {\r\n\t\t\t\t\tmeta = dataset._meta[me.id] = {\r\n\t\t\t\t\ttype: null,\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tdataset: null,\r\n\t\t\t\t\tcontroller: null,\r\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\t\txAxisID: null,\r\n\t\t\t\t\tyAxisID: null\r\n\t\t\t\t};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn meta;\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVisibleDatasetCount: function() {\r\n\t\t\t\tvar count = 0;\r\n\t\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t},\r\n\t\r\n\t\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\t\r\n\t\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t\t},\r\n\t\r\n\t\t\tgenerateLegend: function generateLegend() {\r\n\t\t\t\treturn this.options.legendCallback(this);\r\n\t\t\t},\r\n\t\r\n\t\t\tdestroy: function destroy() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.stop();\r\n\t\t\t\tme.clear();\r\n\t\t\t\thelpers.unbindEvents(me, me.events);\r\n\t\t\t\thelpers.removeResizeListener(me.chart.canvas.parentNode);\r\n\t\r\n\t\t\t\t// Reset canvas height/width attributes\r\n\t\t\t\tvar canvas = me.chart.canvas;\r\n\t\t\t\tcanvas.width = me.chart.width;\r\n\t\t\t\tcanvas.height = me.chart.height;\r\n\t\r\n\t\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\t\tif (me.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\t\tme.chart.ctx.scale(1 / me.chart.originalDevicePixelRatio, 1 / me.chart.originalDevicePixelRatio);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\t\tcanvas.style.width = me.chart.originalCanvasStyleWidth;\r\n\t\t\t\tcanvas.style.height = me.chart.originalCanvasStyleHeight;\r\n\t\r\n\t\t\t\tChart.plugins.notify('destroy', [me]);\r\n\t\r\n\t\t\t\tdelete Chart.instances[me.id];\r\n\t\t\t},\r\n\t\r\n\t\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t\t},\r\n\t\r\n\t\t\tinitToolTip: function initToolTip() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.tooltip = new Chart.Tooltip({\r\n\t\t\t\t\t_chart: me.chart,\r\n\t\t\t\t\t_chartInstance: me,\r\n\t\t\t\t\t_data: me.data,\r\n\t\t\t\t\t_options: me.options.tooltips\r\n\t\t\t\t}, me);\r\n\t\t\t},\r\n\t\r\n\t\t\tbindEvents: function bindEvents() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\thelpers.bindEvents(me, me.options.events, function(evt) {\r\n\t\t\t\t\tme.eventHandler(evt);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\t\tvar element, i, ilen;\r\n\t\r\n\t\t\t\tswitch (mode) {\r\n\t\t\t\tcase 'single':\r\n\t\t\t\t\telements = [ elements[0] ];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'label':\r\n\t\t\t\tcase 'dataset':\r\n\t\t\t\t\t// elements = elements;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// unsupported mode\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\t\telement = elements[i];\r\n\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\teventHandler: function eventHandler(e) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar tooltip = me.tooltip;\r\n\t\t\t\tvar options = me.options || {};\r\n\t\t\t\tvar hoverOptions = options.hover;\r\n\t\t\t\tvar tooltipsOptions = options.tooltips;\r\n\t\r\n\t\t\t\tme.lastActive = me.lastActive || [];\r\n\t\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\r\n\t\r\n\t\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\t\tme.active = [];\r\n\t\t\t\t\tme.tooltipActive = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\r\n\t\t\t\t\tme.tooltipActive =  me.getElementsAtEventForMode(e, tooltipsOptions.mode);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// On Hover hook\r\n\t\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\t\thoverOptions.onHover.call(me, me.active);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\t\toptions.onClick.call(me, e, me.active);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (me.legend && me.legend.handleEvent) {\r\n\t\t\t\t\t\tme.legend.handleEvent(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\t\tif (me.lastActive.length) {\r\n\t\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Built in hover styling\r\n\t\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Built in Tooltips\r\n\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\ttooltip.initialize();\r\n\t\t\t\t\ttooltip._active = me.tooltipActive;\r\n\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Hover animations\r\n\t\t\t\ttooltip.pivot();\r\n\t\r\n\t\t\t\tif (!me.animating) {\r\n\t\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\r\n\t\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\r\n\t\r\n\t\t\t\t\t\tme.stop();\r\n\t\r\n\t\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Remember Last Actives\r\n\t\t\t\tme.lastActive = me.active;\r\n\t\t\t\tme.lastTooltipActive = me.tooltipActive;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],23:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar noop = helpers.noop;\r\n\t\r\n\t\t// Base class for all dataset controllers (line, bar, etc)\r\n\t\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t\t};\r\n\t\r\n\t\thelpers.extend(Chart.DatasetController.prototype, {\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t\t * @type {Chart.core.element}\r\n\t\t\t */\r\n\t\t\tdatasetElementType: null,\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t\t * @type {Chart.core.element}\r\n\t\t\t */\r\n\t\t\tdataElementType: null,\r\n\t\r\n\t\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.chart = chart;\r\n\t\t\t\tme.index = datasetIndex;\r\n\t\t\t\tme.linkScales();\r\n\t\t\t\tme.addElements();\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\t\tthis.index = datasetIndex;\r\n\t\t\t},\r\n\t\r\n\t\t\tlinkScales: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar dataset = me.getDataset();\r\n\t\r\n\t\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t\t}\r\n\t\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetDataset: function() {\r\n\t\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t\t},\r\n\t\r\n\t\t\tgetMeta: function() {\r\n\t\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetScaleForId: function(scaleID) {\r\n\t\t\t\treturn this.chart.scales[scaleID];\r\n\t\t\t},\r\n\t\r\n\t\t\treset: function() {\r\n\t\t\t\tthis.update(true);\r\n\t\t\t},\r\n\t\r\n\t\t\tcreateMetaDataset: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar type = me.datasetElementType;\r\n\t\t\t\treturn type && new type({\r\n\t\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t\t_datasetIndex: me.index\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tcreateMetaData: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar type = me.dataElementType;\r\n\t\t\t\treturn type && new type({\r\n\t\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t\t_index: index\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\taddElements: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar meta = me.getMeta();\r\n\t\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\t\tvar metaData = meta.data;\r\n\t\t\t\tvar i, ilen;\r\n\t\r\n\t\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t\t},\r\n\t\r\n\t\t\taddElementAndReset: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar element = me.createMetaData(index);\r\n\t\t\t\tme.getMeta().data.splice(index, 0, element);\r\n\t\t\t\tme.updateElement(element, index, true);\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t\t// Handle the number of data points changing\r\n\t\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\t\tmd = meta.data,\r\n\t\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\t\tnumMetaData = md.length;\r\n\t\r\n\t\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t\t// Add new elements\r\n\t\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: noop,\r\n\t\r\n\t\t\tdraw: function(ease) {\r\n\t\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\t\thelpers.each(this.getMeta().data, function(element, index) {\r\n\t\t\t\t\telement.transition(easingDecimal).draw();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\t\tindex = element._index,\r\n\t\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\t\tcolor = helpers.color,\r\n\t\t\t\t\tmodel = element._model;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\tsetHoverStyle: function(element) {\r\n\t\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\t\tindex = element._index,\r\n\t\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\t\tcolor = helpers.color,\r\n\t\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\t\tmodel = element._model;\r\n\t\r\n\t\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\tChart.DatasetController.extend = helpers.inherits;\r\n\t};\n\t},{}],24:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t  var helpers = Chart.helpers;\r\n\t\r\n\t  Chart.elements = {};\r\n\t\r\n\t  Chart.Element = function(configuration) {\r\n\t    helpers.extend(this, configuration);\r\n\t    this.initialize.apply(this, arguments);\r\n\t  };\r\n\t\r\n\t  helpers.extend(Chart.Element.prototype, {\r\n\t\r\n\t    initialize: function() {\r\n\t      this.hidden = false;\r\n\t    },\r\n\t\r\n\t    pivot: function() {\r\n\t      var me = this;\r\n\t      if (!me._view) {\r\n\t        me._view = helpers.clone(me._model);\r\n\t      }\r\n\t      me._start = helpers.clone(me._view);\r\n\t      return me;\r\n\t    },\r\n\t\r\n\t    transition: function(ease) {\r\n\t      var me = this;\r\n\t      \r\n\t      if (!me._view) {\r\n\t        me._view = helpers.clone(me._model);\r\n\t      }\r\n\t\r\n\t      // No animation -> No Transition\r\n\t      if (ease === 1) {\r\n\t        me._view = me._model;\r\n\t        me._start = null;\r\n\t        return me;\r\n\t      }\r\n\t\r\n\t      if (!me._start) {\r\n\t        me.pivot();\r\n\t      }\r\n\t\r\n\t      helpers.each(me._model, function(value, key) {\r\n\t\r\n\t        if (key[0] === '_') {\r\n\t          // Only non-underscored properties\r\n\t        }\r\n\t\r\n\t        // Init if doesn't exist\r\n\t        else if (!me._view.hasOwnProperty(key)) {\r\n\t          if (typeof value === 'number' && !isNaN(me._view[key])) {\r\n\t            me._view[key] = value * ease;\r\n\t          } else {\r\n\t            me._view[key] = value;\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // No unnecessary computations\r\n\t        else if (value === me._view[key]) {\r\n\t          // It's the same! Woohoo!\r\n\t        }\r\n\t\r\n\t        // Color transitions if possible\r\n\t        else if (typeof value === 'string') {\r\n\t          try {\r\n\t            var color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\r\n\t            me._view[key] = color.rgbString();\r\n\t          } catch (err) {\r\n\t            me._view[key] = value;\r\n\t          }\r\n\t        }\r\n\t        // Number transitions\r\n\t        else if (typeof value === 'number') {\r\n\t          var startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\r\n\t          me._view[key] = ((me._model[key] - startVal) * ease) + startVal;\r\n\t        }\r\n\t        // Everything else\r\n\t        else {\r\n\t          me._view[key] = value;\r\n\t        }\r\n\t      }, me);\r\n\t\r\n\t      return me;\r\n\t    },\r\n\t\r\n\t    tooltipPosition: function() {\r\n\t      return {\r\n\t        x: this._model.x,\r\n\t        y: this._model.y\r\n\t      };\r\n\t    },\r\n\t\r\n\t    hasValue: function() {\r\n\t      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n\t    }\r\n\t  });\r\n\t\r\n\t  Chart.Element.extend = helpers.inherits;\r\n\t\r\n\t};\r\n\t\n\t},{}],25:[function(require,module,exports){\n\t/*global window: false */\r\n\t/*global document: false */\r\n\t\"use strict\";\r\n\t\r\n\tvar color = require(3);\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\t//Global Chart helpers object for utility methods and classes\r\n\t\tvar helpers = Chart.helpers = {};\r\n\t\r\n\t\t//-- Basic js utility methods\r\n\t\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t\t// Check to see if null or undefined firstly.\r\n\t\t\tvar i, len;\r\n\t\t\tif (helpers.isArray(loopable)) {\r\n\t\t\t\tlen = loopable.length;\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof loopable === 'object') {\r\n\t\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\t\tlen = keys.length;\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.clone = function(obj) {\r\n\t\t\tvar objClone = {};\r\n\t\t\thelpers.each(obj, function(value, key) {\r\n\t\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobjClone[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn objClone;\r\n\t\t};\r\n\t\thelpers.extend = function(base) {\r\n\t\t\tvar setFn = function(value, key) { base[key] = value; };\r\n\t\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n\t\t\t\thelpers.each(arguments[i], setFn);\r\n\t\t\t}\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\t// Need a special merge function to chart configs since they are now grouped\r\n\t\thelpers.configMerge = function(_base) {\r\n\t\t\tvar base = helpers.clone(_base);\r\n\t\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\t\r\n\t\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\t\tvar baseArray = base[key];\r\n\t\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\r\n\t\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\thelpers.scaleMerge = function(_base, extension) {\r\n\t\t\tvar base = helpers.clone(_base);\r\n\t\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t\t// These properties are arrays of items\r\n\t\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn base;\r\n\t\t};\r\n\t\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\treturn defaultValue;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn value;\r\n\t\t};\r\n\t\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\t\treturn value === undefined ? defaultValue : value;\r\n\t\t};\r\n\t\thelpers.indexOf = Array.prototype.indexOf?\r\n\t\t\tfunction(array, item) { return array.indexOf(item); } :\r\n\t\t\tfunction(array, item) {\r\n\t\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\t\tif (array[i] === item) {\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t};\r\n\t\thelpers.where = function(collection, filterCallback) {\r\n\t\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\t\treturn collection.filter(filterCallback);\r\n\t\t\t} else {\r\n\t\t\t\tvar filtered = [];\r\n\t\r\n\t\t\t\thelpers.each(collection, function(item) {\r\n\t\t\t\t\tif (filterCallback(item)) {\r\n\t\t\t\t\t\tfiltered.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn filtered;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.findIndex = Array.prototype.findIndex?\r\n\t\t\tfunction(array, callback, scope) { return array.findIndex(callback, scope); } :\r\n\t\t\tfunction(array, callback, scope) {\r\n\t\t\t\tscope = scope === undefined? array : scope;\r\n\t\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\t\tif (callback.call(scope, array[i], i, array)) {\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn -1;\r\n\t\t\t};\r\n\t\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t\t// Default to start of the array\r\n\t\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\t\tstartIndex = -1;\r\n\t\t\t}\r\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\t\treturn currentItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t\t// Default to end of the array\r\n\t\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t\t}\r\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\t\treturn currentItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.inherits = function(extensions) {\r\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\t\tvar parent = this;\r\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\t\treturn parent.apply(this, arguments);\r\n\t\t\t};\r\n\t\r\n\t\t\tvar Surrogate = function() {\r\n\t\t\t\tthis.constructor = ChartElement;\r\n\t\t\t};\r\n\t\t\tSurrogate.prototype = parent.prototype;\r\n\t\t\tChartElement.prototype = new Surrogate();\r\n\t\r\n\t\t\tChartElement.extend = helpers.inherits;\r\n\t\r\n\t\t\tif (extensions) {\r\n\t\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t\t}\r\n\t\r\n\t\t\tChartElement.__super__ = parent.prototype;\r\n\t\r\n\t\t\treturn ChartElement;\r\n\t\t};\r\n\t\thelpers.noop = function() {};\r\n\t\thelpers.uid = (function() {\r\n\t\t\tvar id = 0;\r\n\t\t\treturn function() {\r\n\t\t\t\treturn id++;\r\n\t\t\t};\r\n\t\t})();\r\n\t\t//-- Math methods\r\n\t\thelpers.isNumber = function(n) {\r\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t\t};\r\n\t\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\t\treturn Math.abs(x - y) < epsilon;\r\n\t\t};\r\n\t\thelpers.max = function(array) {\r\n\t\t\treturn array.reduce(function(max, value) {\r\n\t\t\t\tif (!isNaN(value)) {\r\n\t\t\t\t\treturn Math.max(max, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn max;\r\n\t\t\t\t}\r\n\t\t\t}, Number.NEGATIVE_INFINITY);\r\n\t\t};\r\n\t\thelpers.min = function(array) {\r\n\t\t\treturn array.reduce(function(min, value) {\r\n\t\t\t\tif (!isNaN(value)) {\r\n\t\t\t\t\treturn Math.min(min, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t}\r\n\t\t\t}, Number.POSITIVE_INFINITY);\r\n\t\t};\r\n\t\thelpers.sign = Math.sign?\r\n\t\t\tfunction(x) { return Math.sign(x); } :\r\n\t\t\tfunction(x) {\r\n\t\t\t\tx = +x; // convert to a number\r\n\t\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\t\treturn x;\r\n\t\t\t\t}\r\n\t\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t\t};\r\n\t\thelpers.log10 = Math.log10?\r\n\t\t\tfunction(x) { return Math.log10(x); } :\r\n\t\t\tfunction(x) {\r\n\t\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t\t};\r\n\t\thelpers.toRadians = function(degrees) {\r\n\t\t\treturn degrees * (Math.PI / 180);\r\n\t\t};\r\n\t\thelpers.toDegrees = function(radians) {\r\n\t\t\treturn radians * (180 / Math.PI);\r\n\t\t};\r\n\t\t// Gets the angle from vertical upright to the point about a centre.\r\n\t\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\t\r\n\t\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\t\r\n\t\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tangle: angle,\r\n\t\t\t\tdistance: radialDistanceFromCenter\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t\t};\r\n\t\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\t\r\n\t\t\t// This function must also respect \"skipped\" points\r\n\t\r\n\t\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\t\tcurrent = middlePoint,\r\n\t\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\t\r\n\t\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\t\r\n\t\t\tvar s01 = d01 / (d01 + d12);\r\n\t\t\tvar s12 = d12 / (d01 + d12);\r\n\t\r\n\t\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\t\r\n\t\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\t\tvar fb = t * s12;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tprevious: {\r\n\t\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t\t},\r\n\t\t\t\tnext: {\r\n\t\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.nextItem = function(collection, index, loop) {\r\n\t\t\tif (loop) {\r\n\t\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t\t};\r\n\t\thelpers.previousItem = function(collection, index, loop) {\r\n\t\t\tif (loop) {\r\n\t\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t\t}\r\n\t\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t\t};\r\n\t\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\t\thelpers.niceNum = function(range, round) {\r\n\t\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\t\tvar niceFraction;\r\n\t\r\n\t\t\tif (round) {\r\n\t\t\t\tif (fraction < 1.5) {\r\n\t\t\t\t\tniceFraction = 1;\r\n\t\t\t\t} else if (fraction < 3) {\r\n\t\t\t\t\tniceFraction = 2;\r\n\t\t\t\t} else if (fraction < 7) {\r\n\t\t\t\t\tniceFraction = 5;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tniceFraction = 10;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\t\tniceFraction = 1;\r\n\t\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\t\tniceFraction = 2;\r\n\t\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\t\tniceFraction = 5;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tniceFraction = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t\t};\r\n\t\t//Easing functions adapted from Robert Penner's easing equations\r\n\t\t//http://www.robertpenner.com/easing/\r\n\t\tvar easingEffects = helpers.easingEffects = {\r\n\t\t\tlinear: function(t) {\r\n\t\t\t\treturn t;\r\n\t\t\t},\r\n\t\t\teaseInQuad: function(t) {\r\n\t\t\t\treturn t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuad: function(t) {\r\n\t\t\t\treturn -1 * t * (t - 2);\r\n\t\t\t},\r\n\t\t\teaseInOutQuad: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t\t},\r\n\t\t\teaseInCubic: function(t) {\r\n\t\t\t\treturn t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutCubic: function(t) {\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutCubic: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t\t},\r\n\t\t\teaseInQuart: function(t) {\r\n\t\t\t\treturn t * t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuart: function(t) {\r\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t\t},\r\n\t\t\teaseInOutQuart: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t\t},\r\n\t\t\teaseInQuint: function(t) {\r\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t\t},\r\n\t\t\teaseOutQuint: function(t) {\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutQuint: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t\t},\r\n\t\t\teaseInSine: function(t) {\r\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t\t},\r\n\t\t\teaseOutSine: function(t) {\r\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t\t},\r\n\t\t\teaseInOutSine: function(t) {\r\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t\t},\r\n\t\t\teaseInExpo: function(t) {\r\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t\t},\r\n\t\t\teaseOutExpo: function(t) {\r\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutExpo: function(t) {\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (t === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t\t},\r\n\t\t\teaseInCirc: function(t) {\r\n\t\t\t\tif (t >= 1) {\r\n\t\t\t\t\treturn t;\r\n\t\t\t\t}\r\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t\t},\r\n\t\t\teaseOutCirc: function(t) {\r\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t\t},\r\n\t\t\teaseInOutCirc: function(t) {\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t\t},\r\n\t\t\teaseInElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * 0.3;\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t},\r\n\t\t\teaseOutElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * 0.3;\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t\t},\r\n\t\t\teaseInOutElastic: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tvar p = 0;\r\n\t\t\t\tvar a = 1;\r\n\t\t\t\tif (t === 0) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (!p) {\r\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t\t}\r\n\t\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\t\ta = 1;\r\n\t\t\t\t\ts = p / 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t\t}\r\n\t\t\t\tif (t < 1) {\r\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t\t}\r\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t\t},\r\n\t\t\teaseInBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t\t},\r\n\t\t\teaseOutBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t\t},\r\n\t\t\teaseInOutBack: function(t) {\r\n\t\t\t\tvar s = 1.70158;\r\n\t\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t\t}\r\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t\t},\r\n\t\t\teaseInBounce: function(t) {\r\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t\t},\r\n\t\t\teaseOutBounce: function(t) {\r\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\teaseInOutBounce: function(t) {\r\n\t\t\t\tif (t < 1 / 2) {\r\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t\t}\r\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t\t}\r\n\t\t};\r\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\t\thelpers.requestAnimFrame = (function() {\r\n\t\t\treturn window.requestAnimationFrame ||\r\n\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\t\tfunction(callback) {\r\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t\t};\r\n\t\t})();\r\n\t\thelpers.cancelAnimFrame = (function() {\r\n\t\t\treturn window.cancelAnimationFrame ||\r\n\t\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\t\tfunction(callback) {\r\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t\t};\r\n\t\t})();\r\n\t\t//-- DOM methods\r\n\t\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\t\tvar mouseX, mouseY;\r\n\t\t\tvar e = evt.originalEvent || evt,\r\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\t\r\n\t\t\tvar touches = e.touches;\r\n\t\t\tif (touches && touches.length > 0) {\r\n\t\t\t\tmouseX = touches[0].clientX;\r\n\t\t\t\tmouseY = touches[0].clientY;\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tmouseX = e.clientX;\r\n\t\t\t\tmouseY = e.clientY;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\t\r\n\t\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tx: mouseX,\r\n\t\t\t\ty: mouseY\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\thelpers.addEvent = function(node, eventType, method) {\r\n\t\t\tif (node.addEventListener) {\r\n\t\t\t\tnode.addEventListener(eventType, method);\r\n\t\t\t} else if (node.attachEvent) {\r\n\t\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t\t} else {\r\n\t\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\t\tif (node.removeEventListener) {\r\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t\t} else if (node.detachEvent) {\r\n\t\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t\t} else {\r\n\t\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t\t// Create the events object if it's not already present\r\n\t\t\tvar events = chartInstance.events = chartInstance.events || {};\r\n\t\r\n\t\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\t\tevents[eventName] = function() {\r\n\t\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t\t};\r\n\t\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\r\n\t\t\t});\r\n\t\t};\r\n\t\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\t\tvar canvas = chartInstance.chart.canvas;\r\n\t\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\t\thelpers.removeEvent(canvas, eventName, handler);\r\n\t\t\t});\r\n\t\t};\r\n\t\r\n\t\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\t\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\t\tvar valueInPixels;\r\n\t\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\t\r\n\t\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t\t// percentage * size in dimension\r\n\t\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvalueInPixels = styleValue;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn valueInPixels;\r\n\t\t}\r\n\t\r\n\t\t/**\r\n\t\t * Returns if the given value contains an effective constraint.\r\n\t\t * @private\r\n\t\t */\r\n\t\tfunction isConstrainedValue(value) {\r\n\t\t\treturn value !== undefined &&  value !== null && value !== 'none';\r\n\t\t}\r\n\t\r\n\t\t// Private helper to get a constraint dimension\r\n\t\t// @param domNode : the node to check the constraint on\r\n\t\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\t\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\t\tvar view = document.defaultView;\r\n\t\t\tvar parentNode = domNode.parentNode;\r\n\t\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\t\tif (hasCNode || hasCContainer) {\r\n\t\t\t\treturn Math.min(\r\n\t\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'none';\r\n\t\t}\r\n\t\t// returns Number or undefined if no constraint\r\n\t\thelpers.getConstraintWidth = function(domNode) {\r\n\t\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t\t};\r\n\t\t// returns Number or undefined if no constraint\r\n\t\thelpers.getConstraintHeight = function(domNode) {\r\n\t\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t\t};\r\n\t\thelpers.getMaximumWidth = function(domNode) {\r\n\t\t\tvar container = domNode.parentNode;\r\n\t\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\t\t\tvar w = container.clientWidth - padding;\r\n\t\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t\t};\r\n\t\thelpers.getMaximumHeight = function(domNode) {\r\n\t\t\tvar container = domNode.parentNode;\r\n\t\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\t\t\tvar h = container.clientHeight - padding;\r\n\t\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t\t};\r\n\t\thelpers.getStyle = function(el, property) {\r\n\t\t\treturn el.currentStyle ?\r\n\t\t\t\tel.currentStyle[property] :\r\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t\t};\r\n\t\thelpers.retinaScale = function(chart) {\r\n\t\t\tvar ctx = chart.ctx;\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tvar width = canvas.width;\r\n\t\t\tvar height = canvas.height;\r\n\t\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\t\r\n\t\t\tif (pixelRatio !== 1) {\r\n\t\t\t\tcanvas.height = height * pixelRatio;\r\n\t\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\t\r\n\t\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t\t// when destroy is called\r\n\t\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t\t}\r\n\t\r\n\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\tcanvas.style.height = height + 'px';\r\n\t\t};\r\n\t\t//-- Canvas methods\r\n\t\thelpers.clear = function(chart) {\r\n\t\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t\t};\r\n\t\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t\t};\r\n\t\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n\t\t\tcache = cache || {};\r\n\t\t\tvar data = cache.data = cache.data || {};\r\n\t\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\t\r\n\t\t\tif (cache.font !== font) {\r\n\t\t\t\tdata = cache.data = {};\r\n\t\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\t\tcache.font = font;\r\n\t\t\t}\r\n\t\r\n\t\t\tctx.font = font;\r\n\t\t\tvar longest = 0;\r\n\t\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\r\n\t\t\t\t} else if (helpers.isArray(thing)) {\r\n\t\t\t\t\t// if it is an array lets measure each element\r\n\t\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\r\n\t\t\t\t\thelpers.each(thing, function(nestedThing) {\r\n\t\t\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n\t\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\tvar gcLen = gc.length / 2;\r\n\t\t\tif (gcLen > arrayOfThings.length) {\r\n\t\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\t\tdelete data[gc[i]];\r\n\t\t\t\t}\r\n\t\t\t\tgc.splice(0, gcLen);\r\n\t\t\t}\r\n\t\t\treturn longest;\r\n\t\t};\r\n\t\thelpers.measureText = function (ctx, data, gc, longest, string) {\r\n\t\t\tvar textWidth = data[string];\r\n\t\t\tif (!textWidth) {\r\n\t\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\t\tgc.push(string);\r\n\t\t\t}\r\n\t\t\tif (textWidth > longest) {\r\n\t\t\t\tlongest = textWidth;\r\n\t\t\t}\r\n\t\t\treturn longest;\r\n\t\t};\r\n\t\thelpers.numberOfLabelLines = function(arrayOfThings) {\r\n\t\t\tvar numberOfLines = 1;\r\n\t\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t\tif (helpers.isArray(thing)) {\r\n\t\t\t\t\tif (thing.length > numberOfLines) {\r\n\t\t\t\t\t\tnumberOfLines = thing.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn numberOfLines;\r\n\t\t};\r\n\t\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + radius, y);\r\n\t\t\tctx.lineTo(x + width - radius, y);\r\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\t\tctx.lineTo(x + radius, y + height);\r\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\t\tctx.lineTo(x, y + radius);\r\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t};\r\n\t\thelpers.color = function(c) {\r\n\t\t\tif (!color) {\r\n\t\t\t\tconsole.log('Color.js not found!');\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\t\r\n\t\t\t/* global CanvasGradient */\r\n\t\t\tif (c instanceof CanvasGradient) {\r\n\t\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn color(c);\r\n\t\t};\r\n\t\thelpers.addResizeListener = function(node, callback) {\r\n\t\t\t// Hide an iframe before the node\r\n\t\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\t\r\n\t\t\tif (hiddenIframe.classlist) {\r\n\t\t\t\t// can use classlist\r\n\t\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t\t} else {\r\n\t\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Set the style\r\n\t\t\tvar style = hiddenIframe.style;\r\n\t\t\tstyle.width = '100%';\r\n\t\t\tstyle.display = 'block';\r\n\t\t\tstyle.border = 0;\r\n\t\t\tstyle.height = 0;\r\n\t\t\tstyle.margin = 0;\r\n\t\t\tstyle.position = 'absolute';\r\n\t\t\tstyle.left = 0;\r\n\t\t\tstyle.right = 0;\r\n\t\t\tstyle.top = 0;\r\n\t\t\tstyle.bottom = 0;\r\n\t\r\n\t\t\t// Insert the iframe so that contentWindow is available\r\n\t\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\t\r\n\t\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\thelpers.removeResizeListener = function(node) {\r\n\t\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\t\r\n\t\t\t// Remove the resize detect iframe\r\n\t\t\tif (hiddenIframe) {\r\n\t\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.isArray = Array.isArray?\r\n\t\t\tfunction(obj) { return Array.isArray(obj); } :\r\n\t\t\tfunction(obj) {\r\n\t\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t\t};\r\n\t\t//! @see http://stackoverflow.com/a/14853974\r\n\t\thelpers.arrayEquals = function(a0, a1) {\r\n\t\t\tvar i, ilen, v0, v1;\r\n\t\r\n\t\t\tif (!a0 || !a1 || a0.length != a1.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\t\tv0 = a0[i];\r\n\t\t\t\tv1 = a1[i];\r\n\t\r\n\t\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (v0 != v1) {\r\n\t\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\t\tfn.apply(_tArg, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\thelpers.getHoverColor = function(color) {\r\n\t\t\t/* global CanvasPattern */\r\n\t\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\t\tcolor :\r\n\t\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t\t};\r\n\t};\r\n\t\n\t},{\"3\":3}],26:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function() {\r\n\t\r\n\t\t//Occupy the global variable of Chart, and create a simple base class\r\n\t\tvar Chart = function(context, config) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar helpers = Chart.helpers;\r\n\t\t\tme.config = config;\r\n\t\r\n\t\t\t// Support a jQuery'd canvas element\r\n\t\t\tif (context.length && context[0].getContext) {\r\n\t\t\t\tcontext = context[0];\r\n\t\t\t}\r\n\t\r\n\t\t\t// Support a canvas domnode\r\n\t\t\tif (context.getContext) {\r\n\t\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t\t}\r\n\t\r\n\t\t\tme.ctx = context;\r\n\t\t\tme.canvas = context.canvas;\r\n\t\r\n\t\t\tcontext.canvas.style.display = context.canvas.style.display || 'block';\r\n\t\r\n\t\t\t// Figure out what the size of the chart will be.\r\n\t\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t\t// If there is still no height, fill the parent container\r\n\t\t\tme.width = context.canvas.width || parseInt(helpers.getStyle(context.canvas, 'width'), 10) || helpers.getMaximumWidth(context.canvas);\r\n\t\t\tme.height = context.canvas.height || parseInt(helpers.getStyle(context.canvas, 'height'), 10) || helpers.getMaximumHeight(context.canvas);\r\n\t\r\n\t\t\tme.aspectRatio = me.width / me.height;\r\n\t\r\n\t\t\tif (isNaN(me.aspectRatio) || isFinite(me.aspectRatio) === false) {\r\n\t\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t\t// else use the canvas default ratio of 2\r\n\t\t\t\tme.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t\t}\r\n\t\r\n\t\t\t// Store the original style of the element so we can set it back\r\n\t\t\tme.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\t\tme.originalCanvasStyleHeight = context.canvas.style.height;\r\n\t\r\n\t\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\t\thelpers.retinaScale(me);\r\n\t\r\n\t\t\tif (config) {\r\n\t\t\t\tme.controller = new Chart.Controller(me);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\t\thelpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\t\tif (me.controller && me.controller.config.options.responsive) {\r\n\t\t\t\t\tme.controller.resize();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\treturn me.controller ? me.controller : me;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//Globally expose the defaults to allow for user updating/changing\r\n\t\tChart.defaults = {\r\n\t\t\tglobal: {\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\t\tmaintainAspectRatio: true,\r\n\t\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\t\thover: {\r\n\t\t\t\t\tonHover: null,\r\n\t\t\t\t\tmode: 'single',\r\n\t\t\t\t\tanimationDuration: 400\r\n\t\t\t\t},\r\n\t\t\t\tonClick: null,\r\n\t\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\t\tdefaultFontColor: '#666',\r\n\t\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\t\tdefaultFontSize: 12,\r\n\t\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\t\tshowLines: true,\r\n\t\r\n\t\t\t\t// Element defaults defined in element extensions\r\n\t\t\t\telements: {},\r\n\t\r\n\t\t\t\t// Legend callback string\r\n\t\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\t\tvar text = [];\r\n\t\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</ul>');\r\n\t\r\n\t\t\t\t\treturn text.join(\"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.Chart = Chart;\r\n\t\r\n\t\treturn Chart;\r\n\t\r\n\t};\r\n\t\n\t},{}],27:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t\t// It is this service's responsibility of carrying out that layout.\r\n\t\tChart.layoutService = {\r\n\t\t\tdefaults: {},\r\n\t\r\n\t\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\t\taddBox: function(chartInstance, box) {\r\n\t\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t\t}\r\n\t\t\t\tchartInstance.boxes.push(box);\r\n\t\t\t},\r\n\t\r\n\t\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t\t},\r\n\t\r\n\t\t\t// The most important function\r\n\t\t\tupdate: function(chartInstance, width, height) {\r\n\t\r\n\t\t\t\tif (!chartInstance) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar xPadding = 0;\r\n\t\t\t\tvar yPadding = 0;\r\n\t\r\n\t\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t\t});\r\n\t\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t\t});\r\n\t\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t\t});\r\n\t\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t\t});\r\n\t\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t\t// Our canvas looks like the following.\r\n\t\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t\t// B1 is the bottom axis\r\n\t\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t\t// an error will be thrown.\r\n\t\t\t\t//\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t\t// |    |    |                                     |    |\r\n\t\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t\t// |    |    |                                     |    |\r\n\t\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t\t// |----------------------------------------------------|\r\n\t\t\t\t//\r\n\t\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t\t// 6. Refit each axis\r\n\t\t\t\t// 7. Position each axis in the final location\r\n\t\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\t\r\n\t\t\t\t// Step 1\r\n\t\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\t\r\n\t\t\t\t// Step 2\r\n\t\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\t\r\n\t\t\t\t// Step 3\r\n\t\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\t\r\n\t\t\t\t// Step 4\r\n\t\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\t\tvar minBoxSizes = [];\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\t\r\n\t\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\t\tvar minSize;\r\n\t\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\t\tbox: box\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\t\r\n\t\t\t\t// Steps 5 & 6\r\n\t\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\t\r\n\t\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\t\r\n\t\t\t\t// Function to fit a box\r\n\t\t\t\tfunction fitBox(box) {\r\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Let the left layout know the final margin\r\n\t\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\t\r\n\t\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t\t// without calling `fit` again\r\n\t\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\t\r\n\t\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Step 7 - Position the boxes\r\n\t\t\t\tvar left = xPadding;\r\n\t\t\t\tvar top = yPadding;\r\n\t\t\t\tvar right = 0;\r\n\t\t\t\tvar bottom = 0;\r\n\t\r\n\t\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\t\r\n\t\t\t\t// Account for chart width and height\r\n\t\t\t\tleft += maxChartAreaWidth;\r\n\t\t\t\ttop += maxChartAreaHeight;\r\n\t\r\n\t\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\t\r\n\t\t\t\tfunction placeBox(box) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\t\tbox.bottom = top + box.height;\r\n\t\r\n\t\t\t\t\t\t// Move to next point\r\n\t\t\t\t\t\ttop = box.bottom;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\t\r\n\t\t\t\t\t\t// Move to next point\r\n\t\t\t\t\t\tleft = box.right;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Step 8\r\n\t\t\t\tchartInstance.chartArea = {\r\n\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// Step 9\r\n\t\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\t\r\n\t\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\t\n\t},{}],28:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar noop = helpers.noop;\r\n\t\r\n\t\tChart.defaults.global.legend = {\r\n\t\r\n\t\t\tdisplay: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\t\treverse: false,\r\n\t\r\n\t\t\t// a callback that will handle\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\t\tvar ci = this.chart;\r\n\t\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\t\r\n\t\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\t\r\n\t\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\t\tci.update();\r\n\t\t\t},\r\n\t\r\n\t\t\tlabels: {\r\n\t\t\t\tboxWidth: 40,\r\n\t\t\t\tpadding: 10,\r\n\t\t\t\t// Generates labels shown in the legend\r\n\t\t\t\t// Valid properties to return:\r\n\t\t\t\t// text : text to display\r\n\t\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t\t// lineCap : cap style for line\r\n\t\t\t\t// lineDash\r\n\t\t\t\t// lineDashOffset :\r\n\t\t\t\t// lineJoin :\r\n\t\t\t\t// lineWidth :\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n\t\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\t\r\n\t\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, this) : [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.Legend = Chart.Element.extend({\r\n\t\r\n\t\t\tinitialize: function(config) {\r\n\t\t\t\thelpers.extend(this, config);\r\n\t\r\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\t\tthis.legendHitBoxes = [];\r\n\t\r\n\t\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\t\tthis.doughnutMode = false;\r\n\t\t\t},\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t\t// Any function defined here is inherited by all legend types.\r\n\t\t\t// Any function can be extended by the legend type\r\n\t\r\n\t\t\tbeforeUpdate: noop,\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tme.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tme.maxWidth = maxWidth;\r\n\t\t\t\tme.maxHeight = maxHeight;\r\n\t\t\t\tme.margins = margins;\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tme.beforeSetDimensions();\r\n\t\t\t\tme.setDimensions();\r\n\t\t\t\tme.afterSetDimensions();\r\n\t\t\t\t// Labels\r\n\t\t\t\tme.beforeBuildLabels();\r\n\t\t\t\tme.buildLabels();\r\n\t\t\t\tme.afterBuildLabels();\r\n\t\r\n\t\t\t\t// Fit\r\n\t\t\t\tme.beforeFit();\r\n\t\t\t\tme.fit();\r\n\t\t\t\tme.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tme.afterUpdate();\r\n\t\r\n\t\t\t\treturn me.minSize;\r\n\t\t\t},\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: noop,\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\t\tme.left = 0;\r\n\t\t\t\t\tme.right = me.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.height = me.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.top = 0;\r\n\t\t\t\t\tme.bottom = me.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tme.paddingLeft = 0;\r\n\t\t\t\tme.paddingTop = 0;\r\n\t\t\t\tme.paddingRight = 0;\r\n\t\t\t\tme.paddingBottom = 0;\r\n\t\r\n\t\t\t\t// Reset minSize\r\n\t\t\t\tme.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeBuildLabels: noop,\r\n\t\t\tbuildLabels: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\r\n\t\t\t\tif(me.options.reverse){\r\n\t\t\t\t\tme.legendItems.reverse();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterBuildLabels: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: noop,\r\n\t\t\tfit: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar labelOpts = opts.labels;\r\n\t\t\t\tvar display = opts.display;\r\n\t\r\n\t\t\t\tvar ctx = me.ctx;\r\n\t\r\n\t\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\t\r\n\t\t\t\t// Reset hit boxes\r\n\t\t\t\tvar hitboxes = me.legendHitBoxes = [];\r\n\t\r\n\t\t\t\tvar minSize = me.minSize;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Increase sizes here\r\n\t\t\t\tif (display) {\r\n\t\t\t\t\tctx.font = labelFont;\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t// Labels\r\n\t\r\n\t\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\r\n\t\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\t\r\n\t\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\r\n\t\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n\t\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\tminSize.height += totalHeight;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar vPadding = labelOpts.padding;\r\n\t\t\t\t\t\tvar columnWidths = me.columnWidths = [];\r\n\t\t\t\t\t\tvar totalWidth = labelOpts.padding;\r\n\t\t\t\t\t\tvar currentColWidth = 0;\r\n\t\t\t\t\t\tvar currentColHeight = 0;\r\n\t\t\t\t\t\tvar itemHeight = fontSize + vPadding;\r\n\t\r\n\t\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\t\tvar itemWidth = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\r\n\t\t\t\t\t\t\t// If too tall, go to new column\r\n\t\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\r\n\t\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\r\n\t\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\r\n\t\r\n\t\t\t\t\t\t\t\tcurrentColWidth = 0;\r\n\t\t\t\t\t\t\t\tcurrentColHeight = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Get max width\r\n\t\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\r\n\t\t\t\t\t\t\tcurrentColHeight += itemHeight;\r\n\t\r\n\t\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\t\twidth: itemWidth,\r\n\t\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\ttotalWidth += currentColWidth;\r\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth);\r\n\t\t\t\t\t\tminSize.width += totalWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.width = minSize.width;\r\n\t\t\t\tme.height = minSize.height;\r\n\t\t\t},\r\n\t\t\tafterFit: noop,\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the legend on the canvas\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar labelOpts = opts.labels;\r\n\t\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\t\tlegendWidth = me.width,\r\n\t\t\t\t\tlegendHeight = me.height,\r\n\t\t\t\t\tlineWidths = me.lineWidths;\r\n\t\r\n\t\t\t\tif (opts.display) {\r\n\t\t\t\t\tvar ctx = me.ctx,\r\n\t\t\t\t\t\tcursor,\r\n\t\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\t\r\n\t\t\t\t\t// Canvas setup\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\t\tctx.font = labelFont;\r\n\t\r\n\t\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\t\thitboxes = me.legendHitBoxes;\r\n\t\r\n\t\t\t\t\t// current position\r\n\t\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\r\n\t\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\t\tctx.save();\r\n\t\r\n\t\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\t\r\n\t\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// Draw the box\r\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\t\r\n\t\t\t\t\t\tctx.restore();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\r\n\t\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\t\r\n\t\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t// Horizontal\r\n\t\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\t\tx: me.left + labelOpts.padding,\r\n\t\t\t\t\t\t\ty: me.top,\r\n\t\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\t\ty = cursor.y;\r\n\t\r\n\t\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (y + itemHeight > me.bottom) {\r\n\t\t\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n\t\t\t\t\t\t\t\ty = cursor.y = me.top;\r\n\t\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\r\n\t\t\t\t\t\tdrawLegendBox(x, y, legendItem);\r\n\t\r\n\t\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\t\thitboxes[i].top = y;\r\n\t\r\n\t\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\t\tfillText(x, y, legendItem, textWidth);\r\n\t\r\n\t\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcursor.y += itemHeight;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Handle an event\r\n\t\t\thandleEvent: function(e) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\r\n\t\t\t\t\tx = position.x,\r\n\t\t\t\t\ty = position.y,\r\n\t\t\t\t\topts = me.options;\r\n\t\r\n\t\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n\t\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\t\tvar lh = me.legendHitBoxes;\r\n\t\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\t\tvar hitBox = lh[i];\r\n\t\r\n\t\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\t// Register the legend plugin\r\n\t\tChart.plugins.register({\r\n\t\t\tbeforeInit: function(chartInstance) {\r\n\t\t\t\tvar opts = chartInstance.options;\r\n\t\t\t\tvar legendOpts = opts.legend;\r\n\t\r\n\t\t\t\tif (legendOpts) {\r\n\t\t\t\t\tchartInstance.legend = new Chart.Legend({\r\n\t\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\t\toptions: legendOpts,\r\n\t\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],29:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar noop = Chart.helpers.noop;\r\n\t\r\n\t\t/**\r\n\t\t * The plugin service singleton\r\n\t\t * @namespace Chart.plugins\r\n\t\t * @since 2.1.0\r\n\t\t */\r\n\t\tChart.plugins = {\r\n\t\t\t_plugins: [],\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Registers the given plugin(s) if not already registered.\r\n\t\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t\t */\r\n\t\t\tregister: function(plugins) {\r\n\t\t\t\tvar p = this._plugins;\r\n\t\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Unregisters the given plugin(s) only if registered.\r\n\t\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t\t */\r\n\t\t\tunregister: function(plugins) {\r\n\t\t\t\tvar p = this._plugins;\r\n\t\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Remove all registered p^lugins.\r\n\t\t\t * @since 2.1.5\r\n\t\t\t */\r\n\t\t\tclear: function() {\r\n\t\t\t\tthis._plugins = [];\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Returns the number of registered plugins?\r\n\t\t\t * @returns {Number}\r\n\t\t\t * @since 2.1.5\r\n\t\t\t */\r\n\t\t\tcount: function() {\r\n\t\t\t\treturn this._plugins.length;\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Returns all registered plugin intances.\r\n\t\t\t * @returns {Array} array of plugin objects.\r\n\t\t\t * @since 2.1.5\r\n\t\t\t */\r\n\t\t\tgetAll: function() {\r\n\t\t\t\treturn this._plugins;\r\n\t\t\t},\r\n\t\r\n\t\t\t/**\r\n\t\t\t * Calls registered plugins on the specified extension, with the given args. This\r\n\t\t\t * method immediately returns as soon as a plugin explicitly returns false. The\r\n\t\t\t * returned value can be used, for instance, to interrupt the current action.\r\n\t\t\t * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t\t\t * @param {Array} [args] extra arguments to apply to the extension call.\r\n\t\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n\t\t\t */\r\n\t\t\tnotify: function(extension, args) {\r\n\t\t\t\tvar plugins = this._plugins;\r\n\t\t\t\tvar ilen = plugins.length;\r\n\t\t\t\tvar i, plugin;\r\n\t\r\n\t\t\t\tfor (i=0; i<ilen; ++i) {\r\n\t\t\t\t\tplugin = plugins[i];\r\n\t\t\t\t\tif (typeof plugin[extension] === 'function') {\r\n\t\t\t\t\t\tif (plugin[extension].apply(plugin, args || []) === false) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Plugin extension methods.\r\n\t\t * @interface Chart.PluginBase\r\n\t\t * @since 2.1.0\r\n\t\t */\r\n\t\tChart.PluginBase = Chart.Element.extend({\r\n\t\t\t// Called at start of chart init\r\n\t\t\tbeforeInit: noop,\r\n\t\r\n\t\t\t// Called at end of chart init\r\n\t\t\tafterInit: noop,\r\n\t\r\n\t\t\t// Called at start of update\r\n\t\t\tbeforeUpdate: noop,\r\n\t\r\n\t\t\t// Called at end of update\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t// Called at start of draw\r\n\t\t\tbeforeDraw: noop,\r\n\t\r\n\t\t\t// Called at end of draw\r\n\t\t\tafterDraw: noop,\r\n\t\r\n\t\t\t// Called during destroy\r\n\t\t\tdestroy: noop\r\n\t\t});\r\n\t\r\n\t\t/**\r\n\t\t * Provided for backward compatibility, use Chart.plugins instead\r\n\t\t * @namespace Chart.pluginService\r\n\t\t * @deprecated since version 2.1.5\r\n\t\t * @todo remove me at version 3\r\n\t\t */\r\n\t\tChart.pluginService = Chart.plugins;\r\n\t};\r\n\t\n\t},{}],30:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.scale = {\r\n\t\t\tdisplay: true,\r\n\t\t\tposition: \"left\",\r\n\t\r\n\t\t\t// grid line settings\r\n\t\t\tgridLines: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\t\tlineWidth: 1,\r\n\t\t\t\tdrawBorder: true,\r\n\t\t\t\tdrawOnChartArea: true,\r\n\t\t\t\tdrawTicks: true,\r\n\t\t\t\ttickMarkLength: 10,\r\n\t\t\t\tzeroLineWidth: 1,\r\n\t\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\t\toffsetGridLines: false\r\n\t\t\t},\r\n\t\r\n\t\t\t// scale label\r\n\t\t\tscaleLabel: {\r\n\t\t\t\t// actual label\r\n\t\t\t\tlabelString: '',\r\n\t\r\n\t\t\t\t// display property\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\tbeginAtZero: false,\r\n\t\t\t\tminRotation: 0,\r\n\t\t\t\tmaxRotation: 50,\r\n\t\t\t\tmirror: false,\r\n\t\t\t\tpadding: 10,\r\n\t\t\t\treverse: false,\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tautoSkip: true,\r\n\t\t\t\tautoSkipPadding: 0,\r\n\t\t\t\tlabelOffset: 0,\r\n\t\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n\t\t\t\tcallback: function(value) {\r\n\t\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tChart.Scale = Chart.Element.extend({\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t\t// Any function defined here is inherited by all scale types.\r\n\t\t\t// Any function can be extended by the scale type\r\n\t\r\n\t\t\tbeforeUpdate: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t\t},\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tme.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tme.maxWidth = maxWidth;\r\n\t\t\t\tme.maxHeight = maxHeight;\r\n\t\t\t\tme.margins = helpers.extend({\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tbottom: 0\r\n\t\t\t\t}, margins);\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tme.beforeSetDimensions();\r\n\t\t\t\tme.setDimensions();\r\n\t\t\t\tme.afterSetDimensions();\r\n\t\r\n\t\t\t\t// Data min/max\r\n\t\t\t\tme.beforeDataLimits();\r\n\t\t\t\tme.determineDataLimits();\r\n\t\t\t\tme.afterDataLimits();\r\n\t\r\n\t\t\t\t// Ticks\r\n\t\t\t\tme.beforeBuildTicks();\r\n\t\t\t\tme.buildTicks();\r\n\t\t\t\tme.afterBuildTicks();\r\n\t\r\n\t\t\t\tme.beforeTickToLabelConversion();\r\n\t\t\t\tme.convertTicksToLabels();\r\n\t\t\t\tme.afterTickToLabelConversion();\r\n\t\r\n\t\t\t\t// Tick Rotation\r\n\t\t\t\tme.beforeCalculateTickRotation();\r\n\t\t\t\tme.calculateTickRotation();\r\n\t\t\t\tme.afterCalculateTickRotation();\r\n\t\t\t\t// Fit\r\n\t\t\t\tme.beforeFit();\r\n\t\t\t\tme.fit();\r\n\t\t\t\tme.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tme.afterUpdate();\r\n\t\r\n\t\t\t\treturn me.minSize;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterUpdate: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t\t},\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\t\tme.left = 0;\r\n\t\t\t\t\tme.right = me.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.height = me.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.top = 0;\r\n\t\t\t\t\tme.bottom = me.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tme.paddingLeft = 0;\r\n\t\t\t\tme.paddingTop = 0;\r\n\t\t\t\tme.paddingRight = 0;\r\n\t\t\t\tme.paddingBottom = 0;\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Data limits\r\n\t\t\tbeforeDataLimits: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: helpers.noop,\r\n\t\t\tafterDataLimits: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\t\tbeforeBuildTicks: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t\t},\r\n\t\t\tbuildTicks: helpers.noop,\r\n\t\t\tafterBuildTicks: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Convert ticks to strings\r\n\t\t\t\tme.ticks = me.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\t\tif (me.options.ticks.userCallback) {\r\n\t\t\t\t\t\t\treturn me.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn me.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tme);\r\n\t\t\t},\r\n\t\t\tafterTickToLabelConversion: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t\t},\r\n\t\t\tcalculateTickRotation: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar context = me.ctx;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar optionTicks = me.options.ticks;\r\n\t\r\n\t\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t\t//between x offsets between 0 and 1.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tcontext.font = tickLabelFont;\r\n\t\r\n\t\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\r\n\t\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\t\t\t\tvar firstRotated;\r\n\t\r\n\t\t\t\tme.labelRotation = optionTicks.minRotation || 0;\r\n\t\t\t\tme.paddingRight = 0;\r\n\t\t\t\tme.paddingLeft = 0;\r\n\t\r\n\t\t\t\tif (me.options.display) {\r\n\t\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\r\n\t\r\n\t\t\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\t\tvar sinRotation;\r\n\t\r\n\t\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\t\r\n\t\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\r\n\t\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\t\r\n\t\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\t\r\n\t\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\r\n\t\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\r\n\t\r\n\t\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\r\n\t\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\t\tme.labelRotation--;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tme.labelRotation++;\r\n\t\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (me.margins) {\r\n\t\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tafterCalculateTickRotation: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: function() {\r\n\t\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t\t},\r\n\t\t\tfit: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Reset\r\n\t\t\t\tvar minSize = me.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\t\tvar display = opts.display;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\r\n\t\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\t\r\n\t\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\t\r\n\t\t\t\t// Width\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// height\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Are we showing a title for the scale?\r\n\t\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n\t\t\t\t\tvar lineSpace = tickFontSize * 0.5;\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\r\n\t\r\n\t\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\r\n\t\r\n\t\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\t\tme.ctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\t\t\tvar firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;\r\n\t\t\t\t\t\tvar lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\t\r\n\t\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t\t// by the font height\r\n\t\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\r\n\t\r\n\t\t\t\t\t\t// Account for padding\r\n\t\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\t\tminSize.width = me.maxWidth;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tme.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (me.margins) {\r\n\t\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n\t\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.width = minSize.width;\r\n\t\t\t\tme.height = minSize.height;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterFit: function() {\r\n\t\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t\t},\r\n\t\t\tisFullWidth: function() {\r\n\t\t\t\treturn (this.options.fullWidth);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t\t// Null and undefined values first\r\n\t\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\t\treturn NaN;\r\n\t\t\t\t}\r\n\t\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\t\treturn NaN;\r\n\t\t\t\t}\r\n\t\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\t\treturn rawValue;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Value is good, return it\r\n\t\t\t\treturn rawValue;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\t\tgetLabelForIndex: helpers.noop,\r\n\t\r\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\t\tgetPixelForValue: helpers.noop,\r\n\t\r\n\t\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\t\tgetValueForPixel: helpers.noop,\r\n\t\r\n\t\t\t// Used for tick location, should\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\r\n\t\r\n\t\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar finalVal = me.left + Math.round(pixel);\r\n\t\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\t\treturn finalVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\t\r\n\t\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\r\n\t\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\t\treturn finalVal;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn me.top + (decimal * me.height);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetBasePixel: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar min = me.min;\r\n\t\t\t\tvar max = me.max;\r\n\t\r\n\t\t\t\treturn me.getPixelForValue(\r\n\t\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t\t0);\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the scale on the canvas\r\n\t\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\t\tdraw: function(chartArea) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar options = me.options;\r\n\t\t\t\tif (!options.display) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar context = me.ctx;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar optionTicks = options.ticks;\r\n\t\t\t\tvar gridLines = options.gridLines;\r\n\t\t\t\tvar scaleLabel = options.scaleLabel;\r\n\t\r\n\t\t\t\tvar isRotated = me.labelRotation !== 0;\r\n\t\t\t\tvar skipRatio;\r\n\t\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\r\n\t\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\t\tvar maxTicks;\r\n\t\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tvar tl = gridLines.tickMarkLength;\r\n\t\r\n\t\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\t\r\n\t\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\t\tvar sinRotation = Math.sin(labelRotationRadians);\r\n\t\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\t\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\t\r\n\t\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\t\tcontext.fillStyle = tickFontColor;\r\n\t\r\n\t\t\t\tvar itemsToDraw = [];\r\n\t\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\r\n\t                // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n\t                // See #2584\r\n\t                if (isRotated) {\r\n\t                    longestRotatedLabel /= 2;\r\n\t                }\r\n\t\r\n\t\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n\t\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\r\n\t\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tvar xTickStart = options.position === \"right\" ? me.left : me.right - tl;\r\n\t\t\t\tvar xTickEnd = options.position === \"right\" ? me.left + tl : me.right;\r\n\t\t\t\tvar yTickStart = options.position === \"bottom\" ? me.top : me.bottom - tl;\r\n\t\t\t\tvar yTickEnd = options.position === \"bottom\" ? me.top + tl : me.bottom;\r\n\t\r\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\r\n\t\r\n\t\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n\t\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar lineWidth, lineColor;\r\n\t\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n\t\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\t\tlineColor = gridLines.zeroLineColor;\r\n\t\t\t\t\t} else  {\r\n\t\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n\t\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Common properties\r\n\t\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n\t\t\t\t\tvar textAlign, textBaseline = 'middle';\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tif (!isRotated) {\r\n\t\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\r\n\t\r\n\t\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n\t\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\t\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\r\n\t\r\n\t\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\r\n\t\t\t\t\t\tty1 = yTickStart;\r\n\t\t\t\t\t\tty2 = yTickEnd;\r\n\t\t\t\t\t\ty1 = chartArea.top;\r\n\t\t\t\t\t\ty2 = chartArea.bottom;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (options.position === 'left') {\r\n\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\r\n\t\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\r\n\t\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\r\n\t\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\r\n\t\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\r\n\t\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\t\r\n\t\t\t\t\t\ttx1 = xTickStart;\r\n\t\t\t\t\t\ttx2 = xTickEnd;\r\n\t\t\t\t\t\tx1 = chartArea.left;\r\n\t\t\t\t\t\tx2 = chartArea.right;\r\n\t\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\titemsToDraw.push({\r\n\t\t\t\t\t\ttx1: tx1,\r\n\t\t\t\t\t\tty1: ty1,\r\n\t\t\t\t\t\ttx2: tx2,\r\n\t\t\t\t\t\tty2: ty2,\r\n\t\t\t\t\t\tx1: x1,\r\n\t\t\t\t\t\ty1: y1,\r\n\t\t\t\t\t\tx2: x2,\r\n\t\t\t\t\t\ty2: y2,\r\n\t\t\t\t\t\tlabelX: labelX,\r\n\t\t\t\t\t\tlabelY: labelY,\r\n\t\t\t\t\t\tglWidth: lineWidth,\r\n\t\t\t\t\t\tglColor: lineColor,\r\n\t\t\t\t\t\trotation: -1 * labelRotationRadians,\r\n\t\t\t\t\t\tlabel: label,\r\n\t\t\t\t\t\ttextBaseline: textBaseline,\r\n\t\t\t\t\t\ttextAlign: textAlign\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n\t\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\r\n\t\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\r\n\t\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\r\n\t\r\n\t\t\t\t\t\tcontext.beginPath();\r\n\t\r\n\t\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n\t\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n\t\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\t\tcontext.save();\r\n\t\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n\t\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\r\n\t\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\r\n\t\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\r\n\t\r\n\t\t\t\t\t\tvar label = itemToDraw.label;\r\n\t\t\t\t\t\tif (helpers.isArray(label)) {\r\n\t\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\r\n\t\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\r\n\t\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\r\n\t\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\r\n\t\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontext.restore();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t\t// Draw the scale label\r\n\t\t\t\t\tvar scaleLabelX;\r\n\t\t\t\t\tvar scaleLabelY;\r\n\t\t\t\t\tvar rotation = 0;\r\n\t\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n\t\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n\t\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\t\tcontext.textAlign = 'center';\r\n\t\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n\t\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n\t\t\t\t\tvar x1 = me.left,\r\n\t\t\t\t\t\tx2 = me.right,\r\n\t\t\t\t\t\ty1 = me.top,\r\n\t\t\t\t\t\ty2 = me.bottom;\r\n\t\r\n\t\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n\t\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\r\n\t\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tcontext.beginPath();\r\n\t\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],31:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.scaleService = {\r\n\t\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t\t// use the new chart options to grab the correct scale\r\n\t\t\tconstructors: {},\r\n\t\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t\t// old browsers\r\n\t\r\n\t\t\t// Scale config defaults\r\n\t\t\tdefaults: {},\r\n\t\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t\t},\r\n\t\t\tgetScaleConstructor: function(type) {\r\n\t\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t\t},\r\n\t\t\tgetScaleDefaults: function(type) {\r\n\t\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t\t},\r\n\t\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\t\tvar defaults = this.defaults;\r\n\t\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t};\n\t},{}],32:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.title = {\r\n\t\t\tdisplay: false,\r\n\t\t\tposition: 'top',\r\n\t\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\r\n\t\t\tfontStyle: 'bold',\r\n\t\t\tpadding: 10,\r\n\t\r\n\t\t\t// actual title\r\n\t\t\ttext: ''\r\n\t\t};\r\n\t\r\n\t\tvar noop = helpers.noop;\r\n\t\tChart.Title = Chart.Element.extend({\r\n\t\r\n\t\t\tinitialize: function(config) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\thelpers.extend(me, config);\r\n\t\t\t\tme.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\t\r\n\t\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\t\tme.legendHitBoxes = [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\r\n\t\t\tbeforeUpdate: function () {\r\n\t\t\t\tvar chartOpts = this.chart.options;\r\n\t\t\t\tif (chartOpts && chartOpts.title) {\r\n\t\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\t\tme.beforeUpdate();\r\n\t\r\n\t\t\t\t// Absorb the master measurements\r\n\t\t\t\tme.maxWidth = maxWidth;\r\n\t\t\t\tme.maxHeight = maxHeight;\r\n\t\t\t\tme.margins = margins;\r\n\t\r\n\t\t\t\t// Dimensions\r\n\t\t\t\tme.beforeSetDimensions();\r\n\t\t\t\tme.setDimensions();\r\n\t\t\t\tme.afterSetDimensions();\r\n\t\t\t\t// Labels\r\n\t\t\t\tme.beforeBuildLabels();\r\n\t\t\t\tme.buildLabels();\r\n\t\t\t\tme.afterBuildLabels();\r\n\t\r\n\t\t\t\t// Fit\r\n\t\t\t\tme.beforeFit();\r\n\t\t\t\tme.fit();\r\n\t\t\t\tme.afterFit();\r\n\t\t\t\t//\r\n\t\t\t\tme.afterUpdate();\r\n\t\r\n\t\t\t\treturn me.minSize;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterUpdate: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeSetDimensions: noop,\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\t\tme.left = 0;\r\n\t\t\t\t\tme.right = me.width;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.height = me.maxHeight;\r\n\t\r\n\t\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\t\tme.top = 0;\r\n\t\t\t\t\tme.bottom = me.height;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Reset padding\r\n\t\t\t\tme.paddingLeft = 0;\r\n\t\t\t\tme.paddingTop = 0;\r\n\t\t\t\tme.paddingRight = 0;\r\n\t\t\t\tme.paddingBottom = 0;\r\n\t\r\n\t\t\t\t// Reset minSize\r\n\t\t\t\tme.minSize = {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterSetDimensions: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeBuildLabels: noop,\r\n\t\t\tbuildLabels: noop,\r\n\t\t\tafterBuildLabels: noop,\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tbeforeFit: noop,\r\n\t\t\tfit: function() {\r\n\t\r\n\t\t\t\tvar me = this,\r\n\t\t\t\t\tctx = me.ctx,\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\topts = me.options,\r\n\t\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\t\tdisplay = opts.display,\r\n\t\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tminSize = me.minSize;\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.width = minSize.width;\r\n\t\t\t\tme.height = minSize.height;\r\n\t\r\n\t\t\t},\r\n\t\t\tafterFit: noop,\r\n\t\r\n\t\t\t// Shared Methods\r\n\t\t\tisHorizontal: function() {\r\n\t\t\t\tvar pos = this.options.position;\r\n\t\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t\t},\r\n\t\r\n\t\t\t// Actualy draw the title block on the canvas\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar me = this,\r\n\t\t\t\t\tctx = me.ctx,\r\n\t\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\topts = me.options,\r\n\t\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\t\r\n\t\t\t\tif (opts.display) {\r\n\t\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\t\trotation = 0,\r\n\t\t\t\t\t\ttitleX,\r\n\t\t\t\t\t\ttitleY,\r\n\t\t\t\t\t\ttop = me.top,\r\n\t\t\t\t\t\tleft = me.left,\r\n\t\t\t\t\t\tbottom = me.bottom,\r\n\t\t\t\t\t\tright = me.right;\r\n\t\r\n\t\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\t\tctx.font = titleFont;\r\n\t\r\n\t\t\t\t\t// Horizontal\r\n\t\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\t// Register the title plugin\r\n\t\tChart.plugins.register({\r\n\t\t\tbeforeInit: function(chartInstance) {\r\n\t\t\t\tvar opts = chartInstance.options;\r\n\t\t\t\tvar titleOpts = opts.title;\r\n\t\r\n\t\t\t\tif (titleOpts) {\r\n\t\t\t\t\tchartInstance.titleBlock = new Chart.Title({\r\n\t\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\t\toptions: titleOpts,\r\n\t\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.titleBlock);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],33:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tChart.defaults.global.tooltips = {\r\n\t\t\tenabled: true,\r\n\t\t\tcustom: null,\r\n\t\t\tmode: 'single',\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\t\ttitleFontStyle: \"bold\",\r\n\t\t\ttitleSpacing: 2,\r\n\t\t\ttitleMarginBottom: 6,\r\n\t\t\ttitleFontColor: \"#fff\",\r\n\t\t\ttitleAlign: \"left\",\r\n\t\t\tbodySpacing: 2,\r\n\t\t\tbodyFontColor: \"#fff\",\r\n\t\t\tbodyAlign: \"left\",\r\n\t\t\tfooterFontStyle: \"bold\",\r\n\t\t\tfooterSpacing: 2,\r\n\t\t\tfooterMarginTop: 6,\r\n\t\t\tfooterFontColor: \"#fff\",\r\n\t\t\tfooterAlign: \"left\",\r\n\t\t\tyPadding: 6,\r\n\t\t\txPadding: 6,\r\n\t\t\tyAlign : 'center',\r\n\t\t\txAlign : 'center',\r\n\t\t\tcaretSize: 5,\r\n\t\t\tcornerRadius: 6,\r\n\t\t\tmultiKeyBackground: '#fff',\r\n\t\t\tcallbacks: {\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\t\t\t\t\tvar labels = data.labels;\r\n\t\t\t\t\tvar labelCount = labels ? labels.length : 0;\r\n\t\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tvar item = tooltipItems[0];\r\n\t\r\n\t\t\t\t\t\tif (item.xLabel) {\r\n\t\t\t\t\t\t\ttitle = item.xLabel;\r\n\t\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\r\n\t\t\t\t\t\t\ttitle = labels[item.index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tafterTitle: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeBody: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t},\r\n\t\t\t\tlabelColor: function(tooltipItem, chartInstance) {\r\n\t\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\r\n\t\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\r\n\t\t\t\t\tvar view = activeElement._view;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tborderColor: view.borderColor,\r\n\t\t\t\t\t\tbackgroundColor: view.backgroundColor\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tafterLabel: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tafterBody: helpers.noop,\r\n\t\r\n\t\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\t\tfooter: helpers.noop,\r\n\t\t\t\tafterFooter: helpers.noop\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\t\tfunction pushOrConcat(base, toPush) {\r\n\t\t\tif (toPush) {\r\n\t\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\t\t//base = base.concat(toPush);\r\n\t\t\t\t\tArray.prototype.push.apply(base, toPush);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase.push(toPush);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn base;\r\n\t\t}\r\n\t\r\n\t\tfunction getAveragePosition(elements) {\r\n\t\t\tif (!elements.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar i, len;\r\n\t\t\tvar xPositions = [];\r\n\t\t\tvar yPositions = [];\r\n\t\r\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\t\tvar el = elements[i];\r\n\t\t\t\tif (el && el.hasValue()){\r\n\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = 0,\r\n\t\t\t\ty = 0;\r\n\t\t\tfor (i = 0, len - xPositions.length; i < len; ++i) {\r\n\t\t\t\tx += xPositions[i];\r\n\t\t\t\ty += yPositions[i];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\t// Private helper to create a tooltip iteam model\r\n\t\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n\t\t// @return : new tooltip item\r\n\t\tfunction createTooltipItem(element) {\r\n\t\t\tvar xScale = element._xScale;\r\n\t\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\t\tvar index = element._index,\r\n\t\t\t\tdatasetIndex = element._datasetIndex;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\t\tindex: index,\r\n\t\t\t\tdatasetIndex: datasetIndex\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tChart.Tooltip = Chart.Element.extend({\r\n\t\t\tinitialize: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\t\tvar tooltipOpts = me._options;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\r\n\t\t\t\thelpers.extend(me, {\r\n\t\t\t\t\t_model: {\r\n\t\t\t\t\t\t// Positioning\r\n\t\t\t\t\t\txPadding: tooltipOpts.xPadding,\r\n\t\t\t\t\t\tyPadding: tooltipOpts.yPadding,\r\n\t\t\t\t\t\txAlign : tooltipOpts.yAlign,\r\n\t\t\t\t\t\tyAlign : tooltipOpts.xAlign,\r\n\t\r\n\t\t\t\t\t\t// Body\r\n\t\t\t\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\r\n\t\t\t\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\r\n\t\t\t\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\tbodySpacing: tooltipOpts.bodySpacing,\r\n\t\r\n\t\t\t\t\t\t// Title\r\n\t\t\t\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\r\n\t\t\t\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\t_titleAlign: tooltipOpts.titleAlign,\r\n\t\t\t\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\r\n\t\t\t\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\t\r\n\t\t\t\t\t\t// Footer\r\n\t\t\t\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\r\n\t\t\t\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t\t_footerAlign: tooltipOpts.footerAlign,\r\n\t\t\t\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\r\n\t\t\t\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\r\n\t\r\n\t\t\t\t\t\t// Appearance\r\n\t\t\t\t\t\tcaretSize: tooltipOpts.caretSize,\r\n\t\t\t\t\t\tcornerRadius: tooltipOpts.cornerRadius,\r\n\t\t\t\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the title\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetTitle: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me._options;\r\n\t\t\t\tvar callbacks = opts.callbacks;\r\n\t\r\n\t\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n\t\t\t\t\ttitle = callbacks.title.apply(me, arguments),\r\n\t\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\t\r\n\t\t\t\tvar lines = [];\r\n\t\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\t\r\n\t\t\t\treturn lines;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetBeforeBody: function() {\r\n\t\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar callbacks = me._options.callbacks;\r\n\t\t\t\tvar bodyItems = [];\r\n\t\r\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\tvar bodyItem = {\r\n\t\t\t\t\t\tbefore: [],\r\n\t\t\t\t\t\tlines: [],\r\n\t\t\t\t\t\tafter: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n\t\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n\t\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\t\r\n\t\t\t\t\tbodyItems.push(bodyItem);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn bodyItems;\r\n\t\t\t},\r\n\t\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetAfterBody: function() {\r\n\t\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n\t\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tgetFooter: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar callbacks = me._options.callbacks;\r\n\t\r\n\t\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n\t\t\t\tvar footer = callbacks.footer.apply(me, arguments);\r\n\t\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\t\r\n\t\t\t\tvar lines = [];\r\n\t\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\t\r\n\t\t\t\treturn lines;\r\n\t\t\t},\r\n\t\r\n\t\t\tupdate: function(changed) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me._options;\r\n\t\t\t\tvar model = me._model;\r\n\t\t\t\tvar active = me._active;\r\n\t\r\n\t\t\t\tvar data = me._data;\r\n\t\t\t\tvar chartInstance = me._chartInstance;\r\n\t\r\n\t\t\t\tvar i, len;\r\n\t\r\n\t\t\t\tif (active.length) {\r\n\t\t\t\t\tmodel.opacity = 1;\r\n\t\r\n\t\t\t\t\tvar labelColors = [],\r\n\t\t\t\t\t\ttooltipPosition = getAveragePosition(active);\r\n\t\r\n\t\t\t\t\tvar tooltipItems = [];\r\n\t\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\r\n\t\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\r\n\t\t\t\t\tif (opts.itemSort) {\r\n\t\t\t\t\t\ttooltipItems = tooltipItems.sort(opts.itemSort);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// If there is more than one item, show color items\r\n\t\t\t\t\tif (active.length > 1) {\r\n\t\t\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Build the Text Lines\r\n\t\t\t\t\thelpers.extend(model, {\r\n\t\t\t\t\t\ttitle: me.getTitle(tooltipItems, data),\r\n\t\t\t\t\t\tbeforeBody: me.getBeforeBody(tooltipItems, data),\r\n\t\t\t\t\t\tbody: me.getBody(tooltipItems, data),\r\n\t\t\t\t\t\tafterBody: me.getAfterBody(tooltipItems, data),\r\n\t\t\t\t\t\tfooter: me.getFooter(tooltipItems, data),\r\n\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t// We need to determine alignment of\r\n\t\t\t\t\tvar tooltipSize = me.getTooltipSize(model);\r\n\t\t\t\t\tme.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\t\r\n\t\t\t\t\thelpers.extend(model, me.getBackgroundPoint(model, tooltipSize));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme._model.opacity = 0;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (changed && opts.custom) {\r\n\t\t\t\t\topts.custom.call(me, model);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn me;\r\n\t\t\t},\r\n\t\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\r\n\t\t\t\tvar size = {\r\n\t\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\t\twidth: 0\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// Count of all lines in the body\r\n\t\t\t\tvar body = vm.body;\r\n\t\t\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n\t\t\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n\t\t\t\t}, 0);\r\n\t\t\t\tcombinedBodyLength += vm.beforeBody.length + vm.afterBody.length;\r\n\t\r\n\t\t\t\tvar titleLineCount = vm.title.length;\r\n\t\t\t\tvar footerLineCount = vm.footer.length;\r\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\tbodyFontSize = vm.bodyFontSize,\r\n\t\t\t\t\tfooterFontSize = vm.footerFontSize;\r\n\t\r\n\t\t\t\tsize.height += titleLineCount * titleFontSize; // Title Lines\r\n\t\t\t\tsize.height += (titleLineCount - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\t\tsize.height += titleLineCount ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\t\tsize.height += combinedBodyLength * bodyFontSize; // Body Lines\r\n\t\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\t\tsize.height += footerLineCount ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\t\tsize.height += footerLineCount * (footerFontSize); // Footer Lines\r\n\t\t\t\tsize.height += footerLineCount ? (footerLineCount - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\t\r\n\t\t\t\t// Title width\r\n\t\t\t\tvar widthPadding = 0;\r\n\t\t\t\tvar maxLineWidth = function(line) {\r\n\t\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + widthPadding);\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\t\thelpers.each(vm.title, maxLineWidth);\r\n\t\r\n\t\t\t\t// Body width\r\n\t\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), maxLineWidth);\r\n\t\r\n\t\t\t\t// Body lines may include some extra width due to the color box\r\n\t\t\t\twidthPadding = body.length > 1 ? (bodyFontSize + 2) : 0;\r\n\t\t\t\thelpers.each(body, function(bodyItem) {\r\n\t\t\t\t\thelpers.each(bodyItem.before, maxLineWidth);\r\n\t\t\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\r\n\t\t\t\t\thelpers.each(bodyItem.after, maxLineWidth);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Reset back to 0\r\n\t\t\t\twidthPadding = 0;\r\n\t\r\n\t\t\t\t// Footer width\r\n\t\t\t\tctx.font = helpers.fontString(footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\t\thelpers.each(vm.footer, maxLineWidth);\r\n\t\r\n\t\t\t\t// Add padding\r\n\t\t\t\tsize.width += 2 * vm.xPadding;\r\n\t\r\n\t\t\t\treturn size;\r\n\t\t\t},\r\n\t\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar model = me._model;\r\n\t\t\t\tvar chart = me._chart;\r\n\t\t\t\tvar chartArea = me._chartInstance.chartArea;\r\n\t\r\n\t\t\t\tif (model.y < size.height) {\r\n\t\t\t\t\tmodel.yAlign = 'top';\r\n\t\t\t\t} else if (model.y > (chart.height - size.height)) {\r\n\t\t\t\t\tmodel.yAlign = 'bottom';\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\t\tvar midX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\r\n\t\r\n\t\t\t\tif (model.yAlign === 'center') {\r\n\t\t\t\t\tlf = function(x) {\r\n\t\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t\t};\r\n\t\t\t\t\trf = function(x) {\r\n\t\t\t\t\t\treturn x > midX;\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlf = function(x) {\r\n\t\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t\t};\r\n\t\t\t\t\trf = function(x) {\r\n\t\t\t\t\t\treturn x >= (chart.width - (size.width / 2));\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tolf = function(x) {\r\n\t\t\t\t\treturn x + size.width > chart.width;\r\n\t\t\t\t};\r\n\t\t\t\torf = function(x) {\r\n\t\t\t\t\treturn x - size.width < 0;\r\n\t\t\t\t};\r\n\t\t\t\tyf = function(y) {\r\n\t\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tif (lf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'left';\r\n\t\r\n\t\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\t\tif (olf(model.x)) {\r\n\t\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (rf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'right';\r\n\t\r\n\t\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\t\tif (orf(model.x)) {\r\n\t\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t\t// Background Position\r\n\t\t\t\tvar pt = {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar caretSize = vm.caretSize,\r\n\t\t\t\t\tcaretPadding = vm.caretPadding,\r\n\t\t\t\t\tcornerRadius = vm.cornerRadius,\r\n\t\t\t\t\txAlign = vm.xAlign,\r\n\t\t\t\t\tyAlign = vm.yAlign,\r\n\t\t\t\t\tpaddingAndSize = caretSize + caretPadding,\r\n\t\t\t\t\tradiusAndPadding = cornerRadius + caretPadding;\r\n\t\r\n\t\t\t\tif (xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= size.width;\r\n\t\t\t\t} else if (xAlign === 'center') {\r\n\t\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\tpt.y += paddingAndSize;\r\n\t\t\t\t} else if (yAlign === 'bottom') {\r\n\t\t\t\t\tpt.y -= size.height + paddingAndSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (yAlign === 'center') {\r\n\t\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\t\tpt.x += paddingAndSize;\r\n\t\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\t\tpt.x -= paddingAndSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\t\tpt.x -= radiusAndPadding;\r\n\t\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\t\tpt.x += radiusAndPadding;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn pt;\r\n\t\t\t},\r\n\t\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar x1, x2, x3;\r\n\t\t\t\tvar y1, y2, y3;\r\n\t\t\t\tvar caretSize = vm.caretSize;\r\n\t\t\t\tvar cornerRadius = vm.cornerRadius;\r\n\t\t\t\tvar xAlign = vm.xAlign,\r\n\t\t\t\t\tyAlign = vm.yAlign;\r\n\t\t\t\tvar ptX = tooltipPoint.x,\r\n\t\t\t\t\tptY = tooltipPoint.y;\r\n\t\t\t\tvar width = size.width,\r\n\t\t\t\t\theight = size.height;\r\n\t\r\n\t\t\t\tif (yAlign === 'center') {\r\n\t\t\t\t\t// Left or right side\r\n\t\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\t\tx1 = ptX;\r\n\t\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\t\tx3 = x1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx1 = ptX + width;\r\n\t\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\t\tx3 = x1;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ty2 = ptY + (height / 2);\r\n\t\t\t\t\ty1 = y2 - caretSize;\r\n\t\t\t\t\ty3 = y2 + caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\t\tx1 = ptX + cornerRadius;\r\n\t\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\t\tx1 = ptX + width - cornerRadius;\r\n\t\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\t\tx3 = x2 - caretSize;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tx2 = ptX + (width / 2);\r\n\t\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\t\ty1 = ptY;\r\n\t\t\t\t\t\ty2 = y1 - caretSize;\r\n\t\t\t\t\t\ty3 = y1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ty1 = ptY + height;\r\n\t\t\t\t\t\ty2 = y1 + caretSize;\r\n\t\t\t\t\t\ty3 = y1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x1, y1);\r\n\t\t\t\tctx.lineTo(x2, y2);\r\n\t\t\t\tctx.lineTo(x3, y3);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t},\r\n\t\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\t\tvar title = vm.title;\r\n\t\r\n\t\t\t\tif (title.length) {\r\n\t\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\t\ttitleSpacing = vm.titleSpacing;\r\n\t\r\n\t\t\t\t\tvar titleFontColor = helpers.color(vm.titleFontColor);\r\n\t\t\t\t\tctx.fillStyle = titleFontColor.alpha(opacity * titleFontColor.alpha()).rgbString();\r\n\t\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\r\n\t\t\t\t\tvar i, len;\r\n\t\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\r\n\t\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\r\n\t\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\t\r\n\t\t\t\t\t\tif (i + 1 === title.length) {\r\n\t\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\t\tvar bodyFontSize = vm.bodyFontSize;\r\n\t\t\t\tvar bodySpacing = vm.bodySpacing;\r\n\t\t\t\tvar body = vm.body;\r\n\t\r\n\t\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\tvar bodyFontColor = helpers.color(vm.bodyFontColor);\r\n\t\t\t\tvar textColor = bodyFontColor.alpha(opacity * bodyFontColor.alpha()).rgbString();\r\n\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\r\n\t\t\t\t// Before Body\r\n\t\t\t\tvar xLinePadding = 0;\r\n\t\t\t\tvar fillLineOfText = function(line) {\r\n\t\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n\t\t\t\t\tpt.y += bodyFontSize + bodySpacing;\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// Before body lines\r\n\t\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\r\n\t\r\n\t\t\t\tvar drawColorBoxes = body.length > 1;\r\n\t\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\t\r\n\t\t\t\t// Draw body lines now\r\n\t\t\t\thelpers.each(body, function(bodyItem, i) {\r\n\t\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\r\n\t\r\n\t\t\t\t\thelpers.each(bodyItem.lines, function(line) {\r\n\t\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\t\tif (drawColorBoxes) {\r\n\t\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\t\r\n\t\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\t\r\n\t\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\t\r\n\t\t\t\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfillLineOfText(line);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Reset back to 0 for after body\r\n\t\t\t\txLinePadding = 0;\r\n\t\r\n\t\t\t\t// After body lines\r\n\t\t\t\thelpers.each(vm.afterBody, fillLineOfText);\r\n\t\t\t\tpt.y -= bodySpacing; // Remove last body spacing\r\n\t\t\t},\r\n\t\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\t\tvar footer = vm.footer;\r\n\t\r\n\t\t\t\tif (footer.length) {\r\n\t\t\t\t\tpt.y += vm.footerMarginTop;\r\n\t\r\n\t\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\t\tctx.textBaseline = \"top\";\r\n\t\r\n\t\t\t\t\tvar footerFontColor = helpers.color(vm.footerFontColor);\r\n\t\t\t\t\tctx.fillStyle = footerFontColor.alpha(opacity * footerFontColor.alpha()).rgbString();\r\n\t\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\r\n\t\t\t\t\thelpers.each(footer, function(line) {\r\n\t\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\r\n\t\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdraw: function draw() {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\t\tvar pt = {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\t\r\n\t\t\t\tif (this._options.enabled) {\r\n\t\t\t\t\t// Draw Background\r\n\t\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\t\tctx.fill();\r\n\t\r\n\t\t\t\t\t// Draw Caret\r\n\t\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, vm.caretPadding);\r\n\t\r\n\t\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\t\tpt.y += vm.yPadding;\r\n\t\r\n\t\t\t\t\t// Titles\r\n\t\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\t\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\t\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],34:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart, moment) {\r\n\t\r\n\t  var helpers = Chart.helpers,\r\n\t    globalOpts = Chart.defaults.global;\r\n\t\r\n\t  globalOpts.elements.arc = {\r\n\t    backgroundColor: globalOpts.defaultColor,\r\n\t    borderColor: \"#fff\",\r\n\t    borderWidth: 2\r\n\t  };\r\n\t\r\n\t  Chart.elements.Arc = Chart.Element.extend({\r\n\t    inLabelRange: function(mouseX) {\r\n\t      var vm = this._view;\r\n\t\r\n\t      if (vm) {\r\n\t        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n\t      } else {\r\n\t        return false;\r\n\t      }\r\n\t    },\r\n\t    inRange: function(chartX, chartY) {\r\n\t      var vm = this._view;\r\n\t\r\n\t      if (vm) {\r\n\t        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n\t            x: chartX,\r\n\t            y: chartY\r\n\t          }),\r\n\t          angle = pointRelativePosition.angle,\r\n\t          distance = pointRelativePosition.distance;\r\n\t\r\n\t        //Sanitise angle range\r\n\t        var startAngle = vm.startAngle;\r\n\t        var endAngle = vm.endAngle;\r\n\t        while (endAngle < startAngle) {\r\n\t          endAngle += 2.0 * Math.PI;\r\n\t        }\r\n\t        while (angle > endAngle) {\r\n\t          angle -= 2.0 * Math.PI;\r\n\t        }\r\n\t        while (angle < startAngle) {\r\n\t          angle += 2.0 * Math.PI;\r\n\t        }\r\n\t\r\n\t        //Check if within the range of the open/close angle\r\n\t        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n\t          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\t\r\n\t        return (betweenAngles && withinRadius);\r\n\t      } else {\r\n\t        return false;\r\n\t      }\r\n\t    },\r\n\t    tooltipPosition: function() {\r\n\t      var vm = this._view;\r\n\t\r\n\t      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n\t        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\t      return {\r\n\t        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n\t        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n\t      };\r\n\t    },\r\n\t    draw: function() {\r\n\t\r\n\t      var ctx = this._chart.ctx,\r\n\t        vm = this._view,\r\n\t        sA = vm.startAngle,\r\n\t        eA = vm.endAngle;\r\n\t\r\n\t      ctx.beginPath();\r\n\t\r\n\t      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n\t      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\t\r\n\t      ctx.closePath();\r\n\t      ctx.strokeStyle = vm.borderColor;\r\n\t      ctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t      ctx.fillStyle = vm.backgroundColor;\r\n\t\r\n\t      ctx.fill();\r\n\t      ctx.lineJoin = 'bevel';\r\n\t\r\n\t      if (vm.borderWidth) {\r\n\t        ctx.stroke();\r\n\t      }\r\n\t    }\r\n\t  });\r\n\t};\r\n\t\n\t},{}],35:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\r\n\t\tChart.defaults.global.elements.line = {\r\n\t\t\ttension: 0.4,\r\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\t\tborderWidth: 3,\r\n\t\t\tborderColor: globalDefaults.defaultColor,\r\n\t\t\tborderCapStyle: 'butt',\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0,\r\n\t\t\tborderJoinStyle: 'miter',\r\n\t\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Line = Chart.Element.extend({\r\n\t\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\t\tvar spanGaps = me._view ? me._view.spanGaps : false;\r\n\t\r\n\t\t\t\tif (point._view.skip && !spanGaps) {\r\n\t\t\t\t\tskipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t\t} else if (previousPoint._view.skip && !spanGaps) {\r\n\t\t\t\t\tpreviousSkipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Line between points\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\t\tpoint._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\tvar vm = me._view;\r\n\t\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\t\tvar first = me._children[0];\r\n\t\t\t\tvar last = me._children[me._children.length - 1];\r\n\t\r\n\t\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.save();\r\n\t\r\n\t\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\t\tif (me._children.length > 0 && vm.fill) {\r\n\t\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\t\r\n\t\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\t\tif (!me._loop) {\r\n\t\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\r\n\t\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\t\tctx.lineTo(me._children[me._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\t\tctx.lineTo(me._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\t\r\n\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.beginPath();\r\n\t\r\n\t\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\t\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\tif (me._loop && me._children.length > 0) {\r\n\t\t\t\t\tloopBackToStart();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t});\r\n\t};\n\t},{}],36:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tglobalOpts = Chart.defaults.global,\r\n\t\t\tdefaultColor = globalOpts.defaultColor;\r\n\t\r\n\t\tglobalOpts.elements.point = {\r\n\t\t\tradius: 3,\r\n\t\t\tpointStyle: 'circle',\r\n\t\t\tbackgroundColor: defaultColor,\r\n\t\t\tborderWidth: 1,\r\n\t\t\tborderColor: defaultColor,\r\n\t\t\t// Hover\r\n\t\t\thitRadius: 1,\r\n\t\t\thoverRadius: 4,\r\n\t\t\thoverBorderWidth: 1\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Point = Chart.Element.extend({\r\n\t\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t\t},\r\n\t\t\tinLabelRange: function(mouseX) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t\t\t},\r\n\t\t\ttooltipPosition: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y,\r\n\t\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\t\tvar radius = vm.radius;\r\n\t\t\t\tvar x = vm.x;\r\n\t\t\t\tvar y = vm.y;\r\n\t\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\t\r\n\t\t\t\tif (vm.skip) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (typeof pointStyle === 'object') {\r\n\t\t\t\t\ttype = pointStyle.toString();\r\n\t\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\t\r\n\t\t\t\tswitch (pointStyle) {\r\n\t\t\t\t// Default includes circle\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'triangle':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rect':\r\n\t\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\t\tctx.fillRect(x - size, y - size, 2 * size,  2 * size);\r\n\t\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rectRot':\r\n\t\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x - size, y);\r\n\t\t\t\t\tctx.lineTo(x, y + size);\r\n\t\t\t\t\tctx.lineTo(x + size, y);\r\n\t\t\t\t\tctx.lineTo(x, y - size);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cross':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'crossRot':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'star':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'dash':\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\n\t},{}],37:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tglobalOpts = Chart.defaults.global;\r\n\t\r\n\t\tglobalOpts.elements.rectangle = {\r\n\t\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\t\tborderWidth: 0,\r\n\t\t\tborderColor: globalOpts.defaultColor,\r\n\t\t\tborderSkipped: 'bottom'\r\n\t\t};\r\n\t\r\n\t\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\tvar vm = this._view;\r\n\t\r\n\t\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\t\r\n\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\tleftX += halfStroke;\r\n\t\t\t\t\trightX -= halfStroke;\r\n\t\t\t\t\ttop += halfStroke;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\t\r\n\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t// | 1 2 |\r\n\t\t\t\t// | 0 3 |\r\n\t\t\t\tvar corners = [\r\n\t\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t\t[leftX, top],\r\n\t\t\t\t\t[rightX, top],\r\n\t\t\t\t\t[rightX, vm.base]\r\n\t\t\t\t];\r\n\t\r\n\t\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\tstartCorner = 0;\r\n\t\r\n\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\t\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\theight: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm.base - vm.y;\r\n\t\t\t},\r\n\t\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? \r\n\t\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\t\tfalse;\r\n\t\t\t},\r\n\t\t\tinLabelRange: function(mouseX) {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t\t},\r\n\t\t\ttooltipPosition: function() {\r\n\t\t\t\tvar vm = this._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: vm.x,\r\n\t\t\t\t\ty: vm.y\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t};\n\t},{}],38:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\t// Default config for a category scale\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"bottom\"\r\n\t\t};\r\n\t\r\n\t\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t\t// Implement this so that \r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.minIndex = 0;\r\n\t\t\t\tme.maxIndex = me.chart.data.labels.length - 1;\r\n\t\t\t\tvar findIndex;\r\n\t\r\n\t\t\t\tif (me.options.ticks.min !== undefined) {\r\n\t\t\t\t\t// user specified min value\r\n\t\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.min);\r\n\t\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (me.options.ticks.max !== undefined) {\r\n\t\t\t\t\t// user specified max value\r\n\t\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.max);\r\n\t\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.min = me.chart.data.labels[me.minIndex];\r\n\t\t\t\tme.max = me.chart.data.labels[me.maxIndex];\r\n\t\t\t},\r\n\t\r\n\t\t\tbuildTicks: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === me.chart.data.labels.length - 1) ? me.chart.data.labels : me.chart.data.labels.slice(me.minIndex, me.maxIndex + 1);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn this.ticks[index];\r\n\t\t\t},\r\n\t\r\n\t\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;\r\n\t\r\n\t\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn me.left + Math.round(widthOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;\r\n\t\r\n\t\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar value;\r\n\t\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar horz = me.isHorizontal();\r\n\t\t\t\tvar innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\t\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines) {\r\n\t\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t\t}\r\n\t\t\t\tpixel -= horz ? me.paddingLeft : me.paddingTop;\r\n\t\r\n\t\t\t\tif (pixel <= 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\t\r\n\t};\n\t},{}],39:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"left\",\r\n\t\t\tticks: {\r\n\t\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\t\r\n\t\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\t\tvar tickString = '';\r\n\t\r\n\t\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn tickString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LinearScale = Chart.LinearScaleBase.extend({\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\r\n\t\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// First Calculate the range\r\n\t\t\t\tme.min = null;\r\n\t\t\t\tme.max = null;\r\n\t\r\n\t\t\t\tif (opts.stacked) {\r\n\t\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\t\tvar hasNegativeValues = false;\r\n\t\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// Store these per type\r\n\t\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\t\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\t\r\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\t\tthis.handleTickRangeOptions();\r\n\t\t\t},\r\n\t\t\tgetTickLimit: function() {\r\n\t\t\t\tvar maxTicks;\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar tickOpts = me.options.ticks;\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxTicks;\r\n\t\t\t},\r\n\t\t\t// Called after the ticks are built. We need \r\n\t\t\thandleDirectionalChanges: function() {\r\n\t\t\t\tif (!this.isHorizontal()) {\r\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\t\tthis.ticks.reverse();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\t// Utils\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\t// This must be called after fit has been run so that\r\n\t\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\t\tvar start = me.start;\r\n\t\r\n\t\t\t\tvar rightValue = +me.getRightValue(value);\r\n\t\t\t\tvar pixel;\r\n\t\t\t\tvar innerDimension;\r\n\t\t\t\tvar range = me.end - start;\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\r\n\t\t\t\t\treturn Math.round(pixel + paddingLeft);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\r\n\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\r\n\t\t\t\t\treturn Math.round(pixel);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\r\n\t\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\r\n\t\t\t\treturn me.start + ((me.end - me.start) * offset);\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\t\r\n\t};\n\t},{}],40:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers,\r\n\t\t\tnoop = helpers.noop;\r\n\t\r\n\t\tChart.LinearScaleBase = Chart.Scale.extend({\r\n\t\t\thandleTickRangeOptions: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\r\n\t\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t\t// axis, they can manually override it\r\n\t\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\t\tvar minSign = helpers.sign(me.min);\r\n\t\t\t\t\tvar maxSign = helpers.sign(me.max);\r\n\t\r\n\t\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\t\tme.max = 0;\r\n\t\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\t\tme.min = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\t\tme.min = tickOpts.min;\r\n\t\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\t\tme.max = tickOpts.max;\r\n\t\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (me.min === me.max) {\r\n\t\t\t\t\tme.max++;\r\n\t\r\n\t\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\t\tme.min--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetTickLimit: noop,\r\n\t\t\thandleDirectionalChanges: noop,\r\n\t\r\n\t\t\tbuildTicks: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\r\n\t\t\t\tvar ticks = me.ticks = [];\r\n\t\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\r\n\t\t\t\tvar maxTicks = me.getTickLimit();\r\n\t\r\n\t\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\t\r\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t\t// for details.\r\n\t\r\n\t\t\t\tvar spacing;\r\n\t\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\r\n\t\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar niceRange = helpers.niceNum(me.max - me.min, false);\r\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t\t}\r\n\t\t\t\tvar niceMin = Math.floor(me.min / spacing) * spacing;\r\n\t\t\t\tvar niceMax = Math.ceil(me.max / spacing) * spacing;\r\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\t\r\n\t\t\t\t// If very close to our rounded value, use it.\r\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Put the values into the ticks array\r\n\t\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\r\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t\t}\r\n\t\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\r\n\t\r\n\t\t\t\tme.handleDirectionalChanges();\r\n\t\r\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t\t// range of the scale\r\n\t\t\t\tme.max = helpers.max(ticks);\r\n\t\t\t\tme.min = helpers.min(ticks);\r\n\t\r\n\t\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\t\tticks.reverse();\r\n\t\r\n\t\t\t\t\tme.start = me.max;\r\n\t\t\t\t\tme.end = me.min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.start = me.min;\r\n\t\t\t\t\tme.end = me.max;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.ticksAsNumbers = me.ticks.slice();\r\n\t\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\r\n\t\r\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\r\n\t\t\t},\r\n\t\t});\r\n\t};\n\t},{}],41:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"left\",\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\r\n\t\r\n\t\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\tvar datasets = data.datasets;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Calculate Range\r\n\t\t\t\tme.min = null;\r\n\t\t\t\tme.max = null;\r\n\t\r\n\t\t\t\tif (opts.stacked) {\r\n\t\t\t\t\tvar valuesPerType = {};\r\n\t\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\t\r\n\t\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\r\n\t\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\r\n\t\r\n\t\t\t\tif (me.min === me.max) {\r\n\t\t\t\t\tif (me.min !== 0 && me.min !== null) {\r\n\t\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n\t\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.min = 1;\r\n\t\t\t\t\t\tme.max = 10;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbuildTicks: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\r\n\t\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\t\tvar ticks = me.ticks = [];\r\n\t\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\r\n\t\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(me.min))));\r\n\t\r\n\t\t\t\twhile (tickVal < me.max) {\r\n\t\t\t\t\tticks.push(tickVal);\r\n\t\r\n\t\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\t\r\n\t\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t\t++exp;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\r\n\t\t\t\tticks.push(lastTick);\r\n\t\r\n\t\t\t\tif (!me.isHorizontal()) {\r\n\t\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\t\tticks.reverse();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t\t// range of the scale\r\n\t\t\t\tme.max = helpers.max(ticks);\r\n\t\t\t\tme.min = helpers.min(ticks);\r\n\t\r\n\t\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\t\tticks.reverse();\r\n\t\r\n\t\t\t\t\tme.start = me.max;\r\n\t\t\t\t\tme.end = me.min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.start = me.min;\r\n\t\t\t\t\tme.end = me.max;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tthis.tickValues = this.ticks.slice();\r\n\t\r\n\t\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t\t},\r\n\t\t\t// Get the correct tooltip label\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar innerDimension;\r\n\t\t\t\tvar pixel;\r\n\t\r\n\t\t\t\tvar start = me.start;\r\n\t\t\t\tvar newVal = +me.getRightValue(value);\r\n\t\t\t\tvar range = helpers.log10(me.end) - helpers.log10(start);\r\n\t\t\t\tvar paddingTop = me.paddingTop;\r\n\t\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\r\n\t\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\t\tpixel = me.left + paddingLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\t\tpixel += paddingLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\t\tpixel = me.top + paddingTop;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\r\n\t\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn pixel;\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar offset;\r\n\t\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\r\n\t\t\t\tvar value;\r\n\t\t\t\tvar innerDimension;\r\n\t\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tinnerDimension = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\tvalue = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\t\r\n\t};\n\t},{}],42:[function(require,module,exports){\n\t\"use strict\";\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tdisplay: true,\r\n\t\r\n\t\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\t\tanimate: true,\r\n\t\t\tlineArc: false,\r\n\t\t\tposition: \"chartArea\",\r\n\t\r\n\t\t\tangleLines: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\t\tlineWidth: 1\r\n\t\t\t},\r\n\t\r\n\t\t\t// label settings\r\n\t\t\tticks: {\r\n\t\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\t\tshowLabelBackdrop: true,\r\n\t\r\n\t\t\t\t//String - The colour of the label backdrop\r\n\t\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\t\r\n\t\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\t\tbackdropPaddingY: 2,\r\n\t\r\n\t\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\t\tbackdropPaddingX: 2\r\n\t\t\t},\r\n\t\r\n\t\t\tpointLabels: {\r\n\t\t\t\t//Number - Point label font size in pixels\r\n\t\t\t\tfontSize: 10,\r\n\t\r\n\t\t\t\t//Function - Used to convert point labels\r\n\t\t\t\tcallback: function(label) {\r\n\t\t\t\t\treturn label;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\r\n\t\t\tgetValueCount: function() {\r\n\t\t\t\treturn this.chart.data.labels.length;\r\n\t\t\t},\r\n\t\t\tsetDimensions: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.height = me.maxHeight;\r\n\t\t\t\tme.xCenter = Math.round(me.width / 2);\r\n\t\t\t\tme.yCenter = Math.round(me.height / 2);\r\n\t\r\n\t\t\t\tvar minSize = helpers.min([me.height, me.width]);\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tme.min = null;\r\n\t\t\t\tme.max = null;\r\n\t\r\n\t\r\n\t\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\t\tme.handleTickRangeOptions();\r\n\t\t\t},\r\n\t\t\tgetTickLimit: function() {\r\n\t\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\t\r\n\t\t\t\t// Point labels\r\n\t\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n\t\t\t},\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t},\r\n\t\t\tfit: function() {\r\n\t\t\t\t/*\r\n\t\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t\t *\r\n\t\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t\t *\r\n\t\t\t\t * Solution:\r\n\t\t\t\t *\r\n\t\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t\t *\r\n\t\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t\t *\r\n\t\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t\t *\r\n\t\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t\t * along with labels.\r\n\t\t\t\t *\r\n\t\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t\t *\r\n\t\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t\t * and position it in the most space efficient manner\r\n\t\t\t\t *\r\n\t\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t\t */\r\n\t\r\n\t\t\t\tvar pointLabels = this.options.pointLabels;\r\n\t\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\t\r\n\t\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\t\tpointPosition,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\ttextWidth,\r\n\t\t\t\t\thalfTextWidth,\r\n\t\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\t\tfurthestRightIndex,\r\n\t\t\t\t\tfurthestRightAngle,\r\n\t\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\t\txProtrusionLeft,\r\n\t\t\t\t\txProtrusionRight,\r\n\t\t\t\t\tradiusReductionRight,\r\n\t\t\t\t\tradiusReductionLeft,\r\n\t\t\t\t\tmaxWidthRadius;\r\n\t\t\t\tthis.ctx.font = pointLabeFont;\r\n\t\r\n\t\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\t\r\n\t\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\t\r\n\t\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\t\r\n\t\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\t\r\n\t\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t\t},\r\n\t\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\r\n\t\t\t\t\tmaxLeft = leftMovement + me.drawingArea;\r\n\t\r\n\t\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n\t\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\t\tme.yCenter = Math.round((me.height / 2) + me.top);\r\n\t\t\t},\r\n\t\r\n\t\t\tgetIndexAngle: function(index) {\r\n\t\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\t\r\n\t\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t\t},\r\n\t\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\treturn 0; // null always in center\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\r\n\t\t\t\tif (me.options.reverse) {\r\n\t\t\t\t\treturn (me.max - value) * scalingFactor;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (value - me.min) * scalingFactor;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar thisAngle = me.getIndexAngle(index);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n\t\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t\t},\r\n\t\r\n\t\t\tgetBasePosition: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar min = me.min;\r\n\t\t\t\tvar max = me.max;\r\n\t\r\n\t\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t\t0);\r\n\t\t\t},\r\n\t\r\n\t\t\tdraw: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar opts = me.options;\r\n\t\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t\tvar angleLineOpts = opts.angleLines;\r\n\t\t\t\tvar pointLabelOpts = opts.pointLabels;\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\r\n\t\t\t\tif (opts.display) {\r\n\t\t\t\t\tvar ctx = me.ctx;\r\n\t\r\n\t\t\t\t\t// Tick Font\r\n\t\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\r\n\t\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\t\tif (index > 0 || opts.reverse) {\r\n\t\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n\t\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\r\n\t\r\n\t\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\r\n\t\t\t\t\t\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n\t\t\t\t\t\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\t\r\n\t\t\t\t\t\t\t\tif (opts.lineArc) {\r\n\t\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\tctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < me.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\t\tvar pointPosition = me.getPointPosition(i, yCenterOffset);\r\n\t\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif (tickOpts.display) {\r\n\t\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\r\n\t\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tif (!opts.lineArc) {\r\n\t\t\t\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\r\n\t\t\t\t\t\tctx.strokeStyle = angleLineOpts.color;\r\n\t\r\n\t\t\t\t\t\tvar outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);\r\n\t\r\n\t\t\t\t\t\t// Point Label Font\r\n\t\t\t\t\t\tvar pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\t\tvar pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\t\tvar pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\t\r\n\t\t\t\t\t\tfor (var i = me.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tif (angleLineOpts.display) {\r\n\t\t\t\t\t\t\t\tvar outerPosition = me.getPointPosition(i, outerDistance);\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(me.xCenter, me.yCenter);\r\n\t\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\t\tvar pointLabelPosition = me.getPointPosition(i, outerDistance + 5);\r\n\t\r\n\t\t\t\t\t\t\t// Keep this in loop since we may support array properties here\r\n\t\t\t\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\t\r\n\t\t\t\t\t\t\tvar pointLabels = me.pointLabels,\r\n\t\t\t\t\t\t\t\tlabelsCount = pointLabels.length,\r\n\t\t\t\t\t\t\t\thalfLabelsCount = pointLabels.length / 2,\r\n\t\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\t\r\n\t};\r\n\t\n\t},{}],43:[function(require,module,exports){\n\t/*global window: false */\r\n\t\"use strict\";\r\n\t\r\n\tvar moment = require(1);\r\n\tmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\t\r\n\tmodule.exports = function(Chart) {\r\n\t\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tvar time = {\r\n\t\t\tunits: [{\r\n\t\t\t\tname: 'millisecond',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'second',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'minute',\r\n\t\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'hour',\r\n\t\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'day',\r\n\t\t\t\tsteps: [1, 2, 5]\r\n\t\t\t}, {\r\n\t\t\t\tname: 'week',\r\n\t\t\t\tmaxStep: 4\r\n\t\t\t}, {\r\n\t\t\t\tname: 'month',\r\n\t\t\t\tmaxStep: 3\r\n\t\t\t}, {\r\n\t\t\t\tname: 'quarter',\r\n\t\t\t\tmaxStep: 4\r\n\t\t\t}, {\r\n\t\t\t\tname: 'year',\r\n\t\t\t\tmaxStep: false\r\n\t\t\t}]\r\n\t\t};\r\n\t\r\n\t\tvar defaultConfig = {\r\n\t\t\tposition: \"bottom\",\r\n\t\r\n\t\t\ttime: {\r\n\t\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\t\r\n\t\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tautoSkip: false\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tvar TimeScale = Chart.Scale.extend({\r\n\t\t\tinitialize: function() {\r\n\t\t\t\tif (!moment) {\r\n\t\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t\t},\r\n\t\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t\t},\r\n\t\t\tgetMomentStartOf: function(tick) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\r\n\t\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn tick.clone().startOf(me.tickUnit);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdetermineDataLimits: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.labelMoments = [];\r\n\t\r\n\t\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t\t// these\r\n\t\t\t\tvar scaleLabelMoments = [];\r\n\t\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\r\n\t\t\t\t\thelpers.each(me.chart.data.labels, function(label, index) {\r\n\t\t\t\t\t\tvar labelMoment = me.parseTime(label);\r\n\t\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\r\n\t\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\r\n\t\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.firstTick = null;\r\n\t\t\t\t\tme.lastTick = null;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\r\n\t\r\n\t\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\r\n\t\r\n\t\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\t\r\n\t\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, me);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tme.labelMoments.push(momentsForDataset);\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\t// Set these after we've done all the data\r\n\t\t\t\tif (me.options.time.min) {\r\n\t\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (me.options.time.max) {\r\n\t\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// We will modify these, so clone for later\r\n\t\t\t\tme.firstTick = (me.firstTick || moment()).clone();\r\n\t\t\t\tme.lastTick = (me.lastTick || moment()).clone();\r\n\t\t\t},\r\n\t\t\tbuildTicks: function(index) {\r\n\t\t\t\tvar me = this;\r\n\t\r\n\t\t\t\tme.ctx.save();\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\t\tme.ctx.font = tickLabelFont;\r\n\t\r\n\t\t\t\tme.ticks = [];\r\n\t\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\t\r\n\t\t\t\t// Set unit override if applicable\r\n\t\t\t\tif (me.options.time.unit) {\r\n\t\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\r\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\r\n\t\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\r\n\t\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\t\r\n\t\t\t\t\t// Start as small as possible\r\n\t\t\t\t\tme.tickUnit = 'millisecond';\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\t\r\n\t\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\t\r\n\t\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\t\tme.unitScale = 1;\r\n\t\r\n\t\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\t\r\n\t\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\r\n\t\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\r\n\t\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar roundedStart;\r\n\t\r\n\t\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\t\tif (!me.options.time.min) {\r\n\t\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\r\n\t\t\t\t\troundedStart = me.firstTick;\r\n\t\t\t\t} else {\r\n\t\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\t\tif (!me.options.time.max) {\r\n\t\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\r\n\t\t\t\t\tif (roundedEnd.diff(me.lastTick, me.tickUnit, true) !== 0) {\r\n\t\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\r\n\t\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.smallestLabelSeparation = me.width;\r\n\t\r\n\t\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tfor (var i = 1; i < me.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\t\tme.smallestLabelSeparation = Math.min(me.smallestLabelSeparation, me.labelMoments[datasetIndex][i].diff(me.labelMoments[datasetIndex][i - 1], me.tickUnit, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\t\r\n\t\t\t\t// Tick displayFormat override\r\n\t\t\t\tif (me.options.time.displayFormat) {\r\n\t\t\t\t\tme.displayFormat = me.options.time.displayFormat;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\t\tme.ticks.push(me.firstTick.clone());\r\n\t\r\n\t\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\t\tfor (var i = 1; i <= me.scaleSizeInUnits; ++i) {\r\n\t\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\r\n\t\r\n\t\t\t\t\t// Are we greater than the max time\r\n\t\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif (i % me.unitScale === 0) {\r\n\t\t\t\t\t\tme.ticks.push(newTick);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Always show the right tick\r\n\t\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\r\n\t\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\r\n\t\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\t\tif (me.options.time.max) {\r\n\t\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tme.ctx.restore();\r\n\t\t\t},\r\n\t\t\t// Get tooltip label\r\n\t\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n\t\r\n\t\t\t\tif (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\t\tlabel = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Format nicely\r\n\t\t\t\tif (me.options.time.tooltipFormat) {\r\n\t\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn label;\r\n\t\t\t},\r\n\t\t\t// Function to format an individual tick mark\r\n\t\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\t\r\n\t\t\t\tif (callback) {\r\n\t\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn formattedTick;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tconvertTicksToLabels: function() {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tme.tickMoments = me.ticks;\r\n\t\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\r\n\t\t\t},\r\n\t\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : me.getLabelMoment(datasetIndex, index);\r\n\t\r\n\t\t\t\tif (labelMoment) {\r\n\t\t\t\t\tvar offset = labelMoment.diff(me.firstTick, me.tickUnit, true);\r\n\t\r\n\t\t\t\t\tvar decimal = offset / me.scaleSizeInUnits;\r\n\t\r\n\t\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\t\tvar valueWidth = innerWidth / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\t\r\n\t\t\t\t\t\treturn me.left + Math.round(valueOffset);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\t\tvar valueHeight = innerHeight / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + me.paddingTop;\r\n\t\r\n\t\t\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t\t},\r\n\t\t\tgetValueForPixel: function(pixel) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tvar innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;\r\n\t\t\t\toffset *= me.scaleSizeInUnits;\r\n\t\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\r\n\t\t\t},\r\n\t\t\tparseTime: function(label) {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tif (typeof me.options.time.parser === 'string') {\r\n\t\t\t\t\treturn moment(label, me.options.time.parser);\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof me.options.time.parser === 'function') {\r\n\t\t\t\t\treturn me.options.time.parser(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Date objects\r\n\t\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\t\treturn moment(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Moment support\r\n\t\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\t\treturn label;\r\n\t\t\t\t}\r\n\t\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\r\n\t\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\t\treturn me.options.time.format(label);\r\n\t\t\t\t}\r\n\t\t\t\t// Moment format parsing\r\n\t\t\t\treturn moment(label, me.options.time.format);\r\n\t\t\t}\r\n\t\t});\r\n\t\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\t\r\n\t};\r\n\t\n\t},{\"1\":1}]},{},[7])(7)\n\t});\n\n/***/ },\n\n/***/ 231:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n\t * @license MIT */\n\t\n\t;(function(root, factory) {\n\t\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    module.exports = factory();\n\t  } else {\n\t    root.NProgress = factory();\n\t  }\n\t\n\t})(this, function() {\n\t  var NProgress = {};\n\t\n\t  NProgress.version = '0.2.0';\n\t\n\t  var Settings = NProgress.settings = {\n\t    minimum: 0.08,\n\t    easing: 'ease',\n\t    positionUsing: '',\n\t    speed: 200,\n\t    trickle: true,\n\t    trickleRate: 0.02,\n\t    trickleSpeed: 800,\n\t    showSpinner: true,\n\t    barSelector: '[role=\"bar\"]',\n\t    spinnerSelector: '[role=\"spinner\"]',\n\t    parent: 'body',\n\t    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n\t  };\n\t\n\t  /**\n\t   * Updates configuration.\n\t   *\n\t   *     NProgress.configure({\n\t   *       minimum: 0.1\n\t   *     });\n\t   */\n\t  NProgress.configure = function(options) {\n\t    var key, value;\n\t    for (key in options) {\n\t      value = options[key];\n\t      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Last number.\n\t   */\n\t\n\t  NProgress.status = null;\n\t\n\t  /**\n\t   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n\t   *\n\t   *     NProgress.set(0.4);\n\t   *     NProgress.set(1.0);\n\t   */\n\t\n\t  NProgress.set = function(n) {\n\t    var started = NProgress.isStarted();\n\t\n\t    n = clamp(n, Settings.minimum, 1);\n\t    NProgress.status = (n === 1 ? null : n);\n\t\n\t    var progress = NProgress.render(!started),\n\t        bar      = progress.querySelector(Settings.barSelector),\n\t        speed    = Settings.speed,\n\t        ease     = Settings.easing;\n\t\n\t    progress.offsetWidth; /* Repaint */\n\t\n\t    queue(function(next) {\n\t      // Set positionUsing if it hasn't already been set\n\t      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\t\n\t      // Add transition\n\t      css(bar, barPositionCSS(n, speed, ease));\n\t\n\t      if (n === 1) {\n\t        // Fade out\n\t        css(progress, { \n\t          transition: 'none', \n\t          opacity: 1 \n\t        });\n\t        progress.offsetWidth; /* Repaint */\n\t\n\t        setTimeout(function() {\n\t          css(progress, { \n\t            transition: 'all ' + speed + 'ms linear', \n\t            opacity: 0 \n\t          });\n\t          setTimeout(function() {\n\t            NProgress.remove();\n\t            next();\n\t          }, speed);\n\t        }, speed);\n\t      } else {\n\t        setTimeout(next, speed);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  };\n\t\n\t  NProgress.isStarted = function() {\n\t    return typeof NProgress.status === 'number';\n\t  };\n\t\n\t  /**\n\t   * Shows the progress bar.\n\t   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n\t   *\n\t   *     NProgress.start();\n\t   *\n\t   */\n\t  NProgress.start = function() {\n\t    if (!NProgress.status) NProgress.set(0);\n\t\n\t    var work = function() {\n\t      setTimeout(function() {\n\t        if (!NProgress.status) return;\n\t        NProgress.trickle();\n\t        work();\n\t      }, Settings.trickleSpeed);\n\t    };\n\t\n\t    if (Settings.trickle) work();\n\t\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Hides the progress bar.\n\t   * This is the *sort of* the same as setting the status to 100%, with the\n\t   * difference being `done()` makes some placebo effect of some realistic motion.\n\t   *\n\t   *     NProgress.done();\n\t   *\n\t   * If `true` is passed, it will show the progress bar even if its hidden.\n\t   *\n\t   *     NProgress.done(true);\n\t   */\n\t\n\t  NProgress.done = function(force) {\n\t    if (!force && !NProgress.status) return this;\n\t\n\t    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n\t  };\n\t\n\t  /**\n\t   * Increments by a random amount.\n\t   */\n\t\n\t  NProgress.inc = function(amount) {\n\t    var n = NProgress.status;\n\t\n\t    if (!n) {\n\t      return NProgress.start();\n\t    } else {\n\t      if (typeof amount !== 'number') {\n\t        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n\t      }\n\t\n\t      n = clamp(n + amount, 0, 0.994);\n\t      return NProgress.set(n);\n\t    }\n\t  };\n\t\n\t  NProgress.trickle = function() {\n\t    return NProgress.inc(Math.random() * Settings.trickleRate);\n\t  };\n\t\n\t  /**\n\t   * Waits for all supplied jQuery promises and\n\t   * increases the progress as the promises resolve.\n\t   *\n\t   * @param $promise jQUery Promise\n\t   */\n\t  (function() {\n\t    var initial = 0, current = 0;\n\t\n\t    NProgress.promise = function($promise) {\n\t      if (!$promise || $promise.state() === \"resolved\") {\n\t        return this;\n\t      }\n\t\n\t      if (current === 0) {\n\t        NProgress.start();\n\t      }\n\t\n\t      initial++;\n\t      current++;\n\t\n\t      $promise.always(function() {\n\t        current--;\n\t        if (current === 0) {\n\t            initial = 0;\n\t            NProgress.done();\n\t        } else {\n\t            NProgress.set((initial - current) / initial);\n\t        }\n\t      });\n\t\n\t      return this;\n\t    };\n\t\n\t  })();\n\t\n\t  /**\n\t   * (Internal) renders the progress bar markup based on the `template`\n\t   * setting.\n\t   */\n\t\n\t  NProgress.render = function(fromStart) {\n\t    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\t\n\t    addClass(document.documentElement, 'nprogress-busy');\n\t    \n\t    var progress = document.createElement('div');\n\t    progress.id = 'nprogress';\n\t    progress.innerHTML = Settings.template;\n\t\n\t    var bar      = progress.querySelector(Settings.barSelector),\n\t        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n\t        parent   = document.querySelector(Settings.parent),\n\t        spinner;\n\t    \n\t    css(bar, {\n\t      transition: 'all 0 linear',\n\t      transform: 'translate3d(' + perc + '%,0,0)'\n\t    });\n\t\n\t    if (!Settings.showSpinner) {\n\t      spinner = progress.querySelector(Settings.spinnerSelector);\n\t      spinner && removeElement(spinner);\n\t    }\n\t\n\t    if (parent != document.body) {\n\t      addClass(parent, 'nprogress-custom-parent');\n\t    }\n\t\n\t    parent.appendChild(progress);\n\t    return progress;\n\t  };\n\t\n\t  /**\n\t   * Removes the element. Opposite of render().\n\t   */\n\t\n\t  NProgress.remove = function() {\n\t    removeClass(document.documentElement, 'nprogress-busy');\n\t    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n\t    var progress = document.getElementById('nprogress');\n\t    progress && removeElement(progress);\n\t  };\n\t\n\t  /**\n\t   * Checks if the progress bar is rendered.\n\t   */\n\t\n\t  NProgress.isRendered = function() {\n\t    return !!document.getElementById('nprogress');\n\t  };\n\t\n\t  /**\n\t   * Determine which positioning CSS rule to use.\n\t   */\n\t\n\t  NProgress.getPositioningCSS = function() {\n\t    // Sniff on document.body.style\n\t    var bodyStyle = document.body.style;\n\t\n\t    // Sniff prefixes\n\t    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n\t                       ('MozTransform' in bodyStyle) ? 'Moz' :\n\t                       ('msTransform' in bodyStyle) ? 'ms' :\n\t                       ('OTransform' in bodyStyle) ? 'O' : '';\n\t\n\t    if (vendorPrefix + 'Perspective' in bodyStyle) {\n\t      // Modern browsers with 3D support, e.g. Webkit, IE10\n\t      return 'translate3d';\n\t    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n\t      // Browsers without 3D support, e.g. IE9\n\t      return 'translate';\n\t    } else {\n\t      // Browsers without translate() support, e.g. IE7-8\n\t      return 'margin';\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Helpers\n\t   */\n\t\n\t  function clamp(n, min, max) {\n\t    if (n < min) return min;\n\t    if (n > max) return max;\n\t    return n;\n\t  }\n\t\n\t  /**\n\t   * (Internal) converts a percentage (`0..1`) to a bar translateX\n\t   * percentage (`-100%..0%`).\n\t   */\n\t\n\t  function toBarPerc(n) {\n\t    return (-1 + n) * 100;\n\t  }\n\t\n\t\n\t  /**\n\t   * (Internal) returns the correct CSS for changing the bar's\n\t   * position given an n percentage, and speed and ease from Settings\n\t   */\n\t\n\t  function barPositionCSS(n, speed, ease) {\n\t    var barCSS;\n\t\n\t    if (Settings.positionUsing === 'translate3d') {\n\t      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n\t    } else if (Settings.positionUsing === 'translate') {\n\t      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n\t    } else {\n\t      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n\t    }\n\t\n\t    barCSS.transition = 'all '+speed+'ms '+ease;\n\t\n\t    return barCSS;\n\t  }\n\t\n\t  /**\n\t   * (Internal) Queues a function to be executed.\n\t   */\n\t\n\t  var queue = (function() {\n\t    var pending = [];\n\t    \n\t    function next() {\n\t      var fn = pending.shift();\n\t      if (fn) {\n\t        fn(next);\n\t      }\n\t    }\n\t\n\t    return function(fn) {\n\t      pending.push(fn);\n\t      if (pending.length == 1) next();\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * (Internal) Applies css properties to an element, similar to the jQuery \n\t   * css method.\n\t   *\n\t   * While this helper does assist with vendor prefixed property names, it \n\t   * does not perform any manipulation of values prior to setting styles.\n\t   */\n\t\n\t  var css = (function() {\n\t    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n\t        cssProps    = {};\n\t\n\t    function camelCase(string) {\n\t      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n\t        return letter.toUpperCase();\n\t      });\n\t    }\n\t\n\t    function getVendorProp(name) {\n\t      var style = document.body.style;\n\t      if (name in style) return name;\n\t\n\t      var i = cssPrefixes.length,\n\t          capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t          vendorName;\n\t      while (i--) {\n\t        vendorName = cssPrefixes[i] + capName;\n\t        if (vendorName in style) return vendorName;\n\t      }\n\t\n\t      return name;\n\t    }\n\t\n\t    function getStyleProp(name) {\n\t      name = camelCase(name);\n\t      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n\t    }\n\t\n\t    function applyCss(element, prop, value) {\n\t      prop = getStyleProp(prop);\n\t      element.style[prop] = value;\n\t    }\n\t\n\t    return function(element, properties) {\n\t      var args = arguments,\n\t          prop, \n\t          value;\n\t\n\t      if (args.length == 2) {\n\t        for (prop in properties) {\n\t          value = properties[prop];\n\t          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n\t        }\n\t      } else {\n\t        applyCss(element, args[1], args[2]);\n\t      }\n\t    }\n\t  })();\n\t\n\t  /**\n\t   * (Internal) Determines if an element or space separated list of class names contains a class name.\n\t   */\n\t\n\t  function hasClass(element, name) {\n\t    var list = typeof element == 'string' ? element : classList(element);\n\t    return list.indexOf(' ' + name + ' ') >= 0;\n\t  }\n\t\n\t  /**\n\t   * (Internal) Adds a class to an element.\n\t   */\n\t\n\t  function addClass(element, name) {\n\t    var oldList = classList(element),\n\t        newList = oldList + name;\n\t\n\t    if (hasClass(oldList, name)) return; \n\t\n\t    // Trim the opening space.\n\t    element.className = newList.substring(1);\n\t  }\n\t\n\t  /**\n\t   * (Internal) Removes a class from an element.\n\t   */\n\t\n\t  function removeClass(element, name) {\n\t    var oldList = classList(element),\n\t        newList;\n\t\n\t    if (!hasClass(element, name)) return;\n\t\n\t    // Replace the class name.\n\t    newList = oldList.replace(' ' + name + ' ', ' ');\n\t\n\t    // Trim the opening and closing spaces.\n\t    element.className = newList.substring(1, newList.length - 1);\n\t  }\n\t\n\t  /**\n\t   * (Internal) Gets a space separated list of the class names on the element. \n\t   * The list is wrapped with a single space on each end to facilitate finding \n\t   * matches within the list.\n\t   */\n\t\n\t  function classList(element) {\n\t    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n\t  }\n\t\n\t  /**\n\t   * (Internal) Removes an element from the DOM.\n\t   */\n\t\n\t  function removeElement(element) {\n\t    element && element.parentNode && element.parentNode.removeChild(element);\n\t  }\n\t\n\t  return NProgress;\n\t});\n\t\n\n\n/***/ },\n\n/***/ 233:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/fonts/fontawesome-webfont.25a3241.eot\";\n\n/***/ },\n\n/***/ 234:\n233,\n\n/***/ 235:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/fonts/fontawesome-webfont.1dc35d2.ttf\";\n\n/***/ },\n\n/***/ 236:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/fonts/fontawesome-webfont.e6cf7c6.woff2\";\n\n/***/ },\n\n/***/ 237:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/fonts/fontawesome-webfont.c8ddf1e.woff\";\n\n/***/ },\n\n/***/ 238:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/img/fontawesome-webfont.d7c6390.svg\";\n\n/***/ },\n\n/***/ 285:\n/***/ function(module, exports) {\n\n\t/*!\n\t * vue-resource v0.9.1\n\t * https://github.com/vuejs/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING = 2;\n\t\n\tfunction Promise$2(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$2.reject = function (r) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$2.resolve = function (x) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$2.all = function all(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        var count = 0,\n\t            result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$2.race = function race(iterable) {\n\t    return new Promise$2(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$2.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$2.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$2(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tvar PromiseObj = window.Promise || Promise$2;\n\t\n\tfunction Promise$1(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise$1.all = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise$1.resolve = function (value, context) {\n\t    return new Promise$1(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise$1.reject = function (reason, context) {\n\t    return new Promise$1(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise$1.race = function (iterable, context) {\n\t    return new Promise$1(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise$1.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new Promise$1(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t        callback.call(this);\n\t        return value;\n\t    }, function (reason) {\n\t        callback.call(this);\n\t        return PromiseObj.reject(reason);\n\t    });\n\t};\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar array = [];\n\tfunction Util (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t}\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\tfunction isBoolean(val) {\n\t    return val === true || val === false;\n\t}\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise$1.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\tfunction root (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\tfunction query (options, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params),\n\t        query = {},\n\t        url = next(options);\n\t\n\t    each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url),\n\t        expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n\t        variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null,\n\t                        values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key],\n\t        result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\tfunction template (options) {\n\t\n\t    var variables = [],\n\t        url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t}\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {},\n\t        options = url,\n\t        transform;\n\t\n\t    if (isString(url)) {\n\t        options = { url: url, params: params };\n\t    }\n\t\n\t    options = merge({}, Url.options, self.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [],\n\t        escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj),\n\t        plain = isPlainObject(obj),\n\t        hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tfunction xdrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith(xdr.responseText, {\n\t                status: xdr.status,\n\t                statusText: xdr.statusText\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, request.getUrl(), true);\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t}\n\t\n\tvar ORIGIN_URL = Url.parse(location.href);\n\tvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\t\n\tfunction cors (request, next) {\n\t\n\t    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n\t        request.crossOrigin = true;\n\t    }\n\t\n\t    if (request.crossOrigin) {\n\t\n\t        if (!SUPPORTS_CORS) {\n\t            request.client = xdrClient;\n\t        }\n\t\n\t        delete request.emulateHTTP;\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = Url.parse(Url(request));\n\t\n\t    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n\t}\n\t\n\tfunction body (request, next) {\n\t\n\t    if (request.emulateJSON && isPlainObject(request.body)) {\n\t        request.body = Url.params(request.body);\n\t        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t    }\n\t\n\t    if (isFormData(request.body)) {\n\t        delete request.headers['Content-Type'];\n\t    }\n\t\n\t    if (isPlainObject(request.body)) {\n\t        request.body = JSON.stringify(request.body);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        var contentType = response.headers['Content-Type'];\n\t\n\t        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\t\n\t            try {\n\t                response.data = response.json();\n\t            } catch (e) {\n\t                response.data = null;\n\t            }\n\t        } else {\n\t            response.data = response.text();\n\t        }\n\t    });\n\t}\n\t\n\tfunction jsonpClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback',\n\t            callback = '_jsonp' + Math.random().toString(36).substr(2),\n\t            body = null,\n\t            handler,\n\t            script;\n\t\n\t        handler = function (event) {\n\t\n\t            var status = 0;\n\t\n\t            if (event.type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (event.type === 'error') {\n\t                status = 404;\n\t            }\n\t\n\t            resolve(request.respondWith(body, { status: status }));\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t}\n\t\n\tfunction jsonp (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            response.data = response.json();\n\t        }\n\t    });\n\t}\n\t\n\tfunction before (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tfunction method (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers['X-HTTP-Method-Override'] = request.method;\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t}\n\t\n\tfunction header (request, next) {\n\t\n\t    request.method = request.method.toUpperCase();\n\t    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\t\n\t    next();\n\t}\n\t\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tfunction timeout (request, next) {\n\t\n\t    var timeout;\n\t\n\t    if (request.timeout) {\n\t        timeout = setTimeout(function () {\n\t            request.cancel();\n\t        }, request.timeout);\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        clearTimeout(timeout);\n\t    });\n\t}\n\t\n\tfunction xhrClient (request) {\n\t    return new Promise$1(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(),\n\t            handler = function (event) {\n\t\n\t            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n\t                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n\t                headers: parseHeaders(xhr.getAllResponseHeaders())\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () {\n\t            return xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onerror = handler;\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.getBody());\n\t    });\n\t}\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {},\n\t        value,\n\t        name,\n\t        i;\n\t\n\t    each(trim(str).split('\\n'), function (row) {\n\t\n\t        i = row.indexOf(':');\n\t        name = trim(row.slice(0, i));\n\t        value = trim(row.slice(i + 1));\n\t\n\t        if (headers[name]) {\n\t\n\t            if (isArray(headers[name])) {\n\t                headers[name].push(value);\n\t            } else {\n\t                headers[name] = [headers[name], value];\n\t            }\n\t        } else {\n\t\n\t            headers[name] = value;\n\t        }\n\t    });\n\t\n\t    return headers;\n\t}\n\t\n\tfunction Client (context) {\n\t\n\t    var reqHandlers = [sendRequest],\n\t        resHandlers = [],\n\t        handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new Promise$1(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t                when(response, function (response) {\n\t\n\t                    if (isFunction(response)) {\n\t\n\t                        resHandlers.unshift(response);\n\t                    } else if (isObject(response)) {\n\t\n\t                        resHandlers.forEach(function (handler) {\n\t                            handler.call(context, response);\n\t                        });\n\t\n\t                        resolve(response);\n\t\n\t                        return;\n\t                    }\n\t\n\t                    exec();\n\t                });\n\t            }\n\t\n\t            exec();\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t}\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || xhrClient;\n\t\n\t    resolve(client(request));\n\t}\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function () {\n\t    function Response(body, _ref) {\n\t        var url = _ref.url;\n\t        var headers = _ref.headers;\n\t        var status = _ref.status;\n\t        var statusText = _ref.statusText;\n\t        classCallCheck(this, Response);\n\t\n\t\n\t        this.url = url;\n\t        this.body = body;\n\t        this.headers = headers || {};\n\t        this.status = status || 0;\n\t        this.statusText = statusText || '';\n\t        this.ok = status >= 200 && status < 300;\n\t    }\n\t\n\t    Response.prototype.text = function text() {\n\t        return this.body;\n\t    };\n\t\n\t    Response.prototype.blob = function blob() {\n\t        return new Blob([this.body]);\n\t    };\n\t\n\t    Response.prototype.json = function json() {\n\t        return JSON.parse(this.body);\n\t    };\n\t\n\t    return Response;\n\t}();\n\t\n\tvar Request = function () {\n\t    function Request(options) {\n\t        classCallCheck(this, Request);\n\t\n\t\n\t        this.method = 'GET';\n\t        this.body = null;\n\t        this.params = {};\n\t        this.headers = {};\n\t\n\t        assign(this, options);\n\t    }\n\t\n\t    Request.prototype.getUrl = function getUrl() {\n\t        return Url(this);\n\t    };\n\t\n\t    Request.prototype.getBody = function getBody() {\n\t        return this.body;\n\t    };\n\t\n\t    Request.prototype.respondWith = function respondWith(body, options) {\n\t        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n\t    };\n\t\n\t    return Request;\n\t}();\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\n\tvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\n\tvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\t\n\tfunction Http(options) {\n\t\n\t    var self = this || {},\n\t        client = Client(self.$vm);\n\t\n\t    defaults(options || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options)).then(function (response) {\n\t\n\t        return response.ok ? response : Promise$1.reject(response);\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return Promise$1.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    custom: CUSTOM_HEADERS,\n\t    common: COMMON_HEADERS\n\t};\n\t\n\tHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, options) {\n\t        return this(assign(options || {}, { url: url, method: method }));\n\t    };\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, body, options) {\n\t        return this(assign(options || {}, { url: url, method: method, body: body }));\n\t    };\n\t});\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this || {},\n\t        resource = {};\n\t\n\t    actions = assign({}, Resource.actions, actions);\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({ url: url, params: params || {} }, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = assign({}, action),\n\t        params = {},\n\t        body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.body = body;\n\t    options.params = assign({}, options.params, params);\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: { method: 'GET' },\n\t    save: { method: 'POST' },\n\t    query: { method: 'GET' },\n\t    update: { method: 'PUT' },\n\t    remove: { method: 'DELETE' },\n\t    delete: { method: 'DELETE' }\n\t\n\t};\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = Promise$1;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                var _this = this;\n\t\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, _this);\n\t                };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n/***/ },\n\n/***/ 286:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n\n/***/ 287:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v0.8.2\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  var classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  var createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  var toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t   *\n\t   * @param {*} obj\n\t   * @return {*}\n\t   */\n\t\n\t  function deepClone(obj) {\n\t    if (Array.isArray(obj)) {\n\t      return obj.map(deepClone);\n\t    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n\t      var cloned = {};\n\t      var keys = Object.keys(obj);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        cloned[key] = deepClone(obj[key]);\n\t      }\n\t      return cloned;\n\t    } else {\n\t      return obj;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var noop = function noop() {};\n\t      var unwatch = vm.$watch(noop, noop);\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  var devtoolMiddleware = {\n\t    onInit: function onInit(state, store) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:init', store);\n\t      hook.on('vuex:travel-to-state', function (targetState) {\n\t        store._dispatching = true;\n\t        store._vm.state = targetState;\n\t        store._dispatching = false;\n\t      });\n\t    },\n\t    onMutation: function onMutation(mutation, state) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    }\n\t  };\n\t\n\t  function override (Vue) {\n\t    var version = Number(Vue.version.split('.')[0]);\n\t\n\t    if (version >= 2) {\n\t      var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n\t      Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n\t    } else {\n\t      (function () {\n\t        // override init and inject vuex init procedure\n\t        // for 1.x backwards compatibility.\n\t        var _init = Vue.prototype._init;\n\t        Vue.prototype._init = function () {\n\t          var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t          options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t          _init.call(this, options);\n\t        };\n\t      })();\n\t    }\n\t\n\t    /**\n\t     * Vuex init hook, injected into each instances init hooks list.\n\t     */\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var actions = vuex.actions;\n\t        var getters = vuex.getters;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setter for all getter properties.\n\t     */\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    /**\n\t     * Define a Vuex getter on an instance.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} key\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      if (typeof getter !== 'function') {\n\t        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n\t      } else {\n\t        Object.defineProperty(vm, key, {\n\t          enumerable: true,\n\t          configurable: true,\n\t          get: makeComputedGetter(vm.$store, getter),\n\t          set: setter\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Make a computed getter, using the same caching mechanism of computed\n\t     * properties. In addition, it is cached on the raw getter function using\n\t     * the store's unique cache id. This makes the same getter shared\n\t     * across all components use the same underlying watcher, and makes\n\t     * the getter evaluated only once during every flush.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (vm) {\n\t        return getter(vm.state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    /**\n\t     * Make a bound-to-store version of a raw action function.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} action\n\t     * @param {String} key\n\t     */\n\t\n\t    function makeBoundAction(store, action, key) {\n\t      if (typeof action !== 'function') {\n\t        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n\t      }\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} middlewares\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$middlewares = _ref.middlewares;\n\t      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: {\n\t          state: state\n\t        }\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      this._setupMiddlewares(middlewares, state);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    createClass(Store, [{\n\t      key: 'dispatch',\n\t\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t      value: function dispatch(type) {\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        var silent = false;\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          payload = [type.payload];\n\t          if (type.silent) silent = true;\n\t          type = type.type;\n\t        }\n\t        var mutation = this._mutations[type];\n\t        var state = this.state;\n\t        if (mutation) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(mutation)) {\n\t            mutation.forEach(function (m) {\n\t              return m.apply(undefined, [state].concat(toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            mutation.apply(undefined, [state].concat(toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          if (!silent) this._applyMiddlewares(type, payload);\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {Function} fn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(fn, cb, options) {\n\t        var _this2 = this;\n\t\n\t        if (typeof fn !== 'function') {\n\t          console.error('Vuex store.watch only accepts function.');\n\t          return;\n\t        }\n\t        return this._vm.$watch(function () {\n\t          return fn(_this2.state);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        Object.keys(modules).forEach(function (key) {\n\t          Vue.set(state, key, modules[key].state || {});\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        var allMutations = [this._rootMutations];\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t          if (!module || !module.mutations) return;\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [state[key]].concat(args));\n\t            };\n\t          });\n\t          allMutations.push(mutations);\n\t        });\n\t        this._mutations = mergeObjects(allMutations);\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this3 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, 'state', function () {\n\t          if (!_this3._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t\n\t      /**\n\t       * Setup the middlewares. The devtools middleware is always\n\t       * included, since it does nothing if no devtool is detected.\n\t       *\n\t       * A middleware can demand the state it receives to be\n\t       * \"snapshots\", i.e. deep clones of the actual state tree.\n\t       *\n\t       * @param {Array} middlewares\n\t       * @param {Object} state\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMiddlewares',\n\t      value: function _setupMiddlewares(middlewares, state) {\n\t        var _this4 = this;\n\t\n\t        this._middlewares = [devtoolMiddleware].concat(middlewares);\n\t        this._needSnapshots = middlewares.some(function (m) {\n\t          return m.snapshot;\n\t        });\n\t        if (this._needSnapshots) {\n\t          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t        }\n\t        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n\t        // call init hooks\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onInit) {\n\t            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n\t          }\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Apply the middlewares on a given mutation.\n\t       *\n\t       * @param {String} type\n\t       * @param {Array} payload\n\t       */\n\t\n\t    }, {\n\t      key: '_applyMiddlewares',\n\t      value: function _applyMiddlewares(type, payload) {\n\t        var _this5 = this;\n\t\n\t        var state = this.state;\n\t        var prevSnapshot = this._prevSnapshot;\n\t        var snapshot = void 0,\n\t            clonedPayload = void 0;\n\t        if (this._needSnapshots) {\n\t          snapshot = this._prevSnapshot = deepClone(state);\n\t          clonedPayload = deepClone(payload);\n\t        }\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onMutation) {\n\t            if (m.snapshot) {\n\t              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n\t            } else {\n\t              m.onMutation({ type: type, payload: payload }, state, _this5);\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm.state;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Vuex root state is read only.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    if (Vue) {\n\t      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n\t      return;\n\t    }\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/vendor.e7cb72f0b0b115fa4b2d.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 3\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 3\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 3\n ** module chunks = 3\n **/","/*\n * Anime v1.0.0\n * http://anime-js.com\n * JavaScript animation engine\n * Copyright (c) 2016 Julian Garnier\n * http://juliangarnier.com\n * Released under the MIT license\n */\n(function(r,n){\"function\"===typeof define&&define.amd?define([],n):\"object\"===typeof module&&module.exports?module.exports=n():r.anime=n()})(this,function(){var r={duration:1E3,delay:0,loop:!1,autoplay:!0,direction:\"normal\",easing:\"easeOutElastic\",elasticity:400,round:!1,begin:void 0,update:void 0,complete:void 0},n=\"translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY\".split(\" \"),e=function(){return{array:function(a){return Array.isArray(a)},object:function(a){return-1<\nObject.prototype.toString.call(a).indexOf(\"Object\")},html:function(a){return a instanceof NodeList||a instanceof HTMLCollection},node:function(a){return a.nodeType},svg:function(a){return a instanceof SVGElement},number:function(a){return!isNaN(parseInt(a))},string:function(a){return\"string\"===typeof a},func:function(a){return\"function\"===typeof a},undef:function(a){return\"undefined\"===typeof a},\"null\":function(a){return\"null\"===typeof a},hex:function(a){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)},\nrgb:function(a){return/^rgb/.test(a)},rgba:function(a){return/^rgba/.test(a)},hsl:function(a){return/^hsl/.test(a)},color:function(a){return e.hex(a)||e.rgb(a)||e.rgba(a)||e.hsl(a)}}}(),z=function(){var a={},b={Sine:function(a){return 1-Math.cos(a*Math.PI/2)},Circ:function(a){return 1-Math.sqrt(1-a*a)},Elastic:function(a,b){if(0===a||1===a)return a;var f=1-Math.min(b,998)/1E3,h=a/1-1;return-(Math.pow(2,10*h)*Math.sin(2*(h-f/(2*Math.PI)*Math.asin(1))*Math.PI/f))},Back:function(a){return a*a*(3*a-2)},\nBounce:function(a){for(var b,f=4;a<((b=Math.pow(2,--f))-1)/11;);return 1/Math.pow(4,3-f)-7.5625*Math.pow((3*b-2)/22-a,2)}};[\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"].forEach(function(a,d){b[a]=function(a){return Math.pow(a,d+2)}});Object.keys(b).forEach(function(c){var d=b[c];a[\"easeIn\"+c]=d;a[\"easeOut\"+c]=function(a,b){return 1-d(1-a,b)};a[\"easeInOut\"+c]=function(a,b){return.5>a?d(2*a,b)/2:1-d(-2*a+2,b)/2}});a.linear=function(a){return a};return a}(),u=function(a){return e.string(a)?a:a+\"\"},A=function(a){return a.replace(/([a-z])([A-Z])/g,\n\"$1-$2\").toLowerCase()},B=function(a){if(e.color(a))return!1;try{return document.querySelectorAll(a)}catch(b){return!1}},v=function(a){return a.reduce(function(a,c){return a.concat(e.array(c)?v(c):c)},[])},p=function(a){if(e.array(a))return a;e.string(a)&&(a=B(a)||a);return e.html(a)?[].slice.call(a):[a]},C=function(a,b){return a.some(function(a){return a===b})},N=function(a,b){var c={};a.forEach(function(a){var f=JSON.stringify(b.map(function(b){return a[b]}));c[f]=c[f]||[];c[f].push(a)});return Object.keys(c).map(function(a){return c[a]})},\nD=function(a){return a.filter(function(a,c,d){return d.indexOf(a)===c})},w=function(a){var b={},c;for(c in a)b[c]=a[c];return b},t=function(a,b){for(var c in b)a[c]=e.undef(a[c])?b[c]:a[c];return a},O=function(a){a=a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(a,b,c,e){return b+b+c+c+e+e});var b=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);a=parseInt(b[1],16);var c=parseInt(b[2],16),b=parseInt(b[3],16);return\"rgb(\"+a+\",\"+c+\",\"+b+\")\"},P=function(a){a=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(a);\nvar b=parseInt(a[1])/360,c=parseInt(a[2])/100,d=parseInt(a[3])/100;a=function(a,b,c){0>c&&(c+=1);1<c&&--c;return c<1/6?a+6*(b-a)*c:.5>c?b:c<2/3?a+(b-a)*(2/3-c)*6:a};if(0==c)c=d=b=d;else var f=.5>d?d*(1+c):d+c-d*c,h=2*d-f,c=a(h,f,b+1/3),d=a(h,f,b),b=a(h,f,b-1/3);return\"rgb(\"+255*c+\",\"+255*d+\",\"+255*b+\")\"},k=function(a){return/([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(a)[2]},E=function(a,b,c){return k(b)?b:-1<a.indexOf(\"translate\")?k(c)?b+k(c):b+\"px\":-1<a.indexOf(\"rotate\")||\n-1<a.indexOf(\"skew\")?b+\"deg\":b},F=function(a,b){if((e.node(a)||e.svg(a))&&C(n,b))return\"transform\";if((e.node(a)||e.svg(a))&&\"transform\"!==b&&x(a,b))return\"css\";if((e.node(a)||e.svg(a))&&(a.getAttribute(b)||e.svg(a)&&a[b]))return\"attribute\";if(!e[\"null\"](a[b])&&!e.undef(a[b]))return\"object\"},x=function(a,b){if(b in a.style)return getComputedStyle(a).getPropertyValue(A(b))||\"0\"},Q=function(a,b){var c=-1<b.indexOf(\"scale\")?1:0,d=a.style.transform;if(!d)return c;for(var f=/(\\w+)\\((.+?)\\)/g,h=[],e=[],\nq=[];h=f.exec(d);)e.push(h[1]),q.push(h[2]);d=q.filter(function(a,c){return e[c]===b});return d.length?d[0]:c},G=function(a,b){switch(F(a,b)){case \"transform\":return Q(a,b);case \"css\":return x(a,b);case \"attribute\":return a.getAttribute(b)}return a[b]||0},H=function(a,b,c){if(e.color(b))return b=e.rgb(b)||e.rgba(b)?b:e.hex(b)?O(b):e.hsl(b)?P(b):void 0,b;if(k(b))return b;a=k(a.to)?k(a.to):k(a.from);!a&&c&&(a=k(c));return a?b+a:b},I=function(a){var b=/-?\\d*\\.?\\d+/g;return{original:a,numbers:u(a).match(b)?\nu(a).match(b).map(Number):[0],strings:u(a).split(b)}},R=function(a,b,c){return b.reduce(function(b,f,e){f=f?f:c[e-1];return b+a[e-1]+f})},S=function(a){a=a?v(e.array(a)?a.map(p):p(a)):[];return a.map(function(a,c){return{target:a,id:c}})},T=function(a,b){var c=[],d;for(d in a)if(!r.hasOwnProperty(d)&&\"targets\"!==d){var f=e.object(a[d])?w(a[d]):{value:a[d]};f.name=d;c.push(t(f,b))}return c},J=function(a,b,c,d){\"transform\"===c?(c=a+\"(\"+E(a,b.from,b.to)+\")\",b=a+\"(\"+E(a,b.to)+\")\"):(a=\"css\"===c?x(d,a):\nvoid 0,c=H(b,b.from,a),b=H(b,b.to,a));return{from:I(c),to:I(b)}},U=function(a,b){var c=[];a.forEach(function(d,f){var h=d.target;return b.forEach(function(b){var q=F(h,b.name);if(q){var k;k=b.name;var g=b.value,g=p(e.func(g)?g(h,f):g);k={from:1<g.length?g[0]:G(h,k),to:1<g.length?g[1]:g[0]};g=w(b);g.animatables=d;g.type=q;g.from=J(b.name,k,g.type,h).from;g.to=J(b.name,k,g.type,h).to;g.round=e.color(k.from)||g.round?1:0;g.delay=(e.func(g.delay)?g.delay(h,f,a.length):g.delay)/l.speed;g.duration=(e.func(g.duration)?\ng.duration(h,f,a.length):g.duration)/l.speed;c.push(g)}})});return c},V=function(a,b){var c=U(a,b);return N(c,[\"name\",\"from\",\"to\",\"delay\",\"duration\"]).map(function(a){var b=w(a[0]);b.animatables=a.map(function(a){return a.animatables});b.totalDuration=b.delay+b.duration;return b})},y=function(a,b){a.tweens.forEach(function(c){var d=c.from,f=a.duration-(c.delay+c.duration);c.from=c.to;c.to=d;b&&(c.delay=f)});a.reversed=a.reversed?!1:!0},K=function(a){var b=[],c=[];a.tweens.forEach(function(a){if(\"css\"===\na.type||\"transform\"===a.type)b.push(\"css\"===a.type?A(a.name):\"transform\"),a.animatables.forEach(function(a){c.push(a.target)})});return{properties:D(b).join(\", \"),elements:D(c)}},W=function(a){var b=K(a);b.elements.forEach(function(a){a.style.willChange=b.properties})},X=function(a){K(a).elements.forEach(function(a){a.style.removeProperty(\"will-change\")})},Y=function(a,b){var c=a.path,d=a.value*b,f=function(f){f=f||0;return c.getPointAtLength(1<b?a.value+f:d+f)},e=f(),k=f(-1),f=f(1);switch(a.name){case \"translateX\":return e.x;\ncase \"translateY\":return e.y;case \"rotate\":return 180*Math.atan2(f.y-k.y,f.x-k.x)/Math.PI}},Z=function(a,b){var c=Math.min(Math.max(b-a.delay,0),a.duration)/a.duration,d=a.to.numbers.map(function(b,d){var e=a.from.numbers[d],k=z[a.easing](c,a.elasticity),e=a.path?Y(a,k):e+k*(b-e);return e=a.round?Math.round(e*a.round)/a.round:e});return R(d,a.to.strings,a.from.strings)},L=function(a,b){var c=void 0;a.time=Math.min(b,a.duration);a.progress=a.time/a.duration*100;a.tweens.forEach(function(a){a.currentValue=\nZ(a,b);var d=a.currentValue;a.animatables.forEach(function(b){var e=b.id;switch(a.type){case \"css\":b.target.style[a.name]=d;break;case \"attribute\":b.target.setAttribute(a.name,d);break;case \"object\":b.target[a.name]=d;break;case \"transform\":c||(c={}),c[e]||(c[e]=[]),c[e].push(d)}})});if(c)for(var d in c)a.animatables[d].target.style.transform=c[d].join(\" \");a.settings.update&&a.settings.update(a)},M=function(a){var b={};b.animatables=S(a.targets);b.settings=t(a,r);b.properties=T(a,b.settings);b.tweens=\nV(b.animatables,b.properties);b.duration=b.tweens.length?Math.max.apply(Math,b.tweens.map(function(a){return a.totalDuration})):a.duration/l.speed;b.time=0;b.progress=0;b.running=!1;b.ended=!1;return b},m=[],l=function(a){var b=M(a),c={tick:function(){if(b.running){b.ended=!1;c.now=+new Date;c.current=c.last+c.now-c.start;L(b,c.current);var a=b.settings;a.begin&&c.current>=a.delay&&(a.begin(b),a.begin=void 0);c.current>=b.duration?(a.loop?(c.start=+new Date,\"alternate\"===a.direction&&y(b,!0),e.number(a.loop)&&\na.loop--,c.raf=requestAnimationFrame(c.tick)):(b.ended=!0,a.complete&&a.complete(b),b.pause()),c.last=0):c.raf=requestAnimationFrame(c.tick)}}};b.seek=function(a){L(b,a/100*b.duration)};b.pause=function(){b.running=!1;cancelAnimationFrame(c.raf);X(b);var a=m.indexOf(b);-1<a&&m.splice(a,1)};b.play=function(a){a&&(b=t(M(t(a,b.settings)),b));b.pause();b.running=!0;c.start=+new Date;c.last=b.ended?0:b.time;a=b.settings;\"reverse\"===a.direction&&y(b);\"alternate\"!==a.direction||a.loop||(a.loop=1);W(b);m.push(b);\nc.raf=requestAnimationFrame(c.tick)};b.restart=function(){b.reversed&&y(b);b.pause();b.seek(0);b.play()};b.settings.autoplay&&b.play();return b};l.speed=1;l.list=m;l.remove=function(a){a=v(e.array(a)?a.map(p):p(a));for(var b=m.length-1;0<=b;b--)for(var c=m[b],d=c.tweens.length-1;0<=d;d--)for(var f=c.tweens[d],h=f.animatables.length-1;0<=h;h--)C(a,f.animatables[h].target)&&(f.animatables.splice(h,1),f.animatables.length||c.tweens.splice(d,1),c.tweens.length||c.pause())};l.easings=z;l.getValue=G;l.path=\nfunction(a){a=e.string(a)?B(a)[0]:a;return{path:a,value:a.getTotalLength()}};l.random=function(a,b){return Math.floor(Math.random()*(b-a+1))+a};return l});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/animejs/anime.min.js\n ** module id = 87\n ** module chunks = 3\n **/","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 2.1.6\n *\n * Copyright 2016 Nick Downie\n * Released under the MIT license\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/* MIT license */\r\nvar colorNames = require(6);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n},{\"6\":6}],3:[function(require,module,exports){\n/* MIT license */\r\nvar convert = require(5);\r\nvar string = require(2);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\n},{\"2\":2,\"5\":5}],4:[function(require,module,exports){\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n},{}],5:[function(require,module,exports){\nvar conversions = require(4);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n},{\"4\":4}],6:[function(require,module,exports){\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n},{}],7:[function(require,module,exports){\n/**\r\n * @namespace Chart\r\n */\r\nvar Chart = require(26)();\r\n\r\nrequire(25)(Chart);\r\nrequire(24)(Chart);\r\nrequire(21)(Chart);\r\nrequire(22)(Chart);\r\nrequire(23)(Chart);\r\nrequire(27)(Chart);\r\nrequire(31)(Chart);\r\nrequire(29)(Chart);\r\nrequire(30)(Chart);\r\nrequire(32)(Chart);\r\nrequire(28)(Chart);\r\nrequire(33)(Chart);\r\n\r\nrequire(34)(Chart);\r\nrequire(35)(Chart);\r\nrequire(36)(Chart);\r\nrequire(37)(Chart);\r\n\r\nrequire(40)(Chart);\r\nrequire(38)(Chart);\r\nrequire(39)(Chart);\r\nrequire(41)(Chart);\r\nrequire(42)(Chart);\r\nrequire(43)(Chart);\r\n\r\n// Controllers must be loaded after elements\r\n// See Chart.core.datasetController.dataElementType\r\nrequire(15)(Chart);\r\nrequire(16)(Chart);\r\nrequire(17)(Chart);\r\nrequire(18)(Chart);\r\nrequire(19)(Chart);\r\nrequire(20)(Chart);\r\n\r\nrequire(8)(Chart);\r\nrequire(9)(Chart);\r\nrequire(10)(Chart);\r\nrequire(11)(Chart);\r\nrequire(12)(Chart);\r\nrequire(13)(Chart);\r\nrequire(14)(Chart);\r\n\r\nwindow.Chart = module.exports = Chart;\r\n\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"39\":39,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"8\":8,\"9\":9}],8:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],9:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],10:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],11:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],12:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],13:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\t\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.options = Chart.helpers.configMerge({ aspectRatio: 1 }, config.options);\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // scatter should not use a category axis\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-1\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-1\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\n},{}],15:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\"\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Rectangle,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\r\n\r\n\t\t\t// Use this to indicate that this is a bar dataset.\r\n\t\t\tthis.getMeta().bar = true;\r\n\t\t},\r\n\r\n\t\t// Get the number of datasets that display bars. We use this to correctly calculate the bar width\r\n\t\tgetBarCount: function getBarCount() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar barCount = 0;\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (meta.bar && me.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t++barCount;\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\t\t\treturn barCount;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tme.updateElement(rectangle, index, reset);\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tupdateElement: function updateElement(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = yScale.getBasePixel();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: me.calculateBarX(index, me.index),\r\n\t\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\twidth: me.calculateBarWidth(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tvar chart = me.chart;\r\n\t\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\t\tvar value = datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.yAxisID === yScale.id && chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn yScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar datasetCount = me.getBarCount();\r\n\r\n\t\t\tvar tickWidth;\r\n\r\n\t\t\tif (xScale.options.type === 'category') {\r\n\t\t\t\ttickWidth = xScale.getPixelForTick(index + 1) - xScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarWidth = categoryWidth / datasetCount;\r\n\r\n\t\t\tif (xScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t    var perc = xScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t    fullBarWidth = fullBarWidth * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickWidth: tickWidth,\r\n\t\t\t\tcategoryWidth: categoryWidth,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarWidth: fullBarWidth,\r\n\t\t\t\tbarWidth: barWidth,\r\n\t\t\t\tbarSpacing: barSpacing\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarWidth: function(index) {\r\n\t\t\tvar xScale = this.getScaleForId(this.getMeta().xAxisID);\r\n\t\t\tvar ruler = this.getRuler(index);\r\n\t\t\treturn xScale.options.stacked ? ruler.categoryWidth : ruler.barWidth;\r\n\t\t},\r\n\r\n\t\t// Get bar index from the given dataset index accounting for the fact that not all bars are visible\r\n\t\tgetBarIndex: function(datasetIndex) {\r\n\t\t\tvar barIndex = 0;\r\n\t\t\tvar meta, j;\r\n\r\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tmeta = this.chart.getDatasetMeta(j);\r\n\t\t\t\tif (meta.bar && this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++barIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn barIndex;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\t\t\t\treturn leftTick + (ruler.categoryWidth / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn leftTick +\r\n\t\t\t\t(ruler.barWidth / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barWidth * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar value = me.getDataset().data[index];\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\r\n\t\t\t\tvar d = me.getDataset().data[index];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\trectangle.transition(easingDecimal).draw();\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"bottom\"\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\ttype: \"category\",\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\telements: {\r\n\t\t\trectangle: {\r\n\t\t\t\tborderSkipped: 'left'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\tupdateElement: function updateElement(rectangle, index, reset, numBars) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar scaleBase = xScale.getBasePixel();\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\r\n\r\n\t\t\thelpers.extend(rectangle, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\r\n\t\t\t\t\ty: me.calculateBarY(index, me.index),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\tlabel: me.chart.data.labels[index],\r\n\t\t\t\t\tdatasetLabel: dataset.label,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\r\n\t\t\t\t\theight: me.calculateBarHeight(index),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\r\n\t\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\t\t\tvar vm = this._view;\r\n\r\n\t\t\t\t\tvar halfHeight = vm.height / 2,\r\n\t\t\t\t\t\ttopY = vm.y - halfHeight,\r\n\t\t\t\t\t\tbottomY = vm.y + halfHeight,\r\n\t\t\t\t\t\tright = vm.base - (vm.base - vm.x),\r\n\t\t\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\ttopY += halfStroke;\r\n\t\t\t\t\t\tbottomY -= halfStroke;\r\n\t\t\t\t\t\tright += halfStroke;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t\t\t// | 1 2 |\r\n\t\t\t\t\t// | 0 3 |\r\n\t\t\t\t\tvar corners = [\r\n\t\t\t\t\t\t[vm.base, bottomY],\r\n\t\t\t\t\t\t[vm.base, topY],\r\n\t\t\t\t\t\t[right, topY],\r\n\t\t\t\t\t\t[right, bottomY]\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\t\t\tif (startCorner === -1)\r\n\t\t\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\t\t\tfunction cornerAt(index) {\r\n\t\t\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\t\t\tctx.fill();\r\n\t\t\t\t\tif (vm.borderWidth) {\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tinRange: function (mouseX, mouseY) {\r\n\t\t\t\t\tvar vm = this._view;\r\n\t\t\t\t\tvar inRange = false;\r\n\r\n\t\t\t\t\tif (vm) {\r\n\t\t\t\t\t\tif (vm.x < vm.base) {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.x && mouseX <= vm.base);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinRange = (mouseY >= vm.y - vm.height / 2 && mouseY <= vm.y + vm.height / 2) && (mouseX >= vm.base && mouseX <= vm.x);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn inRange;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\tcalculateBarBase: function (datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar base = 0;\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\t\tvar negDS = me.chart.data.datasets[i];\r\n\t\t\t\t\t\tvar negDSMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (negDSMeta.bar && negDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tbase += negDS.data[index] < 0 ? negDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var j = 0; j < datasetIndex; j++) {\r\n\t\t\t\t\t\tvar posDS = me.chart.data.datasets[j];\r\n\t\t\t\t\t\tvar posDSMeta = me.chart.getDatasetMeta(j);\r\n\t\t\t\t\t\tif (posDSMeta.bar && posDSMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t\t\tbase += posDS.data[index] > 0 ? posDS.data[index] : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn xScale.getPixelForValue(base);\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getBasePixel();\r\n\t\t},\r\n\r\n\t\tgetRuler: function (index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar datasetCount = me.getBarCount();\r\n\r\n\t\t\tvar tickHeight;\r\n\t\t\tif (yScale.options.type === 'category') {\r\n\t\t\t\ttickHeight = yScale.getPixelForTick(index + 1) - yScale.getPixelForTick(index);\r\n\t\t\t} else {\r\n\t\t\t\t// Average width\r\n\t\t\t\ttickHeight = yScale.width / yScale.ticks.length;\r\n\t\t\t}\r\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\r\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\r\n\t\t\tvar fullBarHeight = categoryHeight / datasetCount;\r\n\r\n\t\t\tif (yScale.ticks.length !== me.chart.data.labels.length) {\r\n\t\t\t\tvar perc = yScale.ticks.length / me.chart.data.labels.length;\r\n\t\t\t\tfullBarHeight = fullBarHeight * perc;\r\n\t\t\t}\r\n\r\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\r\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdatasetCount: datasetCount,\r\n\t\t\t\ttickHeight: tickHeight,\r\n\t\t\t\tcategoryHeight: categoryHeight,\r\n\t\t\t\tcategorySpacing: categorySpacing,\r\n\t\t\t\tfullBarHeight: fullBarHeight,\r\n\t\t\t\tbarHeight: barHeight,\r\n\t\t\t\tbarSpacing: barSpacing,\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculateBarHeight: function (index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar yScale = me.getScaleForId(me.getMeta().yAxisID);\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\treturn yScale.options.stacked ? ruler.categoryHeight : ruler.barHeight;\r\n\t\t},\r\n\r\n\t\tcalculateBarX: function (index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar value = me.getDataset().data[index];\r\n\r\n\t\t\tif (xScale.options.stacked) {\r\n\r\n\t\t\t\tvar sumPos = 0,\r\n\t\t\t\t\tsumNeg = 0;\r\n\r\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\r\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn xScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tcalculateBarY: function (index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar barIndex = me.getBarIndex(datasetIndex);\r\n\r\n\t\t\tvar ruler = me.getRuler(index);\r\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\treturn topTick + (ruler.categoryHeight / 2) + ruler.categorySpacing;\r\n\t\t\t}\r\n\r\n\t\t\treturn topTick +\r\n\t\t\t\t(ruler.barHeight / 2) +\r\n\t\t\t\truler.categorySpacing +\r\n\t\t\t\t(ruler.barHeight * barIndex) +\r\n\t\t\t\t(ruler.barSpacing / 2) +\r\n\t\t\t\t(ruler.barSpacing * barIndex);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: \"single\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"linear\", // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: \"bottom\",\r\n\t\t\t\tid: \"x-axis-0\" // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tposition: \"left\",\r\n\t\t\t\tid: \"y-axis-0\"\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + dataPoint.x + ', ' + dataPoint.y + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data[index];\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar dsIndex = me.index;\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: dsIndex,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(data, index, dsIndex, me.chart.isCombo),\r\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Trick to reset the styles of the point\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\r\n\t\t\t// Radius\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\r\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tdefaults = Chart.defaults;\r\n\r\n\tdefaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t//Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t//The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t//The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\thelpers.extend(defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function getRingIndex(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t},\r\n\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\tcircumference = opts.circumference;\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tchart.outerRadius = Math.max(minSize / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\r\n\t\t\tmeta.total = me.calculateTotal();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tdataset = me.getDataset(),\r\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n\t\t\t\tcustom = arc.custom || {},\r\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = arc._model;\r\n\t\t\t// Resets the visual styles\r\n\t\t\tthis.removeHoverStyle(arc);\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\r\n\t\thover: {\r\n\t\t\tmode: \"label\"\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: \"category\",\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tfunction lineEnabled(dataset, options) {\r\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n\t}\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar meta = me.getMeta();\r\n\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(me, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tif (lineEnabled(me.getDataset(), options) && meta.dataset._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar i, ilen, custom;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar showLine = lineEnabled(dataset, options);\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (showLine) {\r\n\t\t\t\tcustom = line.custom || {};\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = scale;\r\n\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\r\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n\t\t\t\t\t// This option gives linse the ability to span gaps\r\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : false,\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePixel()\r\n\t\t\t\t};\r\n\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t}\r\n\r\n\t\t\tif (showLine && line._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\r\n\t\t\t// Now pivot the point for animation\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].pivot();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderColor) {\r\n\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderWidth) {\r\n\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t} else if (dataset.pointBorderWidth) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (dataset.borderWidth) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar datasetIndex = me.index;\r\n\t\t\tvar value = dataset.data[index];\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\tvar x, y;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tx = xScale.getPixelForValue(value, index, datasetIndex, me.chart.isCombo);\r\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex, me.chart.isCombo);\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex, isCombo) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar sumPos = 0;\r\n\t\t\tvar sumNeg = 0;\r\n\t\t\tvar i, ds, dsMeta;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tif (ds.data[index] < 0) {\r\n\t\t\t\t\t\t\tsumNeg += ds.data[index] || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += ds.data[index] || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar area = this.chart.chartArea;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar i, ilen, point, model, controlPoints;\r\n\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoint = points[i];\r\n\t\t\t\tmodel = point._model;\r\n\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\r\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\r\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\r\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].transition(easingDecimal);\r\n\t\t\t}\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\r\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].draw();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\",\r\n\t\t\tlineArc: true // so that lines are circular\r\n\t\t},\r\n\r\n\t\t//Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\">');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</span></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join(\"\");\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\tmeta.count = me.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar animationOpts = opts.animation;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar custom = arc.custom || {};\r\n\t\t\tvar scale = chart.scale;\r\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\tvar labels = chart.data.labels;\r\n\r\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\r\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar negHalfPI = -0.5 * Math.PI;\r\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\tvar startAngle = (negHalfPI) + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\r\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\r\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? negHalfPI : startAngle,\r\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? negHalfPI : endAngle,\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Apply border and fill style\r\n\t\t\tme.removeHoverStyle(arc);\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.radar = {\r\n\t\tscale: {\r\n\t\t\ttype: \"radialLinear\"\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tChart.DatasetController.prototype.addElementAndReset.call(this, index);\r\n\r\n\t\t\t// Make sure bezier control points are updated\r\n\t\t\tthis.updateBezierControlPoints();\r\n\t\t},\r\n\r\n\t\tupdate: function update(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar custom = line.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\r\n\t\t\tvar scale = me.chart.scale;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t_loop: true,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\r\n\t\t\t\t\t// Scale\r\n\t\t\t\t\tscaleTop: scale.top,\r\n\t\t\t\t\tscaleBottom: scale.bottom,\r\n\t\t\t\t\tscaleZero: scale.getBasePosition()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t}, me);\r\n\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tme.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar scale = me.chart.scale;\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.tension, me.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\r\n\t\t\t// Transition Point Locations\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tpoint.transition(easingDecimal);\r\n\t\t\t});\r\n\r\n\t\t\t// Transition and Draw the line\r\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\r\n\r\n\t\t\t// Draw the points\r\n\t\t\thelpers.each(meta.data, function(point) {\r\n\t\t\t\tpoint.draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],21:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: \"easeOutQuart\",\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tcurrentStep: null, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: \"\", // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchartInstance.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\r\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\r\n\t\t\t\t\t// replacing an in progress animation\r\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.animations.push({\r\n\t\t\t\tchartInstance: chartInstance,\r\n\t\t\t\tanimationObject: animationObject\r\n\t\t\t});\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (me.animations.length === 1) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Cancel the animation for a given chart instance\r\n\t\tcancelAnimation: function(chartInstance) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\r\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchartInstance.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tstartDigest: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (me.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\r\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tvar i = 0;\r\n\t\t\twhile (i < me.animations.length) {\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\r\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\r\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\r\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\r\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// executed the last frame. Remove the animation.\r\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\r\n\r\n\t\t\t\t\tme.animations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\r\n\r\n\t\t\tme.dropFrames += dropFrames;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (me.animations.length > 0) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\n},{}],22:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t//Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t/**\r\n\t * @class Chart.Controller\r\n\t * The main controller of a chart.\r\n\t */\r\n\tChart.Controller = function(instance) {\r\n\r\n\t\tthis.chart = instance;\r\n\t\tthis.config = instance.config;\r\n\t\tthis.options = this.config.options = helpers.configMerge(Chart.defaults.global, Chart.defaults[this.config.type], this.config.options || {});\r\n\t\tthis.id = helpers.uid();\r\n\r\n\t\tObject.defineProperty(this, 'data', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.config.data;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//Add the chart instance to the global namespace\r\n\t\tChart.instances[this.id] = this;\r\n\r\n\t\tif (this.options.responsive) {\r\n\t\t\t// Silent resize before chart draws\r\n\t\t\tthis.resize(true);\r\n\t\t}\r\n\r\n\t\tthis.initialize();\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller */ {\r\n\r\n\t\tinitialize: function initialize() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Before init plugin notification\r\n\t\t\tChart.plugins.notify('beforeInit', [me]);\r\n\r\n\t\t\tme.bindEvents();\r\n\r\n\t\t\t// Make sure controllers are built first so that each dataset is bound to an axis before the scales\r\n\t\t\t// are built\r\n\t\t\tme.ensureScalesHaveIDs();\r\n\t\t\tme.buildOrUpdateControllers();\r\n\t\t\tme.buildScales();\r\n\t\t\tme.updateLayout();\r\n\t\t\tme.resetElements();\r\n\t\t\tme.initToolTip();\r\n\t\t\tme.update();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tChart.plugins.notify('afterInit', [me]);\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tclear: function clear() {\r\n\t\t\thelpers.clear(this.chart);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function stop() {\r\n\t\t\t// Stops any current animation loop occuring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function resize(silent) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tvar newWidth = helpers.getMaximumWidth(canvas);\r\n\t\t\tvar aspectRatio = chart.aspectRatio;\r\n\t\t\tvar newHeight = (me.options.maintainAspectRatio && isNaN(aspectRatio) === false && isFinite(aspectRatio) && aspectRatio !== 0) ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas);\r\n\r\n\t\t\tvar sizeChanged = chart.width !== newWidth || chart.height !== newHeight;\r\n\r\n\t\t\tif (!sizeChanged) {\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas.width = chart.width = newWidth;\r\n\t\t\tcanvas.height = chart.height = newHeight;\r\n\r\n\t\t\thelpers.retinaScale(chart);\r\n\r\n\t\t\t// Notify any plugins about the resize\r\n\t\t\tvar newSize = { width: newWidth, height: newHeight };\r\n\t\t\tChart.plugins.notify('resize', [me, newSize]);\r\n\r\n\t\t\t// Notify of resize\r\n\t\t\tif (me.options.onResize) {\r\n\t\t\t\tme.options.onResize(me, newSize);\r\n\t\t\t}\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\tme.stop();\r\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tensureScalesHaveIDs: function ensureScalesHaveIDs() {\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\tvar scaleOptions = options.scale;\r\n\r\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleOptions) {\r\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t */\r\n\t\tbuildScales: function buildScales() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar scales = me.scales = {};\r\n\t\t\tvar items = [];\r\n\r\n\t\t\tif (options.scales) {\r\n\t\t\t\titems = items.concat(\r\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\treturn { options: xAxisOptions, dtype: 'category' }; }),\r\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\treturn { options: yAxisOptions, dtype: 'linear' }; }));\r\n\t\t\t}\r\n\r\n\t\t\tif (options.scale) {\r\n\t\t\t\titems.push({ options: options.scale, dtype: 'radialLinear', isDefault: true });\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(items, function(item, index) {\r\n\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\tctx: me.chart.ctx,\r\n\t\t\t\t\tchart: me\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscales[scale.id] = scale;\r\n\r\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tupdateLayout: function() {\r\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function buildOrUpdateControllers() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tme.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\tresetElements: function resetElements() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tupdate: function update(animationDuration, lazy) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.plugins.notify('beforeUpdate', [me]);\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tme.tooltip._data = me.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, me);\r\n\r\n\t\t\tChart.layoutService.update(me, me.chart.width, me.chart.height);\r\n\r\n\t\t\t// Apply changes to the dataets that require the scales to have been calculated i.e BorderColor chages\r\n\t\t\tChart.plugins.notify('afterScaleUpdate', [me]);\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\tme.updateDatasets();\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tChart.plugins.notify('afterUpdate', [me]);\r\n\r\n\t\t\tme.render(animationDuration, lazy);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @method beforeDatasetsUpdate\r\n\t\t * @description Called before all datasets are updated. If a plugin returns false,\r\n\t\t * the datasets update will be cancelled until another chart update is triggered.\r\n\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t * @returns {Boolean} false to cancel the datasets update.\r\n\t\t * @memberof Chart.PluginBase\r\n\t\t * @since version 2.1.5\r\n\t\t * @instance\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * @method afterDatasetsUpdate\r\n\t\t * @description Called after all datasets have been updated. Note that this\r\n\t\t * extension will not be called if the datasets update has been cancelled.\r\n\t\t * @param {Object} instance the chart instance being updated.\r\n\t\t * @memberof Chart.PluginBase\r\n\t\t * @since version 2.1.5\r\n\t\t * @instance\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Updates all datasets unless a plugin returns false to the beforeDatasetsUpdate\r\n\t\t * extension, in which case no datasets will be updated and the afterDatasetsUpdate\r\n\t\t * notification will be skipped.\r\n\t\t * @protected\r\n\t\t * @instance\r\n\t\t */\r\n\t\tupdateDatasets: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tif (Chart.plugins.notify('beforeDatasetsUpdate', [ me ])) {\r\n\t\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\t\tme.getDatasetMeta(i).controller.update();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tChart.plugins.notify('afterDatasetsUpdate', [ me ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trender: function render(duration, lazy) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.plugins.notify('beforeRender', [me]);\r\n\r\n\t\t\tvar animationOptions = me.options.animation;\r\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation();\r\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; //60 fps\r\n\t\t\t\tanimation.easing = animationOptions.easing;\r\n\r\n\t\t\t\t// render function\r\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\r\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\r\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\r\n\r\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// user events\r\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\r\n\t\t\t\tanimation.onAnimationComplete = animationOptions.onComplete;\r\n\r\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tme.draw();\r\n\t\t\t\tif (animationOptions && animationOptions.onComplete && animationOptions.onComplete.call) {\r\n\t\t\t\t\tanimationOptions.onComplete.call(me);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\tme.clear();\r\n\r\n\t\t\tChart.plugins.notify('beforeDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(me.boxes, function(box) {\r\n\t\t\t\tbox.draw(me.chartArea);\r\n\t\t\t}, me);\r\n\t\t\tif (me.scale) {\r\n\t\t\t\tme.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\tChart.plugins.notify('beforeDatasetsDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(ease);\r\n\t\t\t\t}\r\n\t\t\t}, me, true);\r\n\r\n\t\t\tChart.plugins.notify('afterDatasetsDraw', [me, easingDecimal]);\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tme.tooltip.transition(easingDecimal).draw();\r\n\r\n\t\t\tChart.plugins.notify('afterDraw', [me, easingDecimal]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\t\t\tif (element.inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\telementsArray.push(element);\r\n\t\t\t\t\t\t\treturn elementsArray;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar eventPosition = helpers.getRelativePosition(e, me.chart);\r\n\t\t\tvar elementsArray = [];\r\n\r\n\t\t\tvar found = (function() {\r\n\t\t\t\tif (me.data.datasets) {\r\n\t\t\t\t\tfor (var i = 0; i < me.data.datasets.length; i++) {\r\n\t\t\t\t\t\tvar meta = me.getDatasetMeta(i);\r\n\t\t\t\t\t\tif (me.isDatasetVisible(i)) {\r\n\t\t\t\t\t\t\tfor (var j = 0; j < meta.data.length; j++) {\r\n\t\t\t\t\t\t\t\tif (meta.data[j].inRange(eventPosition.x, eventPosition.y)) {\r\n\t\t\t\t\t\t\t\t\treturn meta.data[j];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).call(me);\r\n\r\n\t\t\tif (!found) {\r\n\t\t\t\treturn elementsArray;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\telementsArray.push(meta.data[found._index]);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetElementsAtEventForMode: function(e, mode) {\r\n\t\t\tvar me = this;\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\treturn me.getElementAtEvent(e);\r\n\t\t\tcase 'label':\r\n\t\t\t\treturn me.getElementsAtEvent(e);\r\n\t\t\tcase 'dataset':\r\n\t\t\t\treturn me.getDatasetAtEvent(e);\r\n\t\t\tdefault:\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\tvar elementsArray = this.getElementAtEvent(e);\r\n\r\n\t\t\tif (elementsArray.length > 0) {\r\n\t\t\t\telementsArray = this.getDatasetMeta(elementsArray[0]._datasetIndex).data;\r\n\t\t\t}\r\n\r\n\t\t\treturn elementsArray;\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[me.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[me.id] = {\r\n\t\t\t\ttype: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t\tdataset: null,\r\n\t\t\t\tcontroller: null,\r\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\txAxisID: null,\r\n\t\t\t\tyAxisID: null\r\n\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\t if (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function generateLegend() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.stop();\r\n\t\t\tme.clear();\r\n\t\t\thelpers.unbindEvents(me, me.events);\r\n\t\t\thelpers.removeResizeListener(me.chart.canvas.parentNode);\r\n\r\n\t\t\t// Reset canvas height/width attributes\r\n\t\t\tvar canvas = me.chart.canvas;\r\n\t\t\tcanvas.width = me.chart.width;\r\n\t\t\tcanvas.height = me.chart.height;\r\n\r\n\t\t\t// if we scaled the canvas in response to a devicePixelRatio !== 1, we need to undo that transform here\r\n\t\t\tif (me.chart.originalDevicePixelRatio !== undefined) {\r\n\t\t\t\tme.chart.ctx.scale(1 / me.chart.originalDevicePixelRatio, 1 / me.chart.originalDevicePixelRatio);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset to the old style since it may have been changed by the device pixel ratio changes\r\n\t\t\tcanvas.style.width = me.chart.originalCanvasStyleWidth;\r\n\t\t\tcanvas.style.height = me.chart.originalCanvasStyleHeight;\r\n\r\n\t\t\tChart.plugins.notify('destroy', [me]);\r\n\r\n\t\t\tdelete Chart.instances[me.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function toBase64Image() {\r\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function initToolTip() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: me.chart,\r\n\t\t\t\t_chartInstance: me,\r\n\t\t\t\t_data: me.data,\r\n\t\t\t\t_options: me.options.tooltips\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\tbindEvents: function bindEvents() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.bindEvents(me, me.options.events, function(evt) {\r\n\t\t\t\tme.eventHandler(evt);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\tvar element, i, ilen;\r\n\r\n\t\t\tswitch (mode) {\r\n\t\t\tcase 'single':\r\n\t\t\t\telements = [ elements[0] ];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'label':\r\n\t\t\tcase 'dataset':\r\n\t\t\t\t// elements = elements;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// unsupported mode\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\telement = elements[i];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\teventHandler: function eventHandler(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar tooltip = me.tooltip;\r\n\t\t\tvar options = me.options || {};\r\n\t\t\tvar hoverOptions = options.hover;\r\n\t\t\tvar tooltipsOptions = options.tooltips;\r\n\r\n\t\t\tme.lastActive = me.lastActive || [];\r\n\t\t\tme.lastTooltipActive = me.lastTooltipActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme.active = [];\r\n\t\t\t\tme.tooltipActive = [];\r\n\t\t\t} else {\r\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode);\r\n\t\t\t\tme.tooltipActive =  me.getElementsAtEventForMode(e, tooltipsOptions.mode);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\thoverOptions.onHover.call(me, me.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\toptions.onClick.call(me, e, me.active);\r\n\t\t\t\t}\r\n\t\t\t\tif (me.legend && me.legend.handleEvent) {\r\n\t\t\t\t\tme.legend.handleEvent(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (me.lastActive.length) {\r\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in Tooltips\r\n\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\ttooltip.initialize();\r\n\t\t\t\ttooltip._active = me.tooltipActive;\r\n\t\t\t\ttooltip.update(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Hover animations\r\n\t\t\ttooltip.pivot();\r\n\r\n\t\t\tif (!me.animating) {\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tif (!helpers.arrayEquals(me.active, me.lastActive) ||\r\n\t\t\t\t\t!helpers.arrayEquals(me.tooltipActive, me.lastTooltipActive)) {\r\n\r\n\t\t\t\t\tme.stop();\r\n\r\n\t\t\t\t\tif (tooltipsOptions.enabled || tooltipsOptions.custom) {\r\n\t\t\t\t\t\ttooltip.update(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\t\tme.render(hoverOptions.animationDuration, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tme.lastActive = me.active;\r\n\t\t\tme.lastTooltipActive = me.tooltipActive;\r\n\t\t\treturn me;\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize.call(this, chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdatasetElementType: null,\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdataElementType: null,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tme.chart = chart;\r\n\t\t\tme.index = datasetIndex;\r\n\t\t\tme.linkScales();\r\n\t\t\tme.addElements();\r\n\t\t},\r\n\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\tcreateMetaDataset: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.datasetElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tcreateMetaData: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.dataElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart.chart,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\tvar metaData = meta.data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(meta, i);\r\n\t\t\t}\r\n\r\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar element = me.createMetaData(index);\r\n\t\t\tme.getMeta().data.splice(index, 0, element);\r\n\t\t\tme.updateElement(element, index, true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function buildOrUpdateElements() {\r\n\t\t\t// Handle the number of data points changing\r\n\t\t\tvar meta = this.getMeta(),\r\n\t\t\t\tmd = meta.data,\r\n\t\t\t\tnumData = this.getDataset().data.length,\r\n\t\t\t\tnumMetaData = md.length;\r\n\r\n\t\t\t// Make sure that we handle number of datapoints changing\r\n\t\t\tif (numData < numMetaData) {\r\n\t\t\t\t// Remove excess bars for data points that have been removed\r\n\t\t\t\tmd.splice(numData, numMetaData - numData);\r\n\t\t\t} else if (numData > numMetaData) {\r\n\t\t\t\t// Add new elements\r\n\t\t\t\tfor (var index = numMetaData; index < numData; ++index) {\r\n\t\t\t\t\tthis.addElementAndReset(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdate: noop,\r\n\r\n\t\tdraw: function(ease) {\r\n\t\t\tvar easingDecimal = ease || 1;\r\n\t\t\thelpers.each(this.getMeta().data, function(element, index) {\r\n\t\t\t\telement.transition(easingDecimal).draw();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(element) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tcolor = helpers.color,\r\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\n},{}],24:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n  var helpers = Chart.helpers;\r\n\r\n  Chart.elements = {};\r\n\r\n  Chart.Element = function(configuration) {\r\n    helpers.extend(this, configuration);\r\n    this.initialize.apply(this, arguments);\r\n  };\r\n\r\n  helpers.extend(Chart.Element.prototype, {\r\n\r\n    initialize: function() {\r\n      this.hidden = false;\r\n    },\r\n\r\n    pivot: function() {\r\n      var me = this;\r\n      if (!me._view) {\r\n        me._view = helpers.clone(me._model);\r\n      }\r\n      me._start = helpers.clone(me._view);\r\n      return me;\r\n    },\r\n\r\n    transition: function(ease) {\r\n      var me = this;\r\n      \r\n      if (!me._view) {\r\n        me._view = helpers.clone(me._model);\r\n      }\r\n\r\n      // No animation -> No Transition\r\n      if (ease === 1) {\r\n        me._view = me._model;\r\n        me._start = null;\r\n        return me;\r\n      }\r\n\r\n      if (!me._start) {\r\n        me.pivot();\r\n      }\r\n\r\n      helpers.each(me._model, function(value, key) {\r\n\r\n        if (key[0] === '_') {\r\n          // Only non-underscored properties\r\n        }\r\n\r\n        // Init if doesn't exist\r\n        else if (!me._view.hasOwnProperty(key)) {\r\n          if (typeof value === 'number' && !isNaN(me._view[key])) {\r\n            me._view[key] = value * ease;\r\n          } else {\r\n            me._view[key] = value;\r\n          }\r\n        }\r\n\r\n        // No unnecessary computations\r\n        else if (value === me._view[key]) {\r\n          // It's the same! Woohoo!\r\n        }\r\n\r\n        // Color transitions if possible\r\n        else if (typeof value === 'string') {\r\n          try {\r\n            var color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\r\n            me._view[key] = color.rgbString();\r\n          } catch (err) {\r\n            me._view[key] = value;\r\n          }\r\n        }\r\n        // Number transitions\r\n        else if (typeof value === 'number') {\r\n          var startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\r\n          me._view[key] = ((me._model[key] - startVal) * ease) + startVal;\r\n        }\r\n        // Everything else\r\n        else {\r\n          me._view[key] = value;\r\n        }\r\n      }, me);\r\n\r\n      return me;\r\n    },\r\n\r\n    tooltipPosition: function() {\r\n      return {\r\n        x: this._model.x,\r\n        y: this._model.y\r\n      };\r\n    },\r\n\r\n    hasValue: function() {\r\n      return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n    }\r\n  });\r\n\r\n  Chart.Element.extend = helpers.inherits;\r\n\r\n};\r\n\n},{}],25:[function(require,module,exports){\n/*global window: false */\r\n/*global document: false */\r\n\"use strict\";\r\n\r\nvar color = require(3);\r\n\r\nmodule.exports = function(Chart) {\r\n\t//Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t//-- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t} else {\r\n\t\t\t\tobjClone[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar setFn = function(value, key) { base[key] = value; };\r\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n\t\t\thelpers.each(arguments[i], setFn);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t// Scale config merging is complex. Add out own function here for that\r\n\t\t\t\t\tbase[key] = helpers.scaleMerge(base.hasOwnProperty(key) ? base[key] : {}, value);\r\n\r\n\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base.hasOwnProperty(key) ? base[key] : {}, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && helpers.isArray(base[key]) && helpers.isArray(value)) {\r\n\t\t\t\t\t// In this case we have an array of objects replacing another array. Rather than doing a strict replace,\r\n\t\t\t\t\t// merge. This allows easy scale option merging\r\n\t\t\t\t\tvar baseArray = base[key];\r\n\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\r\n\t\t\t\t\t\tif (index < baseArray.length) {\r\n\t\t\t\t\t\t\tif (typeof baseArray[index] === 'object' && baseArray[index] !== null && typeof valueObj === 'object' && valueObj !== null) {\r\n\t\t\t\t\t\t\t\t// Two objects are coming together. Do a merge of them.\r\n\t\t\t\t\t\t\t\tbaseArray[index] = helpers.configMerge(baseArray[index], valueObj);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Just overwrite in this case since there is nothing to merge\r\n\t\t\t\t\t\t\t\tbaseArray[index] = valueObj;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbaseArray.push(valueObj); // nothing to merge\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t// These properties are arrays of items\r\n\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === \"object\" && base[key] !== null && typeof value === \"object\") {\r\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = Array.prototype.indexOf?\r\n\t\tfunction(array, item) { return array.indexOf(item); } :\r\n\t\tfunction(array, item) {\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (array[i] === item) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\treturn collection.filter(filterCallback);\r\n\t\t} else {\r\n\t\t\tvar filtered = [];\r\n\r\n\t\t\thelpers.each(collection, function(item) {\r\n\t\t\t\tif (filterCallback(item)) {\r\n\t\t\t\t\tfiltered.push(item);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn filtered;\r\n\t\t}\r\n\t};\r\n\thelpers.findIndex = Array.prototype.findIndex?\r\n\t\tfunction(array, callback, scope) { return array.findIndex(callback, scope); } :\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\tscope = scope === undefined? array : scope;\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t//Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar parent = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function() {\r\n\t\t\treturn parent.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = parent.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = parent.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t})();\r\n\t//-- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn max;\r\n\t\t\t}\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t} else {\r\n\t\t\t\treturn min;\r\n\t\t\t}\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = Math.sign?\r\n\t\tfunction(x) { return Math.sign(x); } :\r\n\t\tfunction(x) {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t};\r\n\thelpers.log10 = Math.log10?\r\n\t\tfunction(x) { return Math.log10(x); } :\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (fraction <= 1.0) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction <= 2) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction <= 5) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t//Easing functions adapted from Robert Penner's easing equations\r\n\t//http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t} else {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t\t}\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\thelpers.cancelAnimFrame = (function() {\r\n\t\treturn window.cancelAnimationFrame ||\r\n\t\t\twindow.webkitCancelAnimationFrame ||\r\n\t\t\twindow.mozCancelAnimationFrame ||\r\n\t\t\twindow.oCancelAnimationFrame ||\r\n\t\t\twindow.msCancelAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t})();\r\n\t//-- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tvar touches = e.touches;\r\n\t\tif (touches && touches.length > 0) {\r\n\t\t\tmouseX = touches[0].clientX;\r\n\t\t\tmouseY = touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent(\"on\" + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent(\"on\" + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode[\"on\" + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\thelpers.bindEvents = function(chartInstance, arrayOfEvents, handler) {\r\n\t\t// Create the events object if it's not already present\r\n\t\tvar events = chartInstance.events = chartInstance.events || {};\r\n\r\n\t\thelpers.each(arrayOfEvents, function(eventName) {\r\n\t\t\tevents[eventName] = function() {\r\n\t\t\t\thandler.apply(chartInstance, arguments);\r\n\t\t\t};\r\n\t\t\thelpers.addEvent(chartInstance.chart.canvas, eventName, events[eventName]);\r\n\t\t});\r\n\t};\r\n\thelpers.unbindEvents = function(chartInstance, arrayOfEvents) {\r\n\t\tvar canvas = chartInstance.chart.canvas;\r\n\t\thelpers.each(arrayOfEvents, function(handler, eventName) {\r\n\t\t\thelpers.removeEvent(canvas, eventName, handler);\r\n\t\t});\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') != -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the given value contains an effective constraint.\r\n\t * @private\r\n\t */\r\n\tfunction isConstrainedValue(value) {\r\n\t\treturn value !== undefined &&  value !== null && value !== 'none';\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar view = document.defaultView;\r\n\t\tvar parentNode = domNode.parentNode;\r\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\treturn Math.min(\r\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t}\r\n\r\n\t\treturn 'none';\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-left')) + parseInt(helpers.getStyle(container, 'padding-right'));\r\n\t\tvar w = container.clientWidth - padding;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar padding = parseInt(helpers.getStyle(container, 'padding-top')) + parseInt(helpers.getStyle(container, 'padding-bottom'));\r\n\t\tvar h = container.clientHeight - padding;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar ctx = chart.ctx;\r\n\t\tvar canvas = chart.canvas;\r\n\t\tvar width = canvas.width;\r\n\t\tvar height = canvas.height;\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\r\n\t\tif (pixelRatio !== 1) {\r\n\t\t\tcanvas.height = height * pixelRatio;\r\n\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\tctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t\t// Store the device pixel ratio so that we can go backwards in `destroy`.\r\n\t\t\t// The devicePixelRatio changes with zoom, so there are no guarantees that it is the same\r\n\t\t\t// when destroy is called\r\n\t\t\tchart.originalDevicePixelRatio = chart.originalDevicePixelRatio || pixelRatio;\r\n\t\t}\r\n\r\n\t\tcanvas.style.width = width + 'px';\r\n\t\tcanvas.style.height = height + 'px';\r\n\t};\r\n\t//-- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + \" \" + pixelSize + \"px \" + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tvar data = cache.data = cache.data || {};\r\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tdata = cache.data = {};\r\n\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\r\n\t\t\t} else if (helpers.isArray(thing)) {\r\n\t\t\t\t// if it is an array lets measure each element\r\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\r\n\t\t\t\thelpers.each(thing, function(nestedThing) {\r\n\t\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = gc.length / 2;\r\n\t\tif (gcLen > arrayOfThings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete data[gc[i]];\r\n\t\t\t}\r\n\t\t\tgc.splice(0, gcLen);\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.measureText = function (ctx, data, gc, longest, string) {\r\n\t\tvar textWidth = data[string];\r\n\t\tif (!textWidth) {\r\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\tgc.push(string);\r\n\t\t}\r\n\t\tif (textWidth > longest) {\r\n\t\t\tlongest = textWidth;\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\r\n\t\tvar numberOfLines = 1;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\tif (helpers.isArray(thing)) {\r\n\t\t\t\tif (thing.length > numberOfLines) {\r\n\t\t\t\t\tnumberOfLines = thing.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn numberOfLines;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\thelpers.color = function(c) {\r\n\t\tif (!color) {\r\n\t\t\tconsole.log('Color.js not found!');\r\n\t\t\treturn c;\r\n\t\t}\r\n\r\n\t\t/* global CanvasGradient */\r\n\t\tif (c instanceof CanvasGradient) {\r\n\t\t\treturn color(Chart.defaults.global.defaultColor);\r\n\t\t}\r\n\r\n\t\treturn color(c);\r\n\t};\r\n\thelpers.addResizeListener = function(node, callback) {\r\n\t\t// Hide an iframe before the node\r\n\t\tvar hiddenIframe = document.createElement('iframe');\r\n\t\tvar hiddenIframeClass = 'chartjs-hidden-iframe';\r\n\r\n\t\tif (hiddenIframe.classlist) {\r\n\t\t\t// can use classlist\r\n\t\t\thiddenIframe.classlist.add(hiddenIframeClass);\r\n\t\t} else {\r\n\t\t\thiddenIframe.setAttribute('class', hiddenIframeClass);\r\n\t\t}\r\n\r\n\t\t// Set the style\r\n\t\tvar style = hiddenIframe.style;\r\n\t\tstyle.width = '100%';\r\n\t\tstyle.display = 'block';\r\n\t\tstyle.border = 0;\r\n\t\tstyle.height = 0;\r\n\t\tstyle.margin = 0;\r\n\t\tstyle.position = 'absolute';\r\n\t\tstyle.left = 0;\r\n\t\tstyle.right = 0;\r\n\t\tstyle.top = 0;\r\n\t\tstyle.bottom = 0;\r\n\r\n\t\t// Insert the iframe so that contentWindow is available\r\n\t\tnode.insertBefore(hiddenIframe, node.firstChild);\r\n\r\n\t\t(hiddenIframe.contentWindow || hiddenIframe).onresize = function() {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.removeResizeListener = function(node) {\r\n\t\tvar hiddenIframe = node.querySelector('.chartjs-hidden-iframe');\r\n\r\n\t\t// Remove the resize detect iframe\r\n\t\tif (hiddenIframe) {\r\n\t\t\thiddenIframe.parentNode.removeChild(hiddenIframe);\r\n\t\t}\r\n\t};\r\n\thelpers.isArray = Array.isArray?\r\n\t\tfunction(obj) { return Array.isArray(obj); } :\r\n\t\tfunction(obj) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t};\r\n\t//! @see http://stackoverflow.com/a/14853974\r\n\thelpers.arrayEquals = function(a0, a1) {\r\n\t\tvar i, ilen, v0, v1;\r\n\r\n\t\tif (!a0 || !a1 || a0.length != a1.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\tv0 = a0[i];\r\n\t\t\tv1 = a1[i];\r\n\r\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (v0 != v1) {\r\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\thelpers.callCallback = function(fn, args, _tArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(_tArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(color) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (color instanceof CanvasPattern) ?\r\n\t\t\tcolor :\r\n\t\t\thelpers.color(color).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n};\r\n\n},{\"3\":3}],26:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function() {\r\n\r\n\t//Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(context, config) {\r\n\t\tvar me = this;\r\n\t\tvar helpers = Chart.helpers;\r\n\t\tme.config = config;\r\n\r\n\t\t// Support a jQuery'd canvas element\r\n\t\tif (context.length && context[0].getContext) {\r\n\t\t\tcontext = context[0];\r\n\t\t}\r\n\r\n\t\t// Support a canvas domnode\r\n\t\tif (context.getContext) {\r\n\t\t\tcontext = context.getContext(\"2d\");\r\n\t\t}\r\n\r\n\t\tme.ctx = context;\r\n\t\tme.canvas = context.canvas;\r\n\r\n\t\tcontext.canvas.style.display = context.canvas.style.display || 'block';\r\n\r\n\t\t// Figure out what the size of the chart will be.\r\n\t\t// If the canvas has a specified width and height, we use those else\r\n\t\t// we look to see if the canvas node has a CSS width and height.\r\n\t\t// If there is still no height, fill the parent container\r\n\t\tme.width = context.canvas.width || parseInt(helpers.getStyle(context.canvas, 'width'), 10) || helpers.getMaximumWidth(context.canvas);\r\n\t\tme.height = context.canvas.height || parseInt(helpers.getStyle(context.canvas, 'height'), 10) || helpers.getMaximumHeight(context.canvas);\r\n\r\n\t\tme.aspectRatio = me.width / me.height;\r\n\r\n\t\tif (isNaN(me.aspectRatio) || isFinite(me.aspectRatio) === false) {\r\n\t\t\t// If the canvas has no size, try and figure out what the aspect ratio will be.\r\n\t\t\t// Some charts prefer square canvases (pie, radar, etc). If that is specified, use that\r\n\t\t\t// else use the canvas default ratio of 2\r\n\t\t\tme.aspectRatio = config.aspectRatio !== undefined ? config.aspectRatio : 2;\r\n\t\t}\r\n\r\n\t\t// Store the original style of the element so we can set it back\r\n\t\tme.originalCanvasStyleWidth = context.canvas.style.width;\r\n\t\tme.originalCanvasStyleHeight = context.canvas.style.height;\r\n\r\n\t\t// High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\r\n\t\thelpers.retinaScale(me);\r\n\r\n\t\tif (config) {\r\n\t\t\tme.controller = new Chart.Controller(me);\r\n\t\t}\r\n\r\n\t\t// Always bind this so that if the responsive state changes we still work\r\n\t\thelpers.addResizeListener(context.canvas.parentNode, function() {\r\n\t\t\tif (me.controller && me.controller.config.options.responsive) {\r\n\t\t\t\tme.controller.resize();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn me.controller ? me.controller : me;\r\n\r\n\t};\r\n\r\n\t//Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'single',\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Chart = Chart;\r\n\r\n\treturn Chart;\r\n\r\n};\r\n\n},{}],27:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\r\n\t\taddBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\tchartInstance.boxes = [];\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.push(box);\r\n\t\t},\r\n\r\n\t\tremoveBox: function(chartInstance, box) {\r\n\t\t\tif (!chartInstance.boxes) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\r\n\t\t},\r\n\r\n\t\t// The most important function\r\n\t\tupdate: function(chartInstance, width, height) {\r\n\r\n\t\t\tif (!chartInstance) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar xPadding = 0;\r\n\t\t\tvar yPadding = 0;\r\n\r\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"left\";\r\n\t\t\t});\r\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"right\";\r\n\t\t\t});\r\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"top\";\r\n\t\t\t});\r\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"bottom\";\r\n\t\t\t});\r\n\r\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\r\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\r\n\t\t\t\treturn box.options.position === \"chartArea\";\r\n\t\t\t});\r\n\r\n\t\t\t// Ensure that full width boxes are at the very top / bottom\r\n\t\t\ttopBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\t\t\tbottomBoxes.sort(function(a, b) {\r\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\r\n\t\t\t});\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - (2 * xPadding);\r\n\t\t\tvar chartHeight = height - (2 * yPadding);\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = xPadding;\r\n\t\t\tvar totalRightBoxesWidth = xPadding;\r\n\t\t\tvar totalTopBoxesHeight = yPadding;\r\n\t\t\tvar totalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\t\t\t\tright: totalRightBoxesWidth,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBoxSize) {\r\n\t\t\t\t\treturn minBoxSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = xPadding;\r\n\t\t\ttotalRightBoxesWidth = xPadding;\r\n\t\t\ttotalTopBoxesHeight = yPadding;\r\n\t\t\ttotalBottomBoxesHeight = yPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.options.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = xPadding;\r\n\t\t\tvar top = yPadding;\r\n\t\t\tvar right = 0;\r\n\t\t\tvar bottom = 0;\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.options.fullWidth ? xPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - xPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchartInstance.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chartInstance.chartArea.left;\r\n\t\t\t\tbox.top = chartInstance.chartArea.top;\r\n\t\t\t\tbox.right = chartInstance.chartArea.right;\r\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\n},{}],28:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\t\treverse: false,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.legendItems = me.options.labels.generateLabels.call(me, me.chart);\r\n\t\t\tif(me.options.reverse){\r\n\t\t\t\tme.legendItems.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = me.minSize;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar width = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar vPadding = labelOpts.padding;\r\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\r\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\r\n\t\t\t\t\tvar currentColWidth = 0;\r\n\t\t\t\t\tvar currentColHeight = 0;\r\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar itemWidth = labelOpts.boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\t// If too tall, go to new column\r\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\r\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\r\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\r\n\r\n\t\t\t\t\t\t\tcurrentColWidth = 0;\r\n\t\t\t\t\t\t\tcurrentColHeight = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get max width\r\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\r\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: itemWidth,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttotalWidth += currentColWidth;\r\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\r\n\t\t\t\t\tminSize.width += totalWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = me.width,\r\n\t\t\t\tlegendHeight = me.height,\r\n\t\t\t\tlineWidths = me.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx,\r\n\t\t\t\t\tcursor,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Canvas setup\r\n\t\t\t\tctx.textAlign = \"left\";\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tvar boxWidth = labelOpts.boxWidth,\r\n\t\t\t\t\thitboxes = me.legendHitBoxes;\r\n\r\n\t\t\t\t// current position\r\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\r\n\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\r\n\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Draw the box\r\n\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t};\r\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\r\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\r\n\t\t\t\t\t\ty: me.top,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\r\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (y + itemHeight > me.bottom) {\r\n\t\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n\t\t\t\t\t\t\ty = cursor.y = me.top;\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\r\n\r\n\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcursor.y += itemHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Handle an event\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar position = helpers.getRelativePosition(e, me.chart.chart),\r\n\t\t\t\tx = position.x,\r\n\t\t\t\ty = position.y,\r\n\t\t\t\topts = me.options;\r\n\r\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = me.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (opts.onClick) {\r\n\t\t\t\t\t\t\topts.onClick.call(me, e, me.legendItems[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register the legend plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar opts = chartInstance.options;\r\n\t\t\tvar legendOpts = opts.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tchartInstance.legend = new Chart.Legend({\r\n\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\toptions: legendOpts,\r\n\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.legend);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],29:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar noop = Chart.helpers.noop;\r\n\r\n\t/**\r\n\t * The plugin service singleton\r\n\t * @namespace Chart.plugins\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.plugins = {\r\n\t\t_plugins: [],\r\n\r\n\t\t/**\r\n\t\t * Registers the given plugin(s) if not already registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Unregisters the given plugin(s) only if registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tunregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all registered p^lugins.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tclear: function() {\r\n\t\t\tthis._plugins = [];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the number of registered plugins?\r\n\t\t * @returns {Number}\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tcount: function() {\r\n\t\t\treturn this._plugins.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns all registered plugin intances.\r\n\t\t * @returns {Array} array of plugin objects.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tgetAll: function() {\r\n\t\t\treturn this._plugins;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calls registered plugins on the specified extension, with the given args. This\r\n\t\t * method immediately returns as soon as a plugin explicitly returns false. The\r\n\t\t * returned value can be used, for instance, to interrupt the current action.\r\n\t\t * @param {String} extension the name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t\t * @param {Array} [args] extra arguments to apply to the extension call.\r\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n\t\t */\r\n\t\tnotify: function(extension, args) {\r\n\t\t\tvar plugins = this._plugins;\r\n\t\t\tvar ilen = plugins.length;\r\n\t\t\tvar i, plugin;\r\n\r\n\t\t\tfor (i=0; i<ilen; ++i) {\r\n\t\t\t\tplugin = plugins[i];\r\n\t\t\t\tif (typeof plugin[extension] === 'function') {\r\n\t\t\t\t\tif (plugin[extension].apply(plugin, args || []) === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin extension methods.\r\n\t * @interface Chart.PluginBase\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.PluginBase = Chart.Element.extend({\r\n\t\t// Called at start of chart init\r\n\t\tbeforeInit: noop,\r\n\r\n\t\t// Called at end of chart init\r\n\t\tafterInit: noop,\r\n\r\n\t\t// Called at start of update\r\n\t\tbeforeUpdate: noop,\r\n\r\n\t\t// Called at end of update\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t// Called at start of draw\r\n\t\tbeforeDraw: noop,\r\n\r\n\t\t// Called at end of draw\r\n\t\tafterDraw: noop,\r\n\r\n\t\t// Called during destroy\r\n\t\tdestroy: noop\r\n\t});\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.plugins instead\r\n\t * @namespace Chart.pluginService\r\n\t * @deprecated since version 2.1.5\r\n\t * @todo remove me at version 3\r\n\t */\r\n\tChart.pluginService = Chart.plugins;\r\n};\r\n\n},{}],30:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: \"left\",\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawBorder: true,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: \"rgba(0,0,0,0.25)\",\r\n\t\t\toffsetGridLines: false\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 10,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n\t\t\tcallback: function(value) {\r\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tme.beforeDataLimits();\r\n\t\t\tme.determineDataLimits();\r\n\t\t\tme.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tme.beforeBuildTicks();\r\n\t\t\tme.buildTicks();\r\n\t\t\tme.afterBuildTicks();\r\n\r\n\t\t\tme.beforeTickToLabelConversion();\r\n\t\t\tme.convertTicksToLabels();\r\n\t\t\tme.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tme.beforeCalculateTickRotation();\r\n\t\t\tme.calculateTickRotation();\r\n\t\t\tme.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tme.ticks = me.ticks.map(function(numericalTick, index, ticks) {\r\n\t\t\t\t\tif (me.options.ticks.userCallback) {\r\n\t\t\t\t\t\treturn me.options.ticks.userCallback(numericalTick, index, ticks);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn me.options.ticks.callback(numericalTick, index, ticks);\r\n\t\t\t\t},\r\n\t\t\t\tme);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = me.options.ticks;\r\n\r\n\t\t\t//Get the width of each grid by calculating the difference\r\n\t\t\t//between x offsets between 0 and 1.\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tcontext.font = tickLabelFont;\r\n\r\n\t\t\tvar firstWidth = context.measureText(me.ticks[0]).width;\r\n\t\t\tvar lastWidth = context.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\t\t\tvar firstRotated;\r\n\r\n\t\t\tme.labelRotation = optionTicks.minRotation || 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingLeft = 0;\r\n\r\n\t\t\tif (me.options.display) {\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tme.paddingRight = lastWidth / 2 + 3;\r\n\t\t\t\t\tme.paddingLeft = firstWidth / 2 + 3;\r\n\r\n\t\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\t\tvar cosRotation;\r\n\t\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\t\t// only the index matters for a dataset scale, but we want a consistent interface between scales\r\n\t\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t\t//Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\t\twhile (labelWidth > tickWidth && me.labelRotation < optionTicks.maxRotation) {\r\n\t\t\t\t\t\tcosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\t\tsinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\r\n\t\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\r\n\r\n\t\t\t\t\t\t// We're right aligning the text now.\r\n\t\t\t\t\t\tif (firstRotated + tickFontSize / 2 > me.yLabelWidth) {\r\n\t\t\t\t\t\t\tme.paddingLeft = firstRotated + tickFontSize / 2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tme.paddingRight = tickFontSize / 2;\r\n\r\n\t\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\r\n\t\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\t\tme.labelRotation--;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tme.labelRotation++;\r\n\t\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = me.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += (scaleLabelFontSize * 1.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\t\tif (!me.longestTextCache) {\r\n\t\t\t\t\tme.longestTextCache = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickLabelFont, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n\t\t\t\tvar lineSpace = tickFontSize * 0.5;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (Math.sin(helpers.toRadians(me.labelRotation)) * me.longestLabelWidth) + (tickFontSize * tallestLabelHeightInLines) + (lineSpace * tallestLabelHeightInLines);\r\n\r\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tme.ctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\tvar firstLabelWidth = me.ctx.measureText(me.ticks[0]).width;\r\n\t\t\t\t\tvar lastLabelWidth = me.ctx.measureText(me.ticks[me.ticks.length - 1]).width;\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.labelRotation));\r\n\t\t\t\t\tme.paddingLeft = me.labelRotation !== 0 ? (cosRotation * firstLabelWidth) + 3 : firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\tme.paddingRight = me.labelRotation !== 0 ? (sinRotation * (tickFontSize / 2)) + 3 : lastLabelWidth / 2 + 3; // when rotated\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\tvar maxLabelWidth = me.maxWidth - minSize.width;\r\n\r\n\t\t\t\t\t// Account for padding\r\n\t\t\t\t\tvar mirror = tickOpts.mirror;\r\n\t\t\t\t\tif (!mirror) {\r\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// If mirrored text is on the inside so don't expand\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (largestTextWidth < maxLabelWidth) {\r\n\t\t\t\t\t\t// We don't need all the room\r\n\t\t\t\t\t\tminSize.width += largestTextWidth;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Expand to max size\r\n\t\t\t\t\t\tminSize.width = me.maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tme.paddingTop = tickFontSize / 2;\r\n\t\t\t\t\tme.paddingBottom = tickFontSize / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === \"top\" || this.options.position === \"bottom\";\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function getRightValue(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number\r\n\t\t\tif (typeof(rawValue) === 'number' && isNaN(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === \"object\") {\r\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /*, includeOffset*/ ) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t} else {\r\n\t\t\t\treturn me.top + (decimal * me.height);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetBasePixel: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPixelForValue(\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\t// Actualy draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tif (!options.display) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = options.ticks;\r\n\t\t\tvar gridLines = options.gridLines;\r\n\t\t\tvar scaleLabel = options.scaleLabel;\r\n\r\n\t\t\tvar isRotated = me.labelRotation !== 0;\r\n\t\t\tvar skipRatio;\r\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\tvar maxTicks;\r\n\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t}\r\n\r\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(optionTicks.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(optionTicks.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(optionTicks.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tvar tl = gridLines.tickMarkLength;\r\n\r\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar scaleLabelFontSize = helpers.getValueOrDefault(scaleLabel.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar scaleLabelFontStyle = helpers.getValueOrDefault(scaleLabel.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar scaleLabelFontFamily = helpers.getValueOrDefault(scaleLabel.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar scaleLabelFont = helpers.fontString(scaleLabelFontSize, scaleLabelFontStyle, scaleLabelFontFamily);\r\n\r\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\tvar sinRotation = Math.sin(labelRotationRadians);\r\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\t\t\tvar rotatedLabelHeight = tickFontSize * sinRotation;\r\n\r\n\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\tcontext.fillStyle = tickFontColor;\r\n\r\n\t\t\tvar itemsToDraw = [];\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tskipRatio = false;\r\n\r\n                // Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\r\n                // See #2584\r\n                if (isRotated) {\r\n                    longestRotatedLabel /= 2;\r\n                }\r\n\r\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\r\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar xTickStart = options.position === \"right\" ? me.left : me.right - tl;\r\n\t\t\tvar xTickEnd = options.position === \"right\" ? me.left + tl : me.right;\r\n\t\t\tvar yTickStart = options.position === \"bottom\" ? me.top : me.bottom - tl;\r\n\t\t\tvar yTickEnd = options.position === \"bottom\" ? me.top + tl : me.bottom;\r\n\r\n\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\r\n\r\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lineWidth, lineColor;\r\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\r\n\t\t\t\t} else  {\r\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Common properties\r\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n\t\t\t\tvar textAlign, textBaseline = 'middle';\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tif (!isRotated) {\r\n\t\t\t\t\t\ttextBaseline = options.position === 'top' ? 'bottom' : 'top';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextAlign = isRotated ? 'right' : 'center';\r\n\r\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\t\t\t\t\tlabelY = (isRotated) ? me.top + 12 : options.position === 'top' ? me.bottom - tl : me.top + tl;\r\n\r\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\r\n\t\t\t\t\tty1 = yTickStart;\r\n\t\t\t\t\tty2 = yTickEnd;\r\n\t\t\t\t\ty1 = chartArea.top;\r\n\t\t\t\t\ty2 = chartArea.bottom;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (options.position === 'left') {\r\n\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\tlabelX = me.right + optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabelX = me.right - optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// right side\r\n\t\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\t\tlabelX = me.left - optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'right';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlabelX = me.left + optionTicks.padding;\r\n\t\t\t\t\t\t\ttextAlign = 'left';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\r\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\r\n\t\t\t\t\ttx1 = xTickStart;\r\n\t\t\t\t\ttx2 = xTickEnd;\r\n\t\t\t\t\tx1 = chartArea.left;\r\n\t\t\t\t\tx2 = chartArea.right;\r\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemsToDraw.push({\r\n\t\t\t\t\ttx1: tx1,\r\n\t\t\t\t\tty1: ty1,\r\n\t\t\t\t\ttx2: tx2,\r\n\t\t\t\t\tty2: ty2,\r\n\t\t\t\t\tx1: x1,\r\n\t\t\t\t\ty1: y1,\r\n\t\t\t\t\tx2: x2,\r\n\t\t\t\t\ty2: y2,\r\n\t\t\t\t\tlabelX: labelX,\r\n\t\t\t\t\tlabelY: labelY,\r\n\t\t\t\t\tglWidth: lineWidth,\r\n\t\t\t\t\tglColor: lineColor,\r\n\t\t\t\t\trotation: -1 * labelRotationRadians,\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\ttextBaseline: textBaseline,\r\n\t\t\t\t\ttextAlign: textAlign\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\r\n\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\r\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\r\n\r\n\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\r\n\t\t\t\t\tcontext.font = tickLabelFont;\r\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\r\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\r\n\r\n\t\t\t\t\tvar label = itemToDraw.label;\r\n\t\t\t\t\tif (helpers.isArray(label)) {\r\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\r\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\r\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\r\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\r\n\t\t\t\t\t\t\ty += (tickFontSize * 1.5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t// Draw the scale label\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar rotation = 0;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFontSize / 2) : me.top + (scaleLabelFontSize / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFontSize / 2) : me.right - (scaleLabelFontSize / 2);\r\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\tcontext.textAlign = 'center';\r\n\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\tcontext.font = scaleLabelFont;\r\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\r\n\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n\t\t\t\tvar x1 = me.left,\r\n\t\t\t\t\tx2 = me.right,\r\n\t\t\t\t\ty1 = me.top,\r\n\t\t\t\t\ty2 = me.bottom;\r\n\r\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\r\n\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],31:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chartInstance) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\n},{}],32:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\r\n\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tvar noop = helpers.noop;\r\n\tChart.Title = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.extend(me, config);\r\n\t\t\tme.options = helpers.configMerge(Chart.defaults.global.title, config.options);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tme.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: function () {\r\n\t\t\tvar chartOpts = this.chart.options;\r\n\t\t\tif (chartOpts && chartOpts.title) {\r\n\t\t\t\tthis.options = helpers.configMerge(Chart.defaults.global.title, chartOpts.title);\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = me.minSize;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === \"top\" || pos === \"bottom\";\r\n\t\t},\r\n\r\n\t\t// Actualy draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX,\r\n\t\t\t\t\ttitleY,\r\n\t\t\t\t\ttop = me.top,\r\n\t\t\t\t\tleft = me.left,\r\n\t\t\t\t\tbottom = me.bottom,\r\n\t\t\t\t\tright = me.right;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t// Register the title plugin\r\n\tChart.plugins.register({\r\n\t\tbeforeInit: function(chartInstance) {\r\n\t\t\tvar opts = chartInstance.options;\r\n\t\t\tvar titleOpts = opts.title;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\tchartInstance.titleBlock = new Chart.Title({\r\n\t\t\t\t\tctx: chartInstance.chart.ctx,\r\n\t\t\t\t\toptions: titleOpts,\r\n\t\t\t\t\tchart: chartInstance\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.layoutService.addBox(chartInstance, chartInstance.titleBlock);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],33:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'single',\r\n\t\tbackgroundColor: \"rgba(0,0,0,0.8)\",\r\n\t\ttitleFontStyle: \"bold\",\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleFontColor: \"#fff\",\r\n\t\ttitleAlign: \"left\",\r\n\t\tbodySpacing: 2,\r\n\t\tbodyFontColor: \"#fff\",\r\n\t\tbodyAlign: \"left\",\r\n\t\tfooterFontStyle: \"bold\",\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterFontColor: \"#fff\",\r\n\t\tfooterAlign: \"left\",\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tyAlign : 'center',\r\n\t\txAlign : 'center',\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\t\t\t\tvar labels = data.labels;\r\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tvar item = tooltipItems[0];\r\n\r\n\t\t\t\t\tif (item.xLabel) {\r\n\t\t\t\t\t\ttitle = item.xLabel;\r\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\r\n\t\t\t\t\t\ttitle = labels[item.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\r\n\t\t\t},\r\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\r\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\r\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\r\n\t\t\t\tvar view = activeElement._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tborderColor: view.borderColor,\r\n\t\t\t\t\tbackgroundColor: view.backgroundColor\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\t//base = base.concat(toPush);\r\n\t\t\t\tArray.prototype.push.apply(base, toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\tfunction getAveragePosition(elements) {\r\n\t\tif (!elements.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar i, len;\r\n\t\tvar xPositions = [];\r\n\t\tvar yPositions = [];\r\n\r\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\tvar el = elements[i];\r\n\t\t\tif (el && el.hasValue()){\r\n\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\txPositions.push(pos.x);\r\n\t\t\t\tyPositions.push(pos.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar x = 0,\r\n\t\t\ty = 0;\r\n\t\tfor (i = 0, len - xPositions.length; i < len; ++i) {\r\n\t\t\tx += xPositions[i];\r\n\t\t\ty += yPositions[i];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round(x / xPositions.length),\r\n\t\t\ty: Math.round(y / xPositions.length)\r\n\t\t};\r\n\t}\r\n\r\n\t// Private helper to create a tooltip iteam model\r\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n\t// @return : new tooltip item\r\n\tfunction createTooltipItem(element) {\r\n\t\tvar xScale = element._xScale;\r\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\tvar index = element._index,\r\n\t\t\tdatasetIndex = element._datasetIndex;\r\n\r\n\t\treturn {\r\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tindex: index,\r\n\t\t\tdatasetIndex: datasetIndex\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar tooltipOpts = me._options;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\thelpers.extend(me, {\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Positioning\r\n\t\t\t\t\txPadding: tooltipOpts.xPadding,\r\n\t\t\t\t\tyPadding: tooltipOpts.yPadding,\r\n\t\t\t\t\txAlign : tooltipOpts.yAlign,\r\n\t\t\t\t\tyAlign : tooltipOpts.xAlign,\r\n\r\n\t\t\t\t\t// Body\r\n\t\t\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\r\n\t\t\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\r\n\t\t\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tbodySpacing: tooltipOpts.bodySpacing,\r\n\r\n\t\t\t\t\t// Title\r\n\t\t\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\r\n\t\t\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_titleAlign: tooltipOpts.titleAlign,\r\n\t\t\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\r\n\t\t\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n\t\t\t\t\t// Footer\r\n\t\t\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\r\n\t\t\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\t_footerAlign: tooltipOpts.footerAlign,\r\n\t\t\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\r\n\t\t\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tcaretSize: tooltipOpts.caretSize,\r\n\t\t\t\t\tcornerRadius: tooltipOpts.cornerRadius,\r\n\t\t\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar callbacks = opts.callbacks;\r\n\r\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\r\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\t\t\tvar bodyItems = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\tvar bodyItem = {\r\n\t\t\t\t\tbefore: [],\r\n\t\t\t\t\tlines: [],\r\n\t\t\t\t\tafter: []\r\n\t\t\t\t};\r\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n\t\t\t\tbodyItems.push(bodyItem);\r\n\t\t\t});\r\n\r\n\t\t\treturn bodyItems;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\r\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\r\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar model = me._model;\r\n\t\t\tvar active = me._active;\r\n\r\n\t\t\tvar data = me._data;\r\n\t\t\tvar chartInstance = me._chartInstance;\r\n\r\n\t\t\tvar i, len;\r\n\r\n\t\t\tif (active.length) {\r\n\t\t\t\tmodel.opacity = 1;\r\n\r\n\t\t\t\tvar labelColors = [],\r\n\t\t\t\t\ttooltipPosition = getAveragePosition(active);\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\r\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.itemSort) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.sort(opts.itemSort);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If there is more than one item, show color items\r\n\t\t\t\tif (active.length > 1) {\r\n\t\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\thelpers.extend(model, {\r\n\t\t\t\t\ttitle: me.getTitle(tooltipItems, data),\r\n\t\t\t\t\tbeforeBody: me.getBeforeBody(tooltipItems, data),\r\n\t\t\t\t\tbody: me.getBody(tooltipItems, data),\r\n\t\t\t\t\tafterBody: me.getAfterBody(tooltipItems, data),\r\n\t\t\t\t\tfooter: me.getFooter(tooltipItems, data),\r\n\t\t\t\t\tx: Math.round(tooltipPosition.x),\r\n\t\t\t\t\ty: Math.round(tooltipPosition.y),\r\n\t\t\t\t\tcaretPadding: helpers.getValueOrDefault(tooltipPosition.padding, 2),\r\n\t\t\t\t\tlabelColors: labelColors\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// We need to determine alignment of\r\n\t\t\t\tvar tooltipSize = me.getTooltipSize(model);\r\n\t\t\t\tme.determineAlignment(tooltipSize); // Smart Tooltip placement to stay on the canvas\r\n\r\n\t\t\t\thelpers.extend(model, me.getBackgroundPoint(model, tooltipSize));\r\n\t\t\t} else {\r\n\t\t\t\tme._model.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed && opts.custom) {\r\n\t\t\t\topts.custom.call(me, model);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\t\tgetTooltipSize: function getTooltipSize(vm) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\r\n\t\t\tvar size = {\r\n\t\t\t\theight: vm.yPadding * 2, // Tooltip Padding\r\n\t\t\t\twidth: 0\r\n\t\t\t};\r\n\r\n\t\t\t// Count of all lines in the body\r\n\t\t\tvar body = vm.body;\r\n\t\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n\t\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n\t\t\t}, 0);\r\n\t\t\tcombinedBodyLength += vm.beforeBody.length + vm.afterBody.length;\r\n\r\n\t\t\tvar titleLineCount = vm.title.length;\r\n\t\t\tvar footerLineCount = vm.footer.length;\r\n\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\tbodyFontSize = vm.bodyFontSize,\r\n\t\t\t\tfooterFontSize = vm.footerFontSize;\r\n\r\n\t\t\tsize.height += titleLineCount * titleFontSize; // Title Lines\r\n\t\t\tsize.height += (titleLineCount - 1) * vm.titleSpacing; // Title Line Spacing\r\n\t\t\tsize.height += titleLineCount ? vm.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\t\tsize.height += combinedBodyLength * bodyFontSize; // Body Lines\r\n\t\t\tsize.height += combinedBodyLength ? (combinedBodyLength - 1) * vm.bodySpacing : 0; // Body Line Spacing\r\n\t\t\tsize.height += footerLineCount ? vm.footerMarginTop : 0; // Footer Margin\r\n\t\t\tsize.height += footerLineCount * (footerFontSize); // Footer Lines\r\n\t\t\tsize.height += footerLineCount ? (footerLineCount - 1) * vm.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t\t// Title width\r\n\t\t\tvar widthPadding = 0;\r\n\t\t\tvar maxLineWidth = function(line) {\r\n\t\t\t\tsize.width = Math.max(size.width, ctx.measureText(line).width + widthPadding);\r\n\t\t\t};\r\n\r\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\t\t\thelpers.each(vm.title, maxLineWidth);\r\n\r\n\t\t\t// Body width\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\t\t\thelpers.each(vm.beforeBody.concat(vm.afterBody), maxLineWidth);\r\n\r\n\t\t\t// Body lines may include some extra width due to the color box\r\n\t\t\twidthPadding = body.length > 1 ? (bodyFontSize + 2) : 0;\r\n\t\t\thelpers.each(body, function(bodyItem) {\r\n\t\t\t\thelpers.each(bodyItem.before, maxLineWidth);\r\n\t\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\r\n\t\t\t\thelpers.each(bodyItem.after, maxLineWidth);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0\r\n\t\t\twidthPadding = 0;\r\n\r\n\t\t\t// Footer width\r\n\t\t\tctx.font = helpers.fontString(footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\t\t\thelpers.each(vm.footer, maxLineWidth);\r\n\r\n\t\t\t// Add padding\r\n\t\t\tsize.width += 2 * vm.xPadding;\r\n\r\n\t\t\treturn size;\r\n\t\t},\r\n\t\tdetermineAlignment: function determineAlignment(size) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar model = me._model;\r\n\t\t\tvar chart = me._chart;\r\n\t\t\tvar chartArea = me._chartInstance.chartArea;\r\n\r\n\t\t\tif (model.y < size.height) {\r\n\t\t\t\tmodel.yAlign = 'top';\r\n\t\t\t} else if (model.y > (chart.height - size.height)) {\r\n\t\t\t\tmodel.yAlign = 'bottom';\r\n\t\t\t}\r\n\r\n\t\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\t\tvar midX = (chartArea.left + chartArea.right) / 2;\r\n\t\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\t\tif (model.yAlign === 'center') {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= midX;\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x > midX;\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tlf = function(x) {\r\n\t\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t\t};\r\n\t\t\t\trf = function(x) {\r\n\t\t\t\t\treturn x >= (chart.width - (size.width / 2));\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tolf = function(x) {\r\n\t\t\t\treturn x + size.width > chart.width;\r\n\t\t\t};\r\n\t\t\torf = function(x) {\r\n\t\t\t\treturn x - size.width < 0;\r\n\t\t\t};\r\n\t\t\tyf = function(y) {\r\n\t\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t\t};\r\n\r\n\t\t\tif (lf(model.x)) {\r\n\t\t\t\tmodel.xAlign = 'left';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\t\tif (olf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t}\r\n\t\t\t} else if (rf(model.x)) {\r\n\t\t\t\tmodel.xAlign = 'right';\r\n\r\n\t\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\t\tif (orf(model.x)) {\r\n\t\t\t\t\tmodel.xAlign = 'center';\r\n\t\t\t\t\tmodel.yAlign = yf(model.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetBackgroundPoint: function getBackgroundPoint(vm, size) {\r\n\t\t\t// Background Position\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\tvar caretSize = vm.caretSize,\r\n\t\t\t\tcaretPadding = vm.caretPadding,\r\n\t\t\t\tcornerRadius = vm.cornerRadius,\r\n\t\t\t\txAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign,\r\n\t\t\t\tpaddingAndSize = caretSize + caretPadding,\r\n\t\t\t\tradiusAndPadding = cornerRadius + caretPadding;\r\n\r\n\t\t\tif (xAlign === 'right') {\r\n\t\t\t\tpt.x -= size.width;\r\n\t\t\t} else if (xAlign === 'center') {\r\n\t\t\t\tpt.x -= (size.width / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (yAlign === 'top') {\r\n\t\t\t\tpt.y += paddingAndSize;\r\n\t\t\t} else if (yAlign === 'bottom') {\r\n\t\t\t\tpt.y -= size.height + paddingAndSize;\r\n\t\t\t} else {\r\n\t\t\t\tpt.y -= (size.height / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tpt.x += paddingAndSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tpt.x -= paddingAndSize;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tpt.x -= radiusAndPadding;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tpt.x += radiusAndPadding;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pt;\r\n\t\t},\r\n\t\tdrawCaret: function drawCaret(tooltipPoint, size, opacity, caretPadding) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\t\t\tvar caretSize = vm.caretSize;\r\n\t\t\tvar cornerRadius = vm.cornerRadius;\r\n\t\t\tvar xAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign;\r\n\t\t\tvar ptX = tooltipPoint.x,\r\n\t\t\t\tptY = tooltipPoint.y;\r\n\t\t\tvar width = size.width,\r\n\t\t\t\theight = size.height;\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\t// Left or right side\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = ptX + width;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ty2 = ptY + (height / 2);\r\n\t\t\t\ty1 = y2 - caretSize;\r\n\t\t\t\ty3 = y2 + caretSize;\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX + cornerRadius;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x2 - caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = ptX + (width / 2);\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\ty1 = ptY;\r\n\t\t\t\t\ty2 = y1 - caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = ptY + height;\r\n\t\t\t\t\ty2 = y1 + caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.lineTo(x3, y3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t},\r\n\t\tdrawTitle: function drawTitle(pt, vm, ctx, opacity) {\r\n\t\t\tvar title = vm.title;\r\n\r\n\t\t\tif (title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\r\n\r\n\t\t\t\tvar titleFontColor = helpers.color(vm.titleFontColor);\r\n\t\t\t\tctx.fillStyle = titleFontColor.alpha(opacity * titleFontColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\tvar i, len;\r\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\r\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\r\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function drawBody(pt, vm, ctx, opacity) {\r\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\r\n\t\t\tvar bodySpacing = vm.bodySpacing;\r\n\t\t\tvar body = vm.body;\r\n\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\tvar bodyFontColor = helpers.color(vm.bodyFontColor);\r\n\t\t\tvar textColor = bodyFontColor.alpha(opacity * bodyFontColor.alpha()).rgbString();\r\n\t\t\tctx.fillStyle = textColor;\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\tvar xLinePadding = 0;\r\n\t\t\tvar fillLineOfText = function(line) {\r\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\r\n\t\t\t};\r\n\r\n\t\t\t// Before body lines\r\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n\t\t\tvar drawColorBoxes = body.length > 1;\r\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n\t\t\t// Draw body lines now\r\n\t\t\thelpers.each(body, function(bodyItem, i) {\r\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\r\n\r\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\r\n\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\tif (drawColorBoxes) {\r\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.legendColorBackground).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\tctx.strokeStyle = helpers.color(vm.labelColors[i].borderColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\tctx.fillStyle = helpers.color(vm.labelColors[i].backgroundColor).alpha(opacity).rgbaString();\r\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillLineOfText(line);\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0 for after body\r\n\t\t\txLinePadding = 0;\r\n\r\n\t\t\t// After body lines\r\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\r\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function drawFooter(pt, vm, ctx, opacity) {\r\n\t\t\tvar footer = vm.footer;\r\n\r\n\t\t\tif (footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = \"top\";\r\n\r\n\t\t\t\tvar footerFontColor = helpers.color(vm.footerFontColor);\r\n\t\t\t\tctx.fillStyle = footerFontColor.alpha(opacity * footerFontColor.alpha()).rgbString();\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(footer, function(line) {\r\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdraw: function draw() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tooltipSize = this.getTooltipSize(vm);\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\tif (this._options.enabled) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tvar bgColor = helpers.color(vm.backgroundColor);\r\n\t\t\t\tctx.fillStyle = bgColor.alpha(opacity * bgColor.alpha()).rgbString();\r\n\t\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\r\n\t\t\t\tctx.fill();\r\n\r\n\t\t\t\t// Draw Caret\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity, vm.caretPadding);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],34:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart, moment) {\r\n\r\n  var helpers = Chart.helpers,\r\n    globalOpts = Chart.defaults.global;\r\n\r\n  globalOpts.elements.arc = {\r\n    backgroundColor: globalOpts.defaultColor,\r\n    borderColor: \"#fff\",\r\n    borderWidth: 2\r\n  };\r\n\r\n  Chart.elements.Arc = Chart.Element.extend({\r\n    inLabelRange: function(mouseX) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    inRange: function(chartX, chartY) {\r\n      var vm = this._view;\r\n\r\n      if (vm) {\r\n        var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n            x: chartX,\r\n            y: chartY\r\n          }),\r\n          angle = pointRelativePosition.angle,\r\n          distance = pointRelativePosition.distance;\r\n\r\n        //Sanitise angle range\r\n        var startAngle = vm.startAngle;\r\n        var endAngle = vm.endAngle;\r\n        while (endAngle < startAngle) {\r\n          endAngle += 2.0 * Math.PI;\r\n        }\r\n        while (angle > endAngle) {\r\n          angle -= 2.0 * Math.PI;\r\n        }\r\n        while (angle < startAngle) {\r\n          angle += 2.0 * Math.PI;\r\n        }\r\n\r\n        //Check if within the range of the open/close angle\r\n        var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n          withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n        return (betweenAngles && withinRadius);\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    tooltipPosition: function() {\r\n      var vm = this._view;\r\n\r\n      var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n        rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n      return {\r\n        x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n        y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n      };\r\n    },\r\n    draw: function() {\r\n\r\n      var ctx = this._chart.ctx,\r\n        vm = this._view,\r\n        sA = vm.startAngle,\r\n        eA = vm.endAngle;\r\n\r\n      ctx.beginPath();\r\n\r\n      ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n      ctx.closePath();\r\n      ctx.strokeStyle = vm.borderColor;\r\n      ctx.lineWidth = vm.borderWidth;\r\n\r\n      ctx.fillStyle = vm.backgroundColor;\r\n\r\n      ctx.fill();\r\n      ctx.lineJoin = 'bevel';\r\n\r\n      if (vm.borderWidth) {\r\n        ctx.stroke();\r\n      }\r\n    }\r\n  });\r\n};\r\n\n},{}],35:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: globalDefaults.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tfill: true // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tlineToNextPoint: function(previousPoint, point, nextPoint, skipHandler, previousSkipHandler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tvar spanGaps = me._view ? me._view.spanGaps : false;\r\n\r\n\t\t\tif (point._view.skip && !spanGaps) {\r\n\t\t\t\tskipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t} else if (previousPoint._view.skip && !spanGaps) {\r\n\t\t\t\tpreviousSkipHandler.call(me, previousPoint, point, nextPoint);\r\n\t\t\t} else if (point._view.tension === 0) {\r\n\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t} else {\r\n\t\t\t\t// Line between points\r\n\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextX,\r\n\t\t\t\t\tpreviousPoint._view.controlPointNextY,\r\n\t\t\t\t\tpoint._view.controlPointPreviousX,\r\n\t\t\t\t\tpoint._view.controlPointPreviousY,\r\n\t\t\t\t\tpoint._view.x,\r\n\t\t\t\t\tpoint._view.y\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tvar vm = me._view;\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tvar first = me._children[0];\r\n\t\t\tvar last = me._children[me._children.length - 1];\r\n\r\n\t\t\tfunction loopBackToStart(drawLineToCenter) {\r\n\t\t\t\tif (!first._view.skip && !last._view.skip) {\r\n\t\t\t\t\t// Draw a bezier line from last to first\r\n\t\t\t\t\tctx.bezierCurveTo(\r\n\t\t\t\t\t\tlast._view.controlPointNextX,\r\n\t\t\t\t\t\tlast._view.controlPointNextY,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousX,\r\n\t\t\t\t\t\tfirst._view.controlPointPreviousY,\r\n\t\t\t\t\t\tfirst._view.x,\r\n\t\t\t\t\t\tfirst._view.y\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (drawLineToCenter) {\r\n\t\t\t\t\t// Go to center\r\n\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// If we had points and want to fill this line, do so.\r\n\t\t\tif (me._children.length > 0 && vm.fill) {\r\n\t\t\t\t// Draw the background first (so the border is always on top)\r\n\t\t\t\tctx.beginPath();\r\n\r\n\t\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\r\n\t\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\tctx.moveTo(vm.scaleZero.x, vm.scaleZero.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.moveTo(point._view.x, vm.scaleZero);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (point._view.skip) {\r\n\t\t\t\t\t\t\tif (!me._loop) {\r\n\t\t\t\t\t\t\t\tctx.moveTo(next._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\t\tif (me._loop) {\r\n\t\t\t\t\t\t\t\t// Go to center\r\n\t\t\t\t\t\t\t\tctx.lineTo(me._view.scaleZero.x, me._view.scaleZero.y);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tctx.lineTo(previousPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, me._view.scaleZero);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t\t// If we skipped the last point, draw a line to ourselves so that the fill is nice\r\n\t\t\t\t\t\t\tctx.lineTo(point._view.x, point._view.y);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\r\n\t\t\t\t// For radial scales, loop back around to the first point\r\n\t\t\t\tif (me._loop) {\r\n\t\t\t\t\tloopBackToStart(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\r\n\t\t\t\t\tctx.lineTo(me._children[me._children.length - 1]._view.x, vm.scaleZero);\r\n\t\t\t\t\tctx.lineTo(me._children[0]._view.x, vm.scaleZero);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\r\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\t// Now draw the line between all the points with any borders\r\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\thelpers.each(me._children, function(point, index) {\r\n\t\t\t\tvar previous = helpers.previousItem(me._children, index);\r\n\t\t\t\tvar next = helpers.nextItem(me._children, index);\r\n\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.lineToNextPoint(previous, point, next, function(previousPoint, point, nextPoint) {\r\n\t\t\t\t\t\tctx.moveTo(nextPoint._view.x, nextPoint._view.y);\r\n\t\t\t\t\t}, function(previousPoint, point) {\r\n\t\t\t\t\t\t// If we skipped the last point, move up to our point preventing a line from being drawn\r\n\t\t\t\t\t\tctx.moveTo(point._view.x, point._view.y);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (me._loop && me._children.length > 0) {\r\n\t\t\t\tloopBackToStart();\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\n},{}],36:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global,\r\n\t\tdefaultColor = globalOpts.defaultColor;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tvar radius = vm.radius;\r\n\t\t\tvar x = vm.x;\r\n\t\t\tvar y = vm.y;\r\n\t\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof pointStyle === 'object') {\r\n\t\t\t\ttype = pointStyle.toString();\r\n\t\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t\tswitch (pointStyle) {\r\n\t\t\t// Default includes circle\r\n\t\t\tdefault:\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triangle':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rect':\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.fillRect(x - size, y - size, 2 * size,  2 * size);\r\n\t\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rectRot':\r\n\t\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x - size, y);\r\n\t\t\t\tctx.lineTo(x, y + size);\r\n\t\t\t\tctx.lineTo(x + size, y);\r\n\t\t\t\tctx.lineTo(x, y - size);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'cross':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'crossRot':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'star':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'line':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dash':\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(x, y);\r\n\t\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\t\tctx.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t});\r\n};\r\n\n},{}],37:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar halfWidth = vm.width / 2,\r\n\t\t\t\tleftX = vm.x - halfWidth,\r\n\t\t\t\trightX = vm.x + halfWidth,\r\n\t\t\t\ttop = vm.base - (vm.base - vm.y),\r\n\t\t\t\thalfStroke = vm.borderWidth / 2;\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tleftX += halfStroke;\r\n\t\t\t\trightX -= halfStroke;\r\n\t\t\t\ttop += halfStroke;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[leftX, vm.base],\r\n\t\t\t\t[leftX, top],\r\n\t\t\t\t[rightX, top],\r\n\t\t\t\t[rightX, vm.base]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom' \r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(vm.borderSkipped, 0);\r\n\t\t\tif (startCorner === -1)\r\n\t\t\t\tstartCorner = 0;\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tctx.moveTo.apply(ctx, cornerAt(0));\r\n\t\t\tfor (var i = 1; i < 4; i++)\r\n\t\t\t\tctx.lineTo.apply(ctx, cornerAt(i));\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? \r\n\t\t\t\t\t(vm.y < vm.base ? \r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.y && mouseY <= vm.base) :\r\n\t\t\t\t\t\t(mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) && (mouseY >= vm.base && mouseY <= vm.y)) :\r\n\t\t\t\t\tfalse;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? (mouseX >= vm.x - vm.width / 2 && mouseX <= vm.x + vm.width / 2) : false;\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\n},{}],38:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\"\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t// Implement this so that \r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.minIndex = 0;\r\n\t\t\tme.maxIndex = me.chart.data.labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (me.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.min);\r\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(me.chart.data.labels, me.options.ticks.max);\r\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tme.min = me.chart.data.labels[me.minIndex];\r\n\t\t\tme.max = me.chart.data.labels[me.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === me.chart.data.labels.length - 1) ? me.chart.data.labels : me.chart.data.labels.slice(me.minIndex, me.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn this.ticks[index];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueWidth = innerWidth / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex)) + me.paddingLeft;\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.left + Math.round(widthOffset);\r\n\t\t\t} else {\r\n\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvar valueHeight = innerHeight / offsetAmt;\r\n\t\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex)) + me.paddingTop;\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar value;\r\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = me.isHorizontal();\r\n\t\t\tvar innerDimension = horz ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\tvar valueDimension = innerDimension / offsetAmt;\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\t\t\tpixel -= horz ? me.paddingLeft : me.paddingTop;\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType(\"category\", DatasetScale, defaultConfig);\r\n\r\n};\n},{}],39:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\t\tticks: {\r\n\t\t\tcallback: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.LinearScaleBase.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// First Calculate the range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\t\t\t\tvar hasPositiveValues = false;\r\n\t\t\t\tvar hasNegativeValues = false;\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\tvaluesPerType[meta.type] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerType[meta.type].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerType[meta.type].negativeValues;\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\t\t\t\thasNegativeValues = true;\r\n\t\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\thasPositiveValues = true;\r\n\t\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tthis.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar maxTicks;\r\n\t\t\tvar me = this;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\treturn maxTicks;\r\n\t\t},\r\n\t\t// Called after the ticks are built. We need \r\n\t\thandleDirectionalChanges: function() {\r\n\t\t\tif (!this.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t//      this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar me = this;\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar start = me.start;\r\n\r\n\t\t\tvar rightValue = +me.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar range = me.end - start;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\tpixel = me.left + (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel + paddingLeft);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + paddingBottom);\r\n\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar innerDimension = isHorizontal ? me.width - (paddingLeft + me.paddingRight) : me.height - (me.paddingTop + paddingBottom);\r\n\t\t\tvar offset = (isHorizontal ? pixel - me.left - paddingLeft : me.bottom - paddingBottom - pixel) / innerDimension;\r\n\t\t\treturn me.start + ((me.end - me.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index], null, null, includeOffset);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"linear\", LinearScale, defaultConfig);\r\n\r\n};\n},{}],40:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tnoop = helpers.noop;\r\n\r\n\tChart.LinearScaleBase = Chart.Scale.extend({\r\n\t\thandleTickRangeOptions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(me.min);\r\n\t\t\t\tvar maxSign = helpers.sign(me.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tme.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the botttom down to 0\r\n\t\t\t\t\tme.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\tme.min = tickOpts.min;\r\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\tme.max = tickOpts.max;\r\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tme.max++;\r\n\r\n\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\tme.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTickLimit: noop,\r\n\t\thandleDirectionalChanges: noop,\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar ticks = me.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar maxTicks = me.getTickLimit();\r\n\r\n\t\t\t// Make sure we always have at least 2 ticks\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t// for details.\r\n\r\n\t\t\tvar spacing;\r\n\t\t\tvar fixedStepSizeSet = (tickOpts.fixedStepSize && tickOpts.fixedStepSize > 0) || (tickOpts.stepSize && tickOpts.stepSize > 0);\r\n\t\t\tif (fixedStepSizeSet) {\r\n\t\t\t\tspacing = getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize);\r\n\t\t\t} else {\r\n\t\t\t\tvar niceRange = helpers.niceNum(me.max - me.min, false);\r\n\t\t\t\tspacing = helpers.niceNum(niceRange / (maxTicks - 1), true);\r\n\t\t\t}\r\n\t\t\tvar niceMin = Math.floor(me.min / spacing) * spacing;\r\n\t\t\tvar niceMax = Math.ceil(me.max / spacing) * spacing;\r\n\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\r\n\t\t\t// If very close to our rounded value, use it.\r\n\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t} else {\r\n\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t}\r\n\r\n\t\t\t// Put the values into the ticks array\r\n\t\t\tticks.push(tickOpts.min !== undefined ? tickOpts.min : niceMin);\r\n\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t}\r\n\t\t\tticks.push(tickOpts.max !== undefined ? tickOpts.max : niceMax);\r\n\r\n\t\t\tme.handleDirectionalChanges();\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\r\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\r\n\t\t},\r\n\t});\r\n};\n},{}],41:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"left\",\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: function(value, index, arr) {\r\n\t\t\t\tvar remain = value / (Math.pow(10, Math.floor(helpers.log10(value))));\r\n\r\n\t\t\t\tif (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === arr.length - 1) {\r\n\t\t\t\t\treturn value.toExponential();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate Range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tif (opts.stacked) {\r\n\t\t\t\tvar valuesPerType = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\tif (valuesPerType[meta.type] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerType[meta.type] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerType[meta.type];\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerType, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\r\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\r\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.min = 1;\r\n\t\t\t\t\tme.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\t// Reset the ticks array. Later on, we will draw a grid line at these positions\r\n\t\t\t// The array simply contains the numerical value of the spots where ticks will be\r\n\t\t\tvar ticks = me.ticks = [];\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph\r\n\r\n\t\t\tvar tickVal = getValueOrDefault(tickOpts.min, Math.pow(10, Math.floor(helpers.log10(me.min))));\r\n\r\n\t\t\twhile (tickVal < me.max) {\r\n\t\t\t\tticks.push(tickVal);\r\n\r\n\t\t\t\tvar exp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\tvar significand = Math.floor(tickVal / Math.pow(10, exp)) + 1;\r\n\r\n\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t++exp;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t}\r\n\r\n\t\t\tvar lastTick = getValueOrDefault(tickOpts.max, tickVal);\r\n\t\t\tticks.push(lastTick);\r\n\r\n\t\t\tif (!me.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar start = me.start;\r\n\t\t\tvar newVal = +me.getRightValue(value);\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(start);\r\n\t\t\tvar paddingTop = me.paddingTop;\r\n\t\t\tvar paddingBottom = me.paddingBottom;\r\n\t\t\tvar paddingLeft = me.paddingLeft;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.left + paddingLeft;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.width - (paddingLeft + me.paddingRight);\r\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t\tpixel += paddingLeft;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downard on a screen\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.top + paddingTop;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.height - (paddingTop + paddingBottom);\r\n\t\t\t\t\tpixel = (me.bottom - paddingBottom) - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar offset;\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\r\n\t\t\tvar value;\r\n\t\t\tvar innerDimension;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left - me.paddingLeft) * range / innerDimension);\r\n\t\t\t} else {\r\n\t\t\t\tinnerDimension = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\tvalue = Math.pow(10, (me.bottom - me.paddingBottom - pixel) * range / innerDimension) / me.start;\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"logarithmic\", LogarithmicScale, defaultConfig);\r\n\r\n};\n},{}],42:[function(require,module,exports){\n\"use strict\";\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t//Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tlineArc: false,\r\n\t\tposition: \"chartArea\",\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: \"rgba(0, 0, 0, 0.1)\",\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t//Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t//String - The colour of the label backdrop\r\n\t\t\tbackdropColor: \"rgba(255,255,255,0.75)\",\r\n\r\n\t\t\t//Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t//Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t//Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t//Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\r\n\t\tgetValueCount: function() {\r\n\t\t\treturn this.chart.data.labels.length;\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tme.width = me.maxWidth;\r\n\t\t\tme.height = me.maxHeight;\r\n\t\t\tme.xCenter = Math.round(me.width / 2);\r\n\t\t\tme.yCenter = Math.round(me.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\r\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tme.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\t/*\r\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t\t *\r\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t\t *\r\n\t\t\t * Solution:\r\n\t\t\t *\r\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t\t * at each index we check if the text overlaps.\r\n\t\t\t *\r\n\t\t\t * Where it does, we store that angle and that index.\r\n\t\t\t *\r\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t\t *\r\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t\t * along with labels.\r\n\t\t\t *\r\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t\t *\r\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t\t * and position it in the most space efficient manner\r\n\t\t\t *\r\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t\t */\r\n\r\n\t\t\tvar pointLabels = this.options.pointLabels;\r\n\t\t\tvar pointLabelFontSize = helpers.getValueOrDefault(pointLabels.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tvar pointLabeFontStyle = helpers.getValueOrDefault(pointLabels.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\tvar pointLabeFontFamily = helpers.getValueOrDefault(pointLabels.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\t\tvar largestPossibleRadius = helpers.min([(this.height / 2 - pointLabelFontSize - 5), this.width / 2]),\r\n\t\t\t\tpointPosition,\r\n\t\t\t\ti,\r\n\t\t\t\ttextWidth,\r\n\t\t\t\thalfTextWidth,\r\n\t\t\t\tfurthestRight = this.width,\r\n\t\t\t\tfurthestRightIndex,\r\n\t\t\t\tfurthestRightAngle,\r\n\t\t\t\tfurthestLeft = 0,\r\n\t\t\t\tfurthestLeftIndex,\r\n\t\t\t\tfurthestLeftAngle,\r\n\t\t\t\txProtrusionLeft,\r\n\t\t\t\txProtrusionRight,\r\n\t\t\t\tradiusReductionRight,\r\n\t\t\t\tradiusReductionLeft,\r\n\t\t\t\tmaxWidthRadius;\r\n\t\t\tthis.ctx.font = pointLabeFont;\r\n\r\n\t\t\tfor (i = 0; i < this.getValueCount(); i++) {\r\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\r\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\r\n\t\t\t\ttextWidth = this.ctx.measureText(this.pointLabels[i] ? this.pointLabels[i] : '').width + 5;\r\n\t\t\t\tif (i === 0 || i === this.getValueCount() / 2) {\r\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\r\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\r\n\t\t\t\t\t// w/left and right text sizes\r\n\t\t\t\t\thalfTextWidth = textWidth / 2;\r\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i < this.getValueCount() / 2) {\r\n\t\t\t\t\t// Less than half the values means we'll left align the text\r\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\r\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\r\n\t\t\t\t\t\tfurthestRightIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (i > this.getValueCount() / 2) {\r\n\t\t\t\t\t// More than half the values means we'll right align the text\r\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\r\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\r\n\t\t\t\t\t\tfurthestLeftIndex = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\txProtrusionLeft = furthestLeft;\r\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\r\n\r\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\r\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\r\n\r\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI / 2);\r\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI / 2);\r\n\r\n\t\t\t// Ensure we actually need to reduce the size of the chart\r\n\t\t\tradiusReductionRight = (helpers.isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\r\n\t\t\tradiusReductionLeft = (helpers.isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\r\n\r\n\t\t\tthis.drawingArea = Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2);\r\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea;\r\n\r\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n\t\t\t// Always vertically in the centre as the text height doesn't change\r\n\t\t\tme.yCenter = Math.round((me.height / 2) + me.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.getValueCount();\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\r\n\t\t\treturn index * angleMultiplier - (Math.PI / 2);\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\treturn (me.max - value) * scalingFactor;\r\n\t\t\t} else {\r\n\t\t\t\treturn (value - me.min) * scalingFactor;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar thisAngle = me.getIndexAngle(index);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\r\n\t\tgetBasePosition: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar angleLineOpts = opts.angleLines;\r\n\t\t\tvar pointLabelOpts = opts.pointLabels;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\t\t// Tick Font\r\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || opts.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\r\n\t\t\t\t\t\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n\t\t\t\t\t\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\r\n\t\t\t\t\t\t\tif (opts.lineArc) {\r\n\t\t\t\t\t\t\t\t// Draw circular arcs between the points\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.arc(me.xCenter, me.yCenter, yCenterOffset, 0, Math.PI * 2);\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Draw straight lines connecting each index\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tfor (var i = 0; i < me.getValueCount(); i++) {\r\n\t\t\t\t\t\t\t\t\tvar pointPosition = me.getPointPosition(i, yCenterOffset);\r\n\t\t\t\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (tickOpts.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!opts.lineArc) {\r\n\t\t\t\t\tctx.lineWidth = angleLineOpts.lineWidth;\r\n\t\t\t\t\tctx.strokeStyle = angleLineOpts.color;\r\n\r\n\t\t\t\t\tvar outerDistance = me.getDistanceFromCenterForValue(opts.reverse ? me.min : me.max);\r\n\r\n\t\t\t\t\t// Point Label Font\r\n\t\t\t\t\tvar pointLabelFontSize = getValueOrDefault(pointLabelOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\t\tvar pointLabeFontStyle = getValueOrDefault(pointLabelOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\t\tvar pointLabeFontFamily = getValueOrDefault(pointLabelOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\t\tvar pointLabeFont = helpers.fontString(pointLabelFontSize, pointLabeFontStyle, pointLabeFontFamily);\r\n\r\n\t\t\t\t\tfor (var i = me.getValueCount() - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (angleLineOpts.display) {\r\n\t\t\t\t\t\t\tvar outerPosition = me.getPointPosition(i, outerDistance);\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.moveTo(me.xCenter, me.yCenter);\r\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\t\t\tvar pointLabelPosition = me.getPointPosition(i, outerDistance + 5);\r\n\r\n\t\t\t\t\t\t// Keep this in loop since we may support array properties here\r\n\t\t\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\tctx.font = pointLabeFont;\r\n\t\t\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\t\t\t\tvar pointLabels = me.pointLabels,\r\n\t\t\t\t\t\t\tlabelsCount = pointLabels.length,\r\n\t\t\t\t\t\t\thalfLabelsCount = pointLabels.length / 2,\r\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount / 2,\r\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\r\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i === halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t} else if (i < halfLabelsCount) {\r\n\t\t\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textAlign = 'right';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\r\n\t\t\t\t\t\tif (exactQuarter) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t} else if (upperHalf) {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tctx.fillText(pointLabels[i] ? pointLabels[i] : '', pointLabelPosition.x, pointLabelPosition.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"radialLinear\", LinearRadialScale, defaultConfig);\r\n\r\n};\r\n\n},{}],43:[function(require,module,exports){\n/*global window: false */\r\n\"use strict\";\r\n\r\nvar moment = require(1);\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar time = {\r\n\t\tunits: [{\r\n\t\t\tname: 'millisecond',\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t}, {\r\n\t\t\tname: 'second',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'minute',\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t}, {\r\n\t\t\tname: 'hour',\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t}, {\r\n\t\t\tname: 'day',\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t}, {\r\n\t\t\tname: 'week',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'month',\r\n\t\t\tmaxStep: 3\r\n\t\t}, {\r\n\t\t\tname: 'quarter',\r\n\t\t\tmaxStep: 4\r\n\t\t}, {\r\n\t\t\tname: 'year',\r\n\t\t\tmaxStep: false\r\n\t\t}]\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: \"bottom\",\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\t'millisecond': 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\t'second': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'minute': 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\t'hour': 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\t'day': 'll', // Sep 4 2015\r\n\t\t\t\t'week': 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\t'month': 'MMM YYYY', // Sept 2015\r\n\t\t\t\t'quarter': '[Q]Q - YYYY', // Q3\r\n\t\t\t\t'year': 'YYYY' // 2015\r\n\t\t\t}\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tgetLabelMoment: function(datasetIndex, index) {\r\n\t\t\treturn this.labelMoments[datasetIndex][index];\r\n\t\t},\r\n\t\tgetMomentStartOf: function(tick) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\r\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\r\n\t\t\t} else {\r\n\t\t\t\treturn tick.clone().startOf(me.tickUnit);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.labelMoments = [];\r\n\r\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\r\n\t\t\t// these\r\n\t\t\tvar scaleLabelMoments = [];\r\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\r\n\t\t\t\thelpers.each(me.chart.data.labels, function(label, index) {\r\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\r\n\r\n\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, me);\r\n\r\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\r\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\r\n\t\t\t} else {\r\n\t\t\t\tme.firstTick = null;\r\n\t\t\t\tme.lastTick = null;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar momentsForDataset = [];\r\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\r\n\t\t\t\t\thelpers.each(dataset.data, function(value, index) {\r\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (me.options.time.round) {\r\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\r\n\r\n\t\t\t\t\t\t\tif (datasetVisible) {\r\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\r\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, me);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no labels. Use the ones from the scale\r\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.labelMoments.push(momentsForDataset);\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Set these after we've done all the data\r\n\t\t\tif (me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.time.max) {\r\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\r\n\t\t\t}\r\n\r\n\t\t\t// We will modify these, so clone for later\r\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\r\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\r\n\t\t},\r\n\t\tbuildTicks: function(index) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.ctx.save();\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\r\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\r\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\t\t\tme.ctx.font = tickLabelFont;\r\n\r\n\t\t\tme.ticks = [];\r\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\r\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\r\n\r\n\t\t\t// Set unit override if applicable\r\n\t\t\tif (me.options.time.unit) {\r\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\r\n\t\t\t} else {\r\n\t\t\t\t// Determine the smallest needed unit of the time\r\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\r\n\t\t\t\t// Crude approximation of what the label length might be\r\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\r\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\r\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\r\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\r\n\r\n\t\t\t\t// Start as small as possible\r\n\t\t\t\tme.tickUnit = 'millisecond';\r\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\r\n\r\n\t\t\t\tvar unitDefinitionIndex = 0;\r\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t// While we aren't ideal and we don't have units left\r\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\r\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\r\n\t\t\t\t\tme.unitScale = 1;\r\n\r\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\r\n\t\t\t\t\t\t// Use one of the prefedined steps\r\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\r\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\r\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\r\n\t\t\t\t\t\t// We have a max step. Scale this unit\r\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Move to the next unit up\r\n\t\t\t\t\t\t++unitDefinitionIndex;\r\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\r\n\r\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\r\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\r\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\r\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\r\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar roundedStart;\r\n\r\n\t\t\t// Only round the first tick if we have no hard minimum\r\n\t\t\tif (!me.options.time.min) {\r\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\r\n\t\t\t\troundedStart = me.firstTick;\r\n\t\t\t} else {\r\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Only round the last tick if we have no hard maximum\r\n\t\t\tif (!me.options.time.max) {\r\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\r\n\t\t\t\tif (roundedEnd.diff(me.lastTick, me.tickUnit, true) !== 0) {\r\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\r\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.smallestLabelSeparation = me.width;\r\n\r\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tfor (var i = 1; i < me.labelMoments[datasetIndex].length; i++) {\r\n\t\t\t\t\tme.smallestLabelSeparation = Math.min(me.smallestLabelSeparation, me.labelMoments[datasetIndex][i].diff(me.labelMoments[datasetIndex][i - 1], me.tickUnit, true));\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Tick displayFormat override\r\n\t\t\tif (me.options.time.displayFormat) {\r\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\r\n\t\t\tme.ticks.push(me.firstTick.clone());\r\n\r\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\r\n\t\t\tfor (var i = 1; i <= me.scaleSizeInUnits; ++i) {\r\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\r\n\r\n\t\t\t\t// Are we greater than the max time\r\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i % me.unitScale === 0) {\r\n\t\t\t\t\tme.ticks.push(newTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Always show the right tick\r\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\r\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\r\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\r\n\t\t\t\t// but the last tick was not rounded.\r\n\t\t\t\tif (me.options.time.max) {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\r\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.ctx.restore();\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n\r\n\t\t\tif (typeof me.chart.data.datasets[datasetIndex].data[0] === 'object') {\r\n\t\t\t\tlabel = me.getRightValue(me.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (me.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function tickFormatFunction(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t} else {\r\n\t\t\t\treturn formattedTick;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tickMoments = me.ticks;\r\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labelMoment = value && value.isValid && value.isValid() ? value : me.getLabelMoment(datasetIndex, index);\r\n\r\n\t\t\tif (labelMoment) {\r\n\t\t\t\tvar offset = labelMoment.diff(me.firstTick, me.tickUnit, true);\r\n\r\n\t\t\t\tvar decimal = offset / me.scaleSizeInUnits;\r\n\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\t\tvar valueWidth = innerWidth / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\t\t\tvar valueHeight = innerHeight / Math.max(me.ticks.length - 1, 1);\r\n\t\t\t\t\tvar heightOffset = (innerHeight * decimal) + me.paddingTop;\r\n\r\n\t\t\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left + me.paddingLeft : me.top + me.paddingTop)) / innerDimension;\r\n\t\t\toffset *= me.scaleSizeInUnits;\r\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\r\n\t\t},\r\n\t\tparseTime: function(label) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (typeof me.options.time.parser === 'string') {\r\n\t\t\t\treturn moment(label, me.options.time.parser);\r\n\t\t\t}\r\n\t\t\tif (typeof me.options.time.parser === 'function') {\r\n\t\t\t\treturn me.options.time.parser(label);\r\n\t\t\t}\r\n\t\t\t// Date objects\r\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t\treturn moment(label);\r\n\t\t\t}\r\n\t\t\t// Moment support\r\n\t\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\r\n\t\t\t\tconsole.warn(\"options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale\");\r\n\t\t\t\treturn me.options.time.format(label);\r\n\t\t\t}\r\n\t\t\t// Moment format parsing\r\n\t\t\treturn moment(label, me.options.time.format);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType(\"time\", TimeScale, defaultConfig);\r\n\r\n};\r\n\n},{\"1\":1}]},{},[7])(7)\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chart.js/dist/Chart.js\n ** module id = 132\n ** module chunks = 3\n **/","/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/nprogress/nprogress.js\n ** module id = 231\n ** module chunks = 3\n **/","module.exports = __webpack_public_path__ + \"static/fonts/fontawesome-webfont.25a3241.eot\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/font-awesome/fonts/fontawesome-webfont.eot\n ** module id = 233\n ** module chunks = 3\n **/","module.exports = __webpack_public_path__ + \"static/fonts/fontawesome-webfont.1dc35d2.ttf\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/font-awesome/fonts/fontawesome-webfont.ttf?v=4.6.3\n ** module id = 235\n ** module chunks = 3\n **/","module.exports = __webpack_public_path__ + \"static/fonts/fontawesome-webfont.e6cf7c6.woff2\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/font-awesome/fonts/fontawesome-webfont.woff2?v=4.6.3\n ** module id = 236\n ** module chunks = 3\n **/","module.exports = __webpack_public_path__ + \"static/fonts/fontawesome-webfont.c8ddf1e.woff\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/font-awesome/fonts/fontawesome-webfont.woff?v=4.6.3\n ** module id = 237\n ** module chunks = 3\n **/","module.exports = __webpack_public_path__ + \"static/img/fontawesome-webfont.d7c6390.svg\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/font-awesome/fonts/fontawesome-webfont.svg?v=4.6.3\n ** module id = 238\n ** module chunks = 3\n **/","/*!\n * vue-resource v0.9.1\n * https://github.com/vuejs/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING = 2;\n\nfunction Promise$2(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$2.reject = function (r) {\n    return new Promise$2(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$2.resolve = function (x) {\n    return new Promise$2(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$2.all = function all(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        var count = 0,\n            result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$2.race = function race(iterable) {\n    return new Promise$2(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$2.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$2.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$2(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nvar PromiseObj = window.Promise || Promise$2;\n\nfunction Promise$1(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise$1.all = function (iterable, context) {\n    return new Promise$1(PromiseObj.all(iterable), context);\n};\n\nPromise$1.resolve = function (value, context) {\n    return new Promise$1(PromiseObj.resolve(value), context);\n};\n\nPromise$1.reject = function (reason, context) {\n    return new Promise$1(PromiseObj.reject(reason), context);\n};\n\nPromise$1.race = function (iterable, context) {\n    return new Promise$1(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise$1.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new Promise$1(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n        callback.call(this);\n        return value;\n    }, function (reason) {\n        callback.call(this);\n        return PromiseObj.reject(reason);\n    });\n};\n\nvar debug = false;\nvar util = {};\nvar array = [];\nfunction Util (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n}\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\nfunction isBoolean(val) {\n    return val === true || val === false;\n}\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise$1.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({ $vm: obj, $options: opts }), fn, { $options: opts });\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\nfunction root (options, next) {\n\n    var url = next(options);\n\n    if (isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n}\n\nfunction query (options, next) {\n\n    var urlParams = Object.keys(Url.options.params),\n        query = {},\n        url = next(options);\n\n    each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n}\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url),\n        expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'],\n        variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null,\n                        values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key],\n        result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = operator === '+' || operator === '#' ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\nfunction template (options) {\n\n    var variables = [],\n        url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n}\n\n/**\n * Service for URL templating.\n */\n\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var self = this || {},\n        options = url,\n        transform;\n\n    if (isString(url)) {\n        options = { url: url, params: params };\n    }\n\n    options = merge({}, Url.options, self.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [],\n        escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj),\n        plain = isPlainObject(obj),\n        hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nfunction xdrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xdr = new XDomainRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith(xdr.responseText, {\n                status: xdr.status,\n                statusText: xdr.statusText\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xdr.abort();\n        };\n\n        xdr.open(request.method, request.getUrl(), true);\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n}\n\nvar ORIGIN_URL = Url.parse(location.href);\nvar SUPPORTS_CORS = 'withCredentials' in new XMLHttpRequest();\n\nfunction cors (request, next) {\n\n    if (!isBoolean(request.crossOrigin) && crossOrigin(request)) {\n        request.crossOrigin = true;\n    }\n\n    if (request.crossOrigin) {\n\n        if (!SUPPORTS_CORS) {\n            request.client = xdrClient;\n        }\n\n        delete request.emulateHTTP;\n    }\n\n    next();\n}\n\nfunction crossOrigin(request) {\n\n    var requestUrl = Url.parse(Url(request));\n\n    return requestUrl.protocol !== ORIGIN_URL.protocol || requestUrl.host !== ORIGIN_URL.host;\n}\n\nfunction body (request, next) {\n\n    if (request.emulateJSON && isPlainObject(request.body)) {\n        request.body = Url.params(request.body);\n        request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    }\n\n    if (isFormData(request.body)) {\n        delete request.headers['Content-Type'];\n    }\n\n    if (isPlainObject(request.body)) {\n        request.body = JSON.stringify(request.body);\n    }\n\n    next(function (response) {\n\n        var contentType = response.headers['Content-Type'];\n\n        if (isString(contentType) && contentType.indexOf('application/json') === 0) {\n\n            try {\n                response.data = response.json();\n            } catch (e) {\n                response.data = null;\n            }\n        } else {\n            response.data = response.text();\n        }\n    });\n}\n\nfunction jsonpClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var name = request.jsonp || 'callback',\n            callback = '_jsonp' + Math.random().toString(36).substr(2),\n            body = null,\n            handler,\n            script;\n\n        handler = function (event) {\n\n            var status = 0;\n\n            if (event.type === 'load' && body !== null) {\n                status = 200;\n            } else if (event.type === 'error') {\n                status = 404;\n            }\n\n            resolve(request.respondWith(body, { status: status }));\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        request.params[name] = callback;\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n}\n\nfunction jsonp (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next(function (response) {\n\n        if (request.method == 'JSONP') {\n            response.data = response.json();\n        }\n    });\n}\n\nfunction before (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n}\n\n/**\n * HTTP method override Interceptor.\n */\n\nfunction method (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers['X-HTTP-Method-Override'] = request.method;\n        request.method = 'POST';\n    }\n\n    next();\n}\n\nfunction header (request, next) {\n\n    request.method = request.method.toUpperCase();\n    request.headers = assign({}, Http.headers.common, !request.crossOrigin ? Http.headers.custom : {}, Http.headers[request.method.toLowerCase()], request.headers);\n\n    next();\n}\n\n/**\n * Timeout Interceptor.\n */\n\nfunction timeout (request, next) {\n\n    var timeout;\n\n    if (request.timeout) {\n        timeout = setTimeout(function () {\n            request.cancel();\n        }, request.timeout);\n    }\n\n    next(function (response) {\n\n        clearTimeout(timeout);\n    });\n}\n\nfunction xhrClient (request) {\n    return new Promise$1(function (resolve) {\n\n        var xhr = new XMLHttpRequest(),\n            handler = function (event) {\n\n            var response = request.respondWith('response' in xhr ? xhr.response : xhr.responseText, {\n                status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText),\n                headers: parseHeaders(xhr.getAllResponseHeaders())\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () {\n            return xhr.abort();\n        };\n\n        xhr.open(request.method, request.getUrl(), true);\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onerror = handler;\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.getBody());\n    });\n}\n\nfunction parseHeaders(str) {\n\n    var headers = {},\n        value,\n        name,\n        i;\n\n    each(trim(str).split('\\n'), function (row) {\n\n        i = row.indexOf(':');\n        name = trim(row.slice(0, i));\n        value = trim(row.slice(i + 1));\n\n        if (headers[name]) {\n\n            if (isArray(headers[name])) {\n                headers[name].push(value);\n            } else {\n                headers[name] = [headers[name], value];\n            }\n        } else {\n\n            headers[name] = value;\n        }\n    });\n\n    return headers;\n}\n\nfunction Client (context) {\n\n    var reqHandlers = [sendRequest],\n        resHandlers = [],\n        handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new Promise$1(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn('Invalid interceptor of type ' + typeof handler + ', must be a function');\n                    next();\n                }\n            }\n\n            function next(response) {\n                when(response, function (response) {\n\n                    if (isFunction(response)) {\n\n                        resHandlers.unshift(response);\n                    } else if (isObject(response)) {\n\n                        resHandlers.forEach(function (handler) {\n                            handler.call(context, response);\n                        });\n\n                        resolve(response);\n\n                        return;\n                    }\n\n                    exec();\n                });\n            }\n\n            exec();\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n}\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || xhrClient;\n\n    resolve(client(request));\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\n * HTTP Response.\n */\n\nvar Response = function () {\n    function Response(body, _ref) {\n        var url = _ref.url;\n        var headers = _ref.headers;\n        var status = _ref.status;\n        var statusText = _ref.statusText;\n        classCallCheck(this, Response);\n\n\n        this.url = url;\n        this.body = body;\n        this.headers = headers || {};\n        this.status = status || 0;\n        this.statusText = statusText || '';\n        this.ok = status >= 200 && status < 300;\n    }\n\n    Response.prototype.text = function text() {\n        return this.body;\n    };\n\n    Response.prototype.blob = function blob() {\n        return new Blob([this.body]);\n    };\n\n    Response.prototype.json = function json() {\n        return JSON.parse(this.body);\n    };\n\n    return Response;\n}();\n\nvar Request = function () {\n    function Request(options) {\n        classCallCheck(this, Request);\n\n\n        this.method = 'GET';\n        this.body = null;\n        this.params = {};\n        this.headers = {};\n\n        assign(this, options);\n    }\n\n    Request.prototype.getUrl = function getUrl() {\n        return Url(this);\n    };\n\n    Request.prototype.getBody = function getBody() {\n        return this.body;\n    };\n\n    Request.prototype.respondWith = function respondWith(body, options) {\n        return new Response(body, assign(options || {}, { url: this.getUrl() }));\n    };\n\n    return Request;\n}();\n\n/**\n * Service for sending network requests.\n */\n\nvar CUSTOM_HEADERS = { 'X-Requested-With': 'XMLHttpRequest' };\nvar COMMON_HEADERS = { 'Accept': 'application/json, text/plain, */*' };\nvar JSON_CONTENT_TYPE = { 'Content-Type': 'application/json;charset=utf-8' };\n\nfunction Http(options) {\n\n    var self = this || {},\n        client = Client(self.$vm);\n\n    defaults(options || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options)).then(function (response) {\n\n        return response.ok ? response : Promise$1.reject(response);\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return Promise$1.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    custom: CUSTOM_HEADERS,\n    common: COMMON_HEADERS\n};\n\nHttp.interceptors = [before, timeout, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, options) {\n        return this(assign(options || {}, { url: url, method: method }));\n    };\n});\n\n['post', 'put', 'patch'].forEach(function (method) {\n\n    Http[method] = function (url, body, options) {\n        return this(assign(options || {}, { url: url, method: method, body: body }));\n    };\n});\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this || {},\n        resource = {};\n\n    actions = assign({}, Resource.actions, actions);\n\n    each(actions, function (action, name) {\n\n        action = merge({ url: url, params: params || {} }, options, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = assign({}, action),\n        params = {},\n        body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options.body = body;\n    options.params = assign({}, options.params, params);\n\n    return options;\n}\n\nResource.actions = {\n\n    get: { method: 'GET' },\n    save: { method: 'POST' },\n    query: { method: 'GET' },\n    update: { method: 'PUT' },\n    remove: { method: 'DELETE' },\n    delete: { method: 'DELETE' }\n\n};\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = Promise$1;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                var _this = this;\n\n                return function (executor) {\n                    return new Vue.Promise(executor, _this);\n                };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/dist/vue-resource.common.js\n ** module id = 285\n ** module chunks = 3\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 286\n ** module chunks = 3\n **/","/*!\n * Vuex v0.8.2\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n   *\n   * @param {*} obj\n   * @return {*}\n   */\n\n  function deepClone(obj) {\n    if (Array.isArray(obj)) {\n      return obj.map(deepClone);\n    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n      var cloned = {};\n      var keys = Object.keys(obj);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        cloned[key] = deepClone(obj[key]);\n      }\n      return cloned;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var noop = function noop() {};\n      var unwatch = vm.$watch(noop, noop);\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  var devtoolMiddleware = {\n    onInit: function onInit(state, store) {\n      if (!hook) return;\n      hook.emit('vuex:init', store);\n      hook.on('vuex:travel-to-state', function (targetState) {\n        store._dispatching = true;\n        store._vm.state = targetState;\n        store._dispatching = false;\n      });\n    },\n    onMutation: function onMutation(mutation, state) {\n      if (!hook) return;\n      hook.emit('vuex:mutation', mutation, state);\n    }\n  };\n\n  function override (Vue) {\n    var version = Number(Vue.version.split('.')[0]);\n\n    if (version >= 2) {\n      var usesInit = Vue.config._lifecycleHooks.indexOf('init') > -1;\n      Vue.mixin(usesInit ? { init: vuexInit } : { beforeCreate: vuexInit });\n    } else {\n      (function () {\n        // override init and inject vuex init procedure\n        // for 1.x backwards compatibility.\n        var _init = Vue.prototype._init;\n        Vue.prototype._init = function () {\n          var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n          options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n          _init.call(this, options);\n        };\n      })();\n    }\n\n    /**\n     * Vuex init hook, injected into each instances init hooks list.\n     */\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var actions = vuex.actions;\n        var getters = vuex.getters;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n          }\n        }\n      }\n    }\n\n    /**\n     * Setter for all getter properties.\n     */\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    /**\n     * Define a Vuex getter on an instance.\n     *\n     * @param {Vue} vm\n     * @param {String} key\n     * @param {Function} getter\n     */\n\n    function defineVuexGetter(vm, key, getter) {\n      if (typeof getter !== 'function') {\n        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n      } else {\n        Object.defineProperty(vm, key, {\n          enumerable: true,\n          configurable: true,\n          get: makeComputedGetter(vm.$store, getter),\n          set: setter\n        });\n      }\n    }\n\n    /**\n     * Make a computed getter, using the same caching mechanism of computed\n     * properties. In addition, it is cached on the raw getter function using\n     * the store's unique cache id. This makes the same getter shared\n     * across all components use the same underlying watcher, and makes\n     * the getter evaluated only once during every flush.\n     *\n     * @param {Store} store\n     * @param {Function} getter\n     */\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (vm) {\n        return getter(vm.state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    /**\n     * Make a bound-to-store version of a raw action function.\n     *\n     * @param {Store} store\n     * @param {Function} action\n     * @param {String} key\n     */\n\n    function makeBoundAction(store, action, key) {\n      if (typeof action !== 'function') {\n        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n      }\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} middlewares\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$middlewares = _ref.middlewares;\n      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: {\n          state: state\n        }\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      this._setupMiddlewares(middlewares, state);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    createClass(Store, [{\n      key: 'dispatch',\n\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n      value: function dispatch(type) {\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        var silent = false;\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : _typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          payload = [type.payload];\n          if (type.silent) silent = true;\n          type = type.type;\n        }\n        var mutation = this._mutations[type];\n        var state = this.state;\n        if (mutation) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(mutation)) {\n            mutation.forEach(function (m) {\n              return m.apply(undefined, [state].concat(toConsumableArray(payload)));\n            });\n          } else {\n            mutation.apply(undefined, [state].concat(toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          if (!silent) this._applyMiddlewares(type, payload);\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {Function} fn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(fn, cb, options) {\n        var _this2 = this;\n\n        if (typeof fn !== 'function') {\n          console.error('Vuex store.watch only accepts function.');\n          return;\n        }\n        return this._vm.$watch(function () {\n          return fn(_this2.state);\n        }, cb, options);\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        Object.keys(modules).forEach(function (key) {\n          Vue.set(state, key, modules[key].state || {});\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        var allMutations = [this._rootMutations];\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n          if (!module || !module.mutations) return;\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [state[key]].concat(args));\n            };\n          });\n          allMutations.push(mutations);\n        });\n        this._mutations = mergeObjects(allMutations);\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this3 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, 'state', function () {\n          if (!_this3._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n\n      /**\n       * Setup the middlewares. The devtools middleware is always\n       * included, since it does nothing if no devtool is detected.\n       *\n       * A middleware can demand the state it receives to be\n       * \"snapshots\", i.e. deep clones of the actual state tree.\n       *\n       * @param {Array} middlewares\n       * @param {Object} state\n       */\n\n    }, {\n      key: '_setupMiddlewares',\n      value: function _setupMiddlewares(middlewares, state) {\n        var _this4 = this;\n\n        this._middlewares = [devtoolMiddleware].concat(middlewares);\n        this._needSnapshots = middlewares.some(function (m) {\n          return m.snapshot;\n        });\n        if (this._needSnapshots) {\n          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n        }\n        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n        // call init hooks\n        this._middlewares.forEach(function (m) {\n          if (m.onInit) {\n            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n          }\n        });\n      }\n\n      /**\n       * Apply the middlewares on a given mutation.\n       *\n       * @param {String} type\n       * @param {Array} payload\n       */\n\n    }, {\n      key: '_applyMiddlewares',\n      value: function _applyMiddlewares(type, payload) {\n        var _this5 = this;\n\n        var state = this.state;\n        var prevSnapshot = this._prevSnapshot;\n        var snapshot = void 0,\n            clonedPayload = void 0;\n        if (this._needSnapshots) {\n          snapshot = this._prevSnapshot = deepClone(state);\n          clonedPayload = deepClone(payload);\n        }\n        this._middlewares.forEach(function (m) {\n          if (m.onMutation) {\n            if (m.snapshot) {\n              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n            } else {\n              m.onMutation({ type: type, payload: payload }, state, _this5);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm.state;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Vuex root state is read only.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    if (Vue) {\n      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n      return;\n    }\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  var index = {\n    Store: Store,\n    install: install\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 287\n ** module chunks = 3\n **/"],"sourceRoot":""}